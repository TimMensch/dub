<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="classdub_1_1_matrix" kind="class" prot="public">
    <compoundname>dub::Matrix</compoundname>
    <includes refid="matrix_8h" local="no">matrix.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classdub_1_1_matrix_1a134af4a94d273c34cc99e7645fb97917" prot="protected" static="no" mutable="no">
        <type>double *</type>
        <definition>double* dub::Matrix::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="108" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdub_1_1_matrix_1afbb3dac9aac8db0e6feffb8c61954065" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dub::Matrix::rows_</definition>
        <argsstring></argsstring>
        <name>rows_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="109" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdub_1_1_matrix_1a9820706da6cb36cf14dfefbb4eabc92d" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dub::Matrix::cols_</definition>
        <argsstring></argsstring>
        <name>cols_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="110" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdub_1_1_matrix_1a2d7bfdf38d81c5ec81dff23030d2b569" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dub::Matrix::Matrix</definition>
        <argsstring>()</argsstring>
        <name>Matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="21" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1a87d276a9bfb52dbe228a19c2eae63b4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dub::Matrix::Matrix</definition>
        <argsstring>(int rows, int cols)</argsstring>
        <name>Matrix</name>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="23" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1a7bbf87936b3a48a69fcc1a74038bdd25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dub::Matrix::~Matrix</definition>
        <argsstring>()</argsstring>
        <name>~Matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="27" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1a91cd7ece7296a2f2b37f2b629dc66fed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t dub::Matrix::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return size of matrix (rows * cols). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="32" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1ac13eec5120f1be537122fc2b9a35d12e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double dub::Matrix::cols</definition>
        <argsstring>()</argsstring>
        <name>cols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="36" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1aad380f21efca0eb8d076fa7801efe903" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double dub::Matrix::rows</definition>
        <argsstring>()</argsstring>
        <name>rows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="40" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1a7a47bc085de140093ba358d345d58df7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* dub::Matrix::give_me_tea</definition>
        <argsstring>()</argsstring>
        <name>give_me_tea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dummy template based class method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="47" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1a27fea405cf08ac087a11eefbaf4a342f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dub::Matrix::operator size_t</definition>
        <argsstring>()</argsstring>
        <name>operator size_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="51" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1ac159906fa5480fdc9539a7be1e1825ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dub::Matrix::mul</definition>
        <argsstring>(TMat&lt; int &gt; other)</argsstring>
        <name>mul</name>
        <param>
          <type><ref refid="classdub_1_1_t_mat" kindref="compound">TMat</ref>&lt; int &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="55" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1a5bf5b5aee77c4e4a4cf906ce785fe37b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dub::Matrix::do_something</definition>
        <argsstring>(int i, bool fast=false)</argsstring>
        <name>do_something</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="59" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1a1a23761eddbbe7d2c12b58570a089abb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dub::Matrix::bad_method</definition>
        <argsstring>(int i)</argsstring>
        <name>bad_method</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="63" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1a5d8ae4699d499cb9e4292c2ff765d3a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dub::Matrix::use_other_lib</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>use_other_lib</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="67" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1a90798c27b8b4017a939f804481eb50ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int *</type>
        <definition>int* dub::Matrix::ptr</definition>
        <argsstring>()</argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="71" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1a3bccec6b300f49c7cd4b394dc93a3354" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* dub::Matrix::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="75" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1af64ee96907ba127c876b9ebb9a65cc72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int *</type>
        <definition>int* dub::Matrix::lua_thing</definition>
        <argsstring>(int a, lua_State *L, int b)</argsstring>
        <name>lua_thing</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="79" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classdub_1_1_matrix_1aec9687539871e56fc39348fc7f2ef2ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LuaStackSize</type>
        <definition>LuaStackSize dub::Matrix::work_with_lua</definition>
        <argsstring>(int a, int b)</argsstring>
        <name>work_with_lua</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="83" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="83" bodyend="86"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classdub_1_1_matrix_1ad21255c4a1457c9969b6092ee40e0870" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdub_1_1_matrix" kindref="compound">Matrix</ref> *</type>
        <definition>static Matrix* dub::Matrix::MakeMatrix</definition>
        <argsstring>(int rows, int cols)</argsstring>
        <name>MakeMatrix</name>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Named constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="90" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="90" bodyend="92"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdub_1_1_matrix_1a068b8c574a47b79df894bf1f4b3e1946" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int dub::Matrix::private_method</definition>
        <argsstring>()</argsstring>
        <name>private_method</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="96" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="96" bodyend="99"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdub_1_1_matrix_1aea9c51add856fe990e6474410849f8e3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int dub::Matrix::protected_method</definition>
        <argsstring>()</argsstring>
        <name>protected_method</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="103" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="103" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classdub_1_1_matrix" kindref="compound">Matrix</ref> class.</para><para><simplesect kind="par"><title>Bindings info:</title><para>var_from_dub:&apos;dummy value&apos; other_from_dub: &quot;some other value&quot; ignore: &apos;bad_method&apos; </para></simplesect>
</para>    </detaileddescription>
    <location file="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" line="19" bodyfile="/Users/gaspard/git/dub/test/fixtures/app/include/matrix.h" bodystart="19" bodyend="111"/>
    <listofallmembers>
      <member refid="classdub_1_1_matrix_1a1a23761eddbbe7d2c12b58570a089abb" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>bad_method</name></member>
      <member refid="classdub_1_1_matrix_1ac13eec5120f1be537122fc2b9a35d12e" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>cols</name></member>
      <member refid="classdub_1_1_matrix_1a9820706da6cb36cf14dfefbb4eabc92d" prot="protected" virt="non-virtual"><scope>dub::Matrix</scope><name>cols_</name></member>
      <member refid="classdub_1_1_matrix_1a134af4a94d273c34cc99e7645fb97917" prot="protected" virt="non-virtual"><scope>dub::Matrix</scope><name>data_</name></member>
      <member refid="classdub_1_1_matrix_1a5bf5b5aee77c4e4a4cf906ce785fe37b" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>do_something</name></member>
      <member refid="classdub_1_1_matrix_1a7a47bc085de140093ba358d345d58df7" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>give_me_tea</name></member>
      <member refid="classdub_1_1_matrix_1af64ee96907ba127c876b9ebb9a65cc72" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>lua_thing</name></member>
      <member refid="classdub_1_1_matrix_1ad21255c4a1457c9969b6092ee40e0870" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>MakeMatrix</name></member>
      <member refid="classdub_1_1_matrix_1a2d7bfdf38d81c5ec81dff23030d2b569" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>Matrix</name></member>
      <member refid="classdub_1_1_matrix_1a87d276a9bfb52dbe228a19c2eae63b4b" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>Matrix</name></member>
      <member refid="classdub_1_1_matrix_1ac159906fa5480fdc9539a7be1e1825ed" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>mul</name></member>
      <member refid="classdub_1_1_matrix_1a3bccec6b300f49c7cd4b394dc93a3354" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>name</name></member>
      <member refid="classdub_1_1_matrix_1a27fea405cf08ac087a11eefbaf4a342f" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>operator size_t</name></member>
      <member refid="classdub_1_1_matrix_1a068b8c574a47b79df894bf1f4b3e1946" prot="private" virt="non-virtual"><scope>dub::Matrix</scope><name>private_method</name></member>
      <member refid="classdub_1_1_matrix_1aea9c51add856fe990e6474410849f8e3" prot="protected" virt="non-virtual"><scope>dub::Matrix</scope><name>protected_method</name></member>
      <member refid="classdub_1_1_matrix_1a90798c27b8b4017a939f804481eb50ad" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>ptr</name></member>
      <member refid="classdub_1_1_matrix_1aad380f21efca0eb8d076fa7801efe903" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>rows</name></member>
      <member refid="classdub_1_1_matrix_1afbb3dac9aac8db0e6feffb8c61954065" prot="protected" virt="non-virtual"><scope>dub::Matrix</scope><name>rows_</name></member>
      <member refid="classdub_1_1_matrix_1a91cd7ece7296a2f2b37f2b629dc66fed" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>size</name></member>
      <member refid="classdub_1_1_matrix_1a5d8ae4699d499cb9e4292c2ff765d3a1" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>use_other_lib</name></member>
      <member refid="classdub_1_1_matrix_1aec9687539871e56fc39348fc7f2ef2ef" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>work_with_lua</name></member>
      <member refid="classdub_1_1_matrix_1a7bbf87936b3a48a69fcc1a74038bdd25" prot="public" virt="non-virtual"><scope>dub::Matrix</scope><name>~Matrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
