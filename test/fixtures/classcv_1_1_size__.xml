<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="classcv_1_1_size__" kind="class" prot="public">
    <compoundname>cv::Size_</compoundname>
    <includes refid="cxcore_8hpp" local="no">cxcore.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>_Tp</declname>
        <defname>_Tp</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classcv_1_1_size___1a545d43b608de451311855c2ef808642d" prot="public" static="no">
        <type>_Tp</type>
        <definition>typedef _Tp cv::Size_&lt; _Tp &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="346" bodyfile="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" bodystart="346" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classcv_1_1_size___1abfe0367b32c407ddccf5ddf92667c73d" prot="public" static="no" mutable="no">
        <type>_Tp</type>
        <definition>_Tp cv::Size_&lt; _Tp &gt;::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="361" bodyfile="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcv_1_1_size___1a1d289dce6b5d8006a54f3ee0259fc545" prot="public" static="no" mutable="no">
        <type>_Tp</type>
        <definition>_Tp cv::Size_&lt; _Tp &gt;::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="361" bodyfile="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" bodystart="361" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcv_1_1_size___1ae09ae11fd75a16928ca40980ad46a9bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cv::Size_&lt; _Tp &gt;::Size_</definition>
        <argsstring>()</argsstring>
        <name>Size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="348"/>
      </memberdef>
      <memberdef kind="function" id="classcv_1_1_size___1a45c97e9a4930d73fde11c2acc5f371ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cv::Size_&lt; _Tp &gt;::Size_</definition>
        <argsstring>(_Tp _width, _Tp _height)</argsstring>
        <name>Size_</name>
        <param>
          <type>_Tp</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>_Tp</type>
          <declname>_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="349"/>
      </memberdef>
      <memberdef kind="function" id="classcv_1_1_size___1abe760f15bf01a0ee3f51d81f4f8ea259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cv::Size_&lt; _Tp &gt;::Size_</definition>
        <argsstring>(const Size_ &amp;sz)</argsstring>
        <name>Size_</name>
        <param>
          <type>const <ref refid="classcv_1_1_size__" kindref="compound">Size_</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="350"/>
      </memberdef>
      <memberdef kind="function" id="classcv_1_1_size___1a77f2cfcaf863a5e91b84aa7fde6b64bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cv::Size_&lt; _Tp &gt;::Size_</definition>
        <argsstring>(const CvSize &amp;sz)</argsstring>
        <name>Size_</name>
        <param>
          <type>const <ref refid="struct_cv_size" kindref="compound">CvSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="351"/>
      </memberdef>
      <memberdef kind="function" id="classcv_1_1_size___1a9d9a4c7977d6d4bf9101954ce1bac941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cv::Size_&lt; _Tp &gt;::Size_</definition>
        <argsstring>(const CvSize2D32f &amp;sz)</argsstring>
        <name>Size_</name>
        <param>
          <type>const <ref refid="struct_cv_size2_d32f" kindref="compound">CvSize2D32f</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="352"/>
      </memberdef>
      <memberdef kind="function" id="classcv_1_1_size___1a2c6d59e6fe58dc2cda78504271b7ec6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cv::Size_&lt; _Tp &gt;::Size_</definition>
        <argsstring>(const Point_&lt; _Tp &gt; &amp;pt)</argsstring>
        <name>Size_</name>
        <param>
          <type>const <ref refid="classcv_1_1_point__" kindref="compound">Point_</ref>&lt; _Tp &gt; &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="353"/>
      </memberdef>
      <memberdef kind="function" id="classcv_1_1_size___1a7a115285576d3211b24bda4628ee7f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcv_1_1_size__" kindref="compound">Size_</ref> &amp;</type>
        <definition>Size_&amp; cv::Size_&lt; _Tp &gt;::operator=</definition>
        <argsstring>(const Size_ &amp;sz)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcv_1_1_size__" kindref="compound">Size_</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="354"/>
      </memberdef>
      <memberdef kind="function" id="classcv_1_1_size___1a9778005e591a0cc20c69ad8325cf2bcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>_Tp</type>
        <definition>_Tp cv::Size_&lt; _Tp &gt;::area</definition>
        <argsstring>() const </argsstring>
        <name>area</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="355"/>
      </memberdef>
      <memberdef kind="function" id="classcv_1_1_size___1ab2f57fa789ce8700f3aae08a0bd35e58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Tp2</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>cv::Size_&lt; _Tp &gt;::operator Size_&lt; _Tp2 &gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator Size_&lt; _Tp2 &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="357"/>
      </memberdef>
      <memberdef kind="function" id="classcv_1_1_size___1a7256e3023448f08aae7aa7406e809502" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cv::Size_&lt; _Tp &gt;::operator CvSize</definition>
        <argsstring>() const </argsstring>
        <name>operator CvSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="358"/>
      </memberdef>
      <memberdef kind="function" id="classcv_1_1_size___1a7a06105145aeae88c7a0701bda4135a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cv::Size_&lt; _Tp &gt;::operator CvSize2D32f</definition>
        <argsstring>() const </argsstring>
        <name>operator CvSize2D32f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="359"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Represent a two dimensional size using the template typename. The class contains two fields: <computeroutput>height</computeroutput> (rows) and <computeroutput>width</computeroutput> (acols). <simplesect kind="see"><para><ref refid="namespacecv_1a346f563897249351a34549137c8532a0" kindref="member">Size</ref> </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="361">
        <label>_Tp</label>
      </node>
      <node id="360">
        <label>cv::Size_&lt; _Tp &gt;</label>
        <link refid="classcv_1_1_size__"/>
        <childnode refid="361" relation="usage">
          <edgelabel>width</edgelabel>
          <edgelabel>height</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" line="344" bodyfile="/Users/gaspard/git/opencv/opencv/include/opencv/cxcore.hpp" bodystart="343" bodyend="362"/>
    <listofallmembers>
      <member refid="classcv_1_1_size___1a9778005e591a0cc20c69ad8325cf2bcd" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>area</name></member>
      <member refid="classcv_1_1_size___1a1d289dce6b5d8006a54f3ee0259fc545" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>height</name></member>
      <member refid="classcv_1_1_size___1a7256e3023448f08aae7aa7406e809502" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>operator CvSize</name></member>
      <member refid="classcv_1_1_size___1a7a06105145aeae88c7a0701bda4135a1" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>operator CvSize2D32f</name></member>
      <member refid="classcv_1_1_size___1ab2f57fa789ce8700f3aae08a0bd35e58" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>operator Size_&lt; _Tp2 &gt;</name></member>
      <member refid="classcv_1_1_size___1a7a115285576d3211b24bda4628ee7f4d" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>operator=</name></member>
      <member refid="classcv_1_1_size___1ae09ae11fd75a16928ca40980ad46a9bf" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>Size_</name></member>
      <member refid="classcv_1_1_size___1a45c97e9a4930d73fde11c2acc5f371ac" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>Size_</name></member>
      <member refid="classcv_1_1_size___1abe760f15bf01a0ee3f51d81f4f8ea259" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>Size_</name></member>
      <member refid="classcv_1_1_size___1a77f2cfcaf863a5e91b84aa7fde6b64bb" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>Size_</name></member>
      <member refid="classcv_1_1_size___1a9d9a4c7977d6d4bf9101954ce1bac941" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>Size_</name></member>
      <member refid="classcv_1_1_size___1a2c6d59e6fe58dc2cda78504271b7ec6c" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>Size_</name></member>
      <member refid="classcv_1_1_size___1a545d43b608de451311855c2ef808642d" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>value_type</name></member>
      <member refid="classcv_1_1_size___1abfe0367b32c407ddccf5ddf92667c73d" prot="public" virt="non-virtual"><scope>cv::Size_</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
