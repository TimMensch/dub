<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="class_simple" kind="class" prot="public">
    <compoundname>Simple</compoundname>
    <includes refid="simple_8h" local="no">simple.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_simple_1a0a3ae88042a8bf95b3ee35af68a544b8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Simple::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" line="8" bodyfile="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_simple_1ad9512e7ff5fc04bee21b697bf16176b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Simple::Simple</definition>
        <argsstring>(double v)</argsstring>
        <name>Simple</name>
        <param>
          <type>double</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" line="10" bodyfile="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_simple_1a922e57b961d5bf0472d3a0860b88f113" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Simple::~Simple</definition>
        <argsstring>()</argsstring>
        <name>~Simple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" line="12" bodyfile="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_simple_1a464f2638da5c5edf8c2cd0eee3944763" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Simple::value</definition>
        <argsstring>()</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" line="14" bodyfile="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_simple_1a2d1eb07f21c5c14f2f8ee83965033adb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8h_1a1bed94748e665d022633eb9b71c18add" kindref="member">MyFloat</ref></type>
        <definition>MyFloat Simple::add</definition>
        <argsstring>(MyFloat v, double w)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="types_8h_1a1bed94748e665d022633eb9b71c18add" kindref="member">MyFloat</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>double</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test typedef resolution in methods. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" line="20" bodyfile="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_simple_1a3455e9b3c5f835216cda7c87135454ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Simple::setValue</definition>
        <argsstring>(double v)</argsstring>
        <name>setValue</name>
        <param>
          <type>double</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" line="24" bodyfile="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_simple_1aab510a2876b652d3342330c438f7e12a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Simple::isZero</definition>
        <argsstring>()</argsstring>
        <name>isZero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" line="34" bodyfile="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" bodystart="34" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_simple_1acb803869593667fbfa2131f7a03610d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double Simple::pi</definition>
        <argsstring>()</argsstring>
        <name>pi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>To test simple static methods. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" line="30" bodyfile="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" bodystart="30" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" line="6" bodyfile="/Users/gaspard/git/dub/test/fixtures/simple/include/simple.h" bodystart="6" bodyend="37"/>
    <listofallmembers>
      <member refid="class_simple_1a2d1eb07f21c5c14f2f8ee83965033adb" prot="public" virt="non-virtual"><scope>Simple</scope><name>add</name></member>
      <member refid="class_simple_1aab510a2876b652d3342330c438f7e12a" prot="public" virt="non-virtual"><scope>Simple</scope><name>isZero</name></member>
      <member refid="class_simple_1acb803869593667fbfa2131f7a03610d4" prot="public" virt="non-virtual"><scope>Simple</scope><name>pi</name></member>
      <member refid="class_simple_1a3455e9b3c5f835216cda7c87135454ea" prot="public" virt="non-virtual"><scope>Simple</scope><name>setValue</name></member>
      <member refid="class_simple_1ad9512e7ff5fc04bee21b697bf16176b6" prot="public" virt="non-virtual"><scope>Simple</scope><name>Simple</name></member>
      <member refid="class_simple_1a464f2638da5c5edf8c2cd0eee3944763" prot="public" virt="non-virtual"><scope>Simple</scope><name>value</name></member>
      <member refid="class_simple_1a0a3ae88042a8bf95b3ee35af68a544b8" prot="private" virt="non-virtual"><scope>Simple</scope><name>value_</name></member>
      <member refid="class_simple_1a922e57b961d5bf0472d3a0860b88f113" prot="public" virt="non-virtual"><scope>Simple</scope><name>~Simple</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
