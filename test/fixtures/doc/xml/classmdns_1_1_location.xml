<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="classmdns_1_1_location" kind="class" prot="public">
    <compoundname>mdns::Location</compoundname>
    <derivedcompoundref refid="classmdns_1_1_abstract_browser_1_1_service" prot="public" virt="non-virtual">mdns::AbstractBrowser::Service</derivedcompoundref>
    <includes refid="_location_8h" local="no">Location.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmdns_1_1_location_1a718a10a3e057d5d54cc6361aac42b880" prot="public" static="yes" mutable="no">
        <type>const unsigned long</type>
        <definition>const unsigned long mdns::Location::NO_IP</definition>
        <argsstring></argsstring>
        <name>NO_IP</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP not configured yet. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="55" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="55" bodyend="-1"/>
        <referencedby refid="classmdns_1_1_location_1a27a8eb09257900facd9b46b51e6e1173" compoundref="_location_8h" startline="102" endline="108">clear</referencedby>
        <referencedby refid="classmdns_1_1_location_1a50d3b1f504af97855886cc64bdd1f350" compoundref="_location_8h" startline="114" endline="120">operator==</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmdns_1_1_location_1af649112401d147b0216a2c1809da240d" prot="public" static="yes" mutable="no">
        <type>const unsigned long</type>
        <definition>const unsigned long mdns::Location::ANY_IP</definition>
        <argsstring></argsstring>
        <name>ANY_IP</name>
        <initializer> 0xFFFFFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Any local IP. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="58" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmdns_1_1_location_1aeb2de6dce9cb4f836b927c796a6e4ade" prot="public" static="yes" mutable="no">
        <type>const unsigned long</type>
        <definition>const unsigned long mdns::Location::LOOPBACK</definition>
        <argsstring></argsstring>
        <name>LOOPBACK</name>
        <initializer> (127&lt;&lt;24) + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="59" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmdns_1_1_location_1a3bb4f86536b22463e69206c95f605233" prot="public" static="yes" mutable="no">
        <type>const <ref refid="_location_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>const uint mdns::Location::NO_PORT</definition>
        <argsstring></argsstring>
        <name>NO_PORT</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="60" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="60" bodyend="-1"/>
        <referencedby refid="classmdns_1_1_location_1a27a8eb09257900facd9b46b51e6e1173" compoundref="_location_8h" startline="102" endline="108">clear</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmdns_1_1_location_1a32416afcb24ac2a43a6e24999668c8d7" prot="public" static="yes" mutable="no">
        <type>const <ref refid="_location_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>const uint mdns::Location::DEFAULT_INTERFACE</definition>
        <argsstring></argsstring>
        <name>DEFAULT_INTERFACE</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="61" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmdns_1_1_location_1ac5eb062bf71ebf4ef114d256c79601f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Url</definition>
        <argsstring></argsstring>
        <name>Url</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="159" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classmdns_1_1_location_1ad60c58b8a647ab11b76d001bb77b7029" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out_stream, const Location &amp;location)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out_stream</declname>
        </param>
        <param>
          <type>const <ref refid="classmdns_1_1_location" kindref="compound">Location</ref> &amp;</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="158"/>
      </memberdef>
      <memberdef kind="friend" id="classmdns_1_1_location_1a60e7d1a2673cbdcceb610bf20ad55a47" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="_location_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint hashId</definition>
        <argsstring>(const Location &amp;location)</argsstring>
        <name>hashId</name>
        <param>
          <type>const <ref refid="classmdns_1_1_location" kindref="compound">Location</ref> &amp;</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="160"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmdns_1_1_location_1a9b30752818ae9dbb3cf1b006f94952bc" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string mdns::Location::protocol_</definition>
        <argsstring></argsstring>
        <name>protocol_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Protocol used (oscit, http, ...) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="165" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="165" bodyend="-1"/>
        <referencedby refid="classmdns_1_1_location_1a27a8eb09257900facd9b46b51e6e1173" compoundref="_location_8h" startline="102" endline="108">clear</referencedby>
        <referencedby refid="classmdns_1_1_location_1a50d3b1f504af97855886cc64bdd1f350" compoundref="_location_8h" startline="114" endline="120">operator==</referencedby>
        <referencedby refid="classmdns_1_1_location_1aeb264d140a00ae6dc59c46cea5fe13e8" compoundref="_location_8h" startline="122" endline="124">protocol</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmdns_1_1_location_1a9e631e9ddbfd8f7abd283538ed5040d0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string mdns::Location::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This contains the service&apos;s name (&quot;stage camera&quot;). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="169" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="169" bodyend="-1"/>
        <referencedby refid="classmdns_1_1_location_1a27a8eb09257900facd9b46b51e6e1173" compoundref="_location_8h" startline="102" endline="108">clear</referencedby>
        <referencedby refid="classmdns_1_1_location_1a6936e532f176330df7ed1f67cf37c0a1" compoundref="_location_8h" startline="126" endline="128">name</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmdns_1_1_location_1a5a2b69e7e0b2efb559782ccfdbf536fa" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string mdns::Location::host_</definition>
        <argsstring></argsstring>
        <name>host_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the host&apos;s name (&apos;gaspard.local&apos;, &apos;example.com&apos;). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="173" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="173" bodyend="-1"/>
        <referencedby refid="classmdns_1_1_location_1a27a8eb09257900facd9b46b51e6e1173" compoundref="_location_8h" startline="102" endline="108">clear</referencedby>
        <referencedby refid="classmdns_1_1_location_1a0574635f96aa4ff2771479160c992c8b" compoundref="_location_8h" startline="130" endline="132">host</referencedby>
        <referencedby refid="classmdns_1_1_location_1a50d3b1f504af97855886cc64bdd1f350" compoundref="_location_8h" startline="114" endline="120">operator==</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmdns_1_1_location_1a3dd01a097f76048e7d23d29ed5012674" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long mdns::Location::ip_</definition>
        <argsstring></argsstring>
        <name>ip_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Once the location has been resolved, we have an IP. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="177" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="177" bodyend="-1"/>
        <referencedby refid="classmdns_1_1_location_1a27a8eb09257900facd9b46b51e6e1173" compoundref="_location_8h" startline="102" endline="108">clear</referencedby>
        <referencedby refid="classmdns_1_1_location_1a3a1535700ea6936fc89426d9d5b69e3c" compoundref="_location_8h" startline="134" endline="136">ip</referencedby>
        <referencedby refid="classmdns_1_1_location_1a50d3b1f504af97855886cc64bdd1f350" compoundref="_location_8h" startline="114" endline="120">operator==</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmdns_1_1_location_1a532cb7530d78be46e2c2796cef42ae4f" prot="private" static="no" mutable="no">
        <type><ref refid="_location_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint mdns::Location::port_</definition>
        <argsstring></argsstring>
        <name>port_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Port of the remote object (set when location is resolved) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="181" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="181" bodyend="-1"/>
        <referencedby refid="classmdns_1_1_location_1a27a8eb09257900facd9b46b51e6e1173" compoundref="_location_8h" startline="102" endline="108">clear</referencedby>
        <referencedby refid="classmdns_1_1_location_1a50d3b1f504af97855886cc64bdd1f350" compoundref="_location_8h" startline="114" endline="120">operator==</referencedby>
        <referencedby refid="classmdns_1_1_location_1a41ef82bbf614db381369221540e719d9" compoundref="_location_8h" startline="138" endline="140">port</referencedby>
        <referencedby refid="classmdns_1_1_location_1aaeafecac57b073dbba9a9bd50190715d" compoundref="_location_8h" startline="146" endline="148">set_port</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmdns_1_1_location_1ac6c297b761298809f455ee74cfc01f2e" prot="private" static="no" mutable="no">
        <type><ref refid="_location_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint mdns::Location::interface_</definition>
        <argsstring></argsstring>
        <name>interface_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interface used to connect to this location (set by mdns <ref refid="classmdns_1_1_browser" kindref="compound">Browser</ref>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="185" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="185" bodyend="-1"/>
        <referencedby refid="classmdns_1_1_location_1a39023146cc764d74f182bbfde284f93f" compoundref="_location_8h" startline="142" endline="144">interface</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmdns_1_1_location_1a346a1652b0ee5d981e82a2c2554a51cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mdns::Location::Location</definition>
        <argsstring>(const char *protocol, const char *service_name, const char *hostname, uint port=NO_PORT, uint interface=DEFAULT_INTERFACE)</argsstring>
        <name>Location</name>
        <param>
          <type>const char *</type>
          <declname>protocol</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>service_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type><ref refid="_location_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>port</declname>
          <defval><ref refid="classmdns_1_1_location_1a3bb4f86536b22463e69206c95f605233" kindref="member">NO_PORT</ref></defval>
        </param>
        <param>
          <type><ref refid="_location_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>interface</declname>
          <defval><ref refid="classmdns_1_1_location_1a32416afcb24ac2a43a6e24999668c8d7" kindref="member">DEFAULT_INTERFACE</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="73" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="63" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a0115d654ed8c47edb81c959b952c0f5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mdns::Location::Location</definition>
        <argsstring>(const char *protocol, const char *hostname, uint port)</argsstring>
        <name>Location</name>
        <param>
          <type>const char *</type>
          <declname>protocol</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type><ref refid="_location_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="81" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="75" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a8c099448dc8fca40f1b2c779b436324d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mdns::Location::Location</definition>
        <argsstring>(const char *protocol, unsigned long ip, uint port)</argsstring>
        <name>Location</name>
        <param>
          <type>const char *</type>
          <declname>protocol</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>ip</declname>
        </param>
        <param>
          <type><ref refid="_location_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="89" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="83" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a6c2babdd8b77c3645f811ed2a8e55691" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mdns::Location::Location</definition>
        <argsstring>(const char *protocol, const char *service_name)</argsstring>
        <name>Location</name>
        <param>
          <type>const char *</type>
          <declname>protocol</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>service_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="96" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a1855f901eb6fe517bc0ffd7ca5badc43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mdns::Location::Location</definition>
        <argsstring>()</argsstring>
        <name>Location</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="100" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a27a8eb09257900facd9b46b51e6e1173" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mdns::Location::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="102" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="102" bodyend="108"/>
        <references refid="classmdns_1_1_location_1a5a2b69e7e0b2efb559782ccfdbf536fa" compoundref="_location_8h" startline="173">host_</references>
        <references refid="classmdns_1_1_location_1a3dd01a097f76048e7d23d29ed5012674" compoundref="_location_8h" startline="177">ip_</references>
        <references refid="classmdns_1_1_location_1a9e631e9ddbfd8f7abd283538ed5040d0" compoundref="_location_8h" startline="169">name_</references>
        <references refid="classmdns_1_1_location_1a718a10a3e057d5d54cc6361aac42b880" compoundref="_location_8h" startline="55">NO_IP</references>
        <references refid="classmdns_1_1_location_1a3bb4f86536b22463e69206c95f605233" compoundref="_location_8h" startline="60">NO_PORT</references>
        <references refid="classmdns_1_1_location_1a532cb7530d78be46e2c2796cef42ae4f" compoundref="_location_8h" startline="181">port_</references>
        <references refid="classmdns_1_1_location_1a9b30752818ae9dbb3cf1b006f94952bc" compoundref="_location_8h" startline="165">protocol_</references>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1afd4816bc0e38b97d8f8cc5b23f561876" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mdns::Location::operator!=</definition>
        <argsstring>(const Location &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classmdns_1_1_location" kindref="compound">Location</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="110" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="110" bodyend="112"/>
        <references refid="classmdns_1_1_location_1a50d3b1f504af97855886cc64bdd1f350" compoundref="_location_8h" startline="114" endline="120">operator==</references>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a50d3b1f504af97855886cc64bdd1f350" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mdns::Location::operator==</definition>
        <argsstring>(const Location &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmdns_1_1_location" kindref="compound">Location</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="114" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="114" bodyend="120"/>
        <references refid="classmdns_1_1_location_1a5a2b69e7e0b2efb559782ccfdbf536fa" compoundref="_location_8h" startline="173">host_</references>
        <references refid="classmdns_1_1_location_1a3dd01a097f76048e7d23d29ed5012674" compoundref="_location_8h" startline="177">ip_</references>
        <references refid="classmdns_1_1_location_1a718a10a3e057d5d54cc6361aac42b880" compoundref="_location_8h" startline="55">NO_IP</references>
        <references refid="classmdns_1_1_location_1a532cb7530d78be46e2c2796cef42ae4f" compoundref="_location_8h" startline="181">port_</references>
        <references refid="classmdns_1_1_location_1a9b30752818ae9dbb3cf1b006f94952bc" compoundref="_location_8h" startline="165">protocol_</references>
        <referencedby refid="classmdns_1_1_location_1afd4816bc0e38b97d8f8cc5b23f561876" compoundref="_location_8h" startline="110" endline="112">operator!=</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1aeb264d140a00ae6dc59c46cea5fe13e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* mdns::Location::protocol</definition>
        <argsstring>() const </argsstring>
        <name>protocol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="122" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="122" bodyend="124"/>
        <references refid="classmdns_1_1_location_1a9b30752818ae9dbb3cf1b006f94952bc" compoundref="_location_8h" startline="165">protocol_</references>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a6936e532f176330df7ed1f67cf37c0a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* mdns::Location::name</definition>
        <argsstring>() const </argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="126" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="126" bodyend="128"/>
        <references refid="classmdns_1_1_location_1a9e631e9ddbfd8f7abd283538ed5040d0" compoundref="_location_8h" startline="169">name_</references>
        <referencedby refid="classmdns_1_1_browser_1ae43e4fd920ed330ab69f7d58a35ed173" compoundref="mdns_2include_2mdns_2_browser_8h" startline="76" endline="118">mdns::Browser::nextService</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a0574635f96aa4ff2771479160c992c8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* mdns::Location::host</definition>
        <argsstring>() const </argsstring>
        <name>host</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="130" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="130" bodyend="132"/>
        <references refid="classmdns_1_1_location_1a5a2b69e7e0b2efb559782ccfdbf536fa" compoundref="_location_8h" startline="173">host_</references>
        <referencedby refid="classmdns_1_1_browser_1ae43e4fd920ed330ab69f7d58a35ed173" compoundref="mdns_2include_2mdns_2_browser_8h" startline="76" endline="118">mdns::Browser::nextService</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a3a1535700ea6936fc89426d9d5b69e3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const unsigned long &amp;</type>
        <definition>const unsigned long&amp; mdns::Location::ip</definition>
        <argsstring>() const </argsstring>
        <name>ip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="134" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="134" bodyend="136"/>
        <references refid="classmdns_1_1_location_1a3dd01a097f76048e7d23d29ed5012674" compoundref="_location_8h" startline="177">ip_</references>
        <referencedby refid="classmdns_1_1_browser_1ae43e4fd920ed330ab69f7d58a35ed173" compoundref="mdns_2include_2mdns_2_browser_8h" startline="76" endline="118">mdns::Browser::nextService</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a41ef82bbf614db381369221540e719d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="_location_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref> &amp;</type>
        <definition>const uint&amp; mdns::Location::port</definition>
        <argsstring>() const </argsstring>
        <name>port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="138" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="138" bodyend="140"/>
        <references refid="classmdns_1_1_location_1a532cb7530d78be46e2c2796cef42ae4f" compoundref="_location_8h" startline="181">port_</references>
        <referencedby refid="classmdns_1_1_browser_1ae43e4fd920ed330ab69f7d58a35ed173" compoundref="mdns_2include_2mdns_2_browser_8h" startline="76" endline="118">mdns::Browser::nextService</referencedby>
        <referencedby refid="classmdns_1_1_location_1aaeafecac57b073dbba9a9bd50190715d" compoundref="_location_8h" startline="146" endline="148">set_port</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a39023146cc764d74f182bbfde284f93f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="_location_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref> &amp;</type>
        <definition>const uint&amp; mdns::Location::interface</definition>
        <argsstring>() const </argsstring>
        <name>interface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="142" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="142" bodyend="144"/>
        <references refid="classmdns_1_1_location_1ac6c297b761298809f455ee74cfc01f2e" compoundref="_location_8h" startline="185">interface_</references>
        <referencedby refid="classmdns_1_1_browser_1ae43e4fd920ed330ab69f7d58a35ed173" compoundref="mdns_2include_2mdns_2_browser_8h" startline="76" endline="118">mdns::Browser::nextService</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1aaeafecac57b073dbba9a9bd50190715d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mdns::Location::set_port</definition>
        <argsstring>(uint port)</argsstring>
        <name>set_port</name>
        <param>
          <type><ref refid="_location_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="146" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="146" bodyend="148"/>
        <references refid="classmdns_1_1_location_1a41ef82bbf614db381369221540e719d9" compoundref="_location_8h" startline="138" endline="140">port</references>
        <references refid="classmdns_1_1_location_1a532cb7530d78be46e2c2796cef42ae4f" compoundref="_location_8h" startline="181">port_</references>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a886b1f7ad6715d3394571a2246203649" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string mdns::Location::inspect</definition>
        <argsstring>() const </argsstring>
        <name>inspect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used for debugging: show location with ip and port. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmdns_1_1_location_1ab83ec9f61dcf3a4bd78649c6ab83c5f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>static unsigned long mdns::Location::ip_from_hostname</definition>
        <argsstring>(const char *hostname)</argsstring>
        <name>ip_from_hostname</name>
        <param>
          <type>const char *</type>
          <declname>hostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="154"/>
      </memberdef>
      <memberdef kind="function" id="classmdns_1_1_location_1a5f6b965bfcf74768a870a12c9473dcae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string mdns::Location::name_from_ip</definition>
        <argsstring>(unsigned long ip)</argsstring>
        <name>name_from_ip</name>
        <param>
          <type>unsigned long</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="155"/>
        <referencedby refid="classmdns_1_1_browser_1ae43e4fd920ed330ab69f7d58a35ed173" compoundref="mdns_2include_2mdns_2_browser_8h" startline="76" endline="118">mdns::Browser::nextService</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Browse for devices matching a give service type. Call a lua function when devices are added or removed.</para><para><simplesect kind="par"><title>Bindings info:</title><para>string_format:&apos;%s&apos; string_args:&apos;(*userdata)-&gt;<ref refid="classmdns_1_1_location_1a886b1f7ad6715d3394571a2246203649" kindref="member">inspect()</ref>.c_str()&apos; </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2183">
        <label>mdns::Location</label>
        <link refid="classmdns_1_1_location"/>
      </node>
      <node id="2184">
        <label>mdns::AbstractBrowser::Service</label>
        <link refid="classmdns_1_1_abstract_browser_1_1_service"/>
        <childnode refid="2183" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" line="51" bodyfile="/Users/gaspard/git/lubyk/modules/mdns/include/mdns/Location.h" bodystart="50" bodyend="186"/>
    <listofallmembers>
      <member refid="classmdns_1_1_location_1af649112401d147b0216a2c1809da240d" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>ANY_IP</name></member>
      <member refid="classmdns_1_1_location_1a27a8eb09257900facd9b46b51e6e1173" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>clear</name></member>
      <member refid="classmdns_1_1_location_1a32416afcb24ac2a43a6e24999668c8d7" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>DEFAULT_INTERFACE</name></member>
      <member refid="classmdns_1_1_location_1a60e7d1a2673cbdcceb610bf20ad55a47" prot="private" virt="non-virtual"><scope>mdns::Location</scope><name>hashId</name></member>
      <member refid="classmdns_1_1_location_1a0574635f96aa4ff2771479160c992c8b" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>host</name></member>
      <member refid="classmdns_1_1_location_1a5a2b69e7e0b2efb559782ccfdbf536fa" prot="private" virt="non-virtual"><scope>mdns::Location</scope><name>host_</name></member>
      <member refid="classmdns_1_1_location_1a886b1f7ad6715d3394571a2246203649" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>inspect</name></member>
      <member refid="classmdns_1_1_location_1a39023146cc764d74f182bbfde284f93f" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>interface</name></member>
      <member refid="classmdns_1_1_location_1ac6c297b761298809f455ee74cfc01f2e" prot="private" virt="non-virtual"><scope>mdns::Location</scope><name>interface_</name></member>
      <member refid="classmdns_1_1_location_1a3a1535700ea6936fc89426d9d5b69e3c" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>ip</name></member>
      <member refid="classmdns_1_1_location_1a3dd01a097f76048e7d23d29ed5012674" prot="private" virt="non-virtual"><scope>mdns::Location</scope><name>ip_</name></member>
      <member refid="classmdns_1_1_location_1ab83ec9f61dcf3a4bd78649c6ab83c5f9" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>ip_from_hostname</name></member>
      <member refid="classmdns_1_1_location_1a346a1652b0ee5d981e82a2c2554a51cc" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>Location</name></member>
      <member refid="classmdns_1_1_location_1a0115d654ed8c47edb81c959b952c0f5a" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>Location</name></member>
      <member refid="classmdns_1_1_location_1a8c099448dc8fca40f1b2c779b436324d" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>Location</name></member>
      <member refid="classmdns_1_1_location_1a6c2babdd8b77c3645f811ed2a8e55691" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>Location</name></member>
      <member refid="classmdns_1_1_location_1a1855f901eb6fe517bc0ffd7ca5badc43" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>Location</name></member>
      <member refid="classmdns_1_1_location_1aeb2de6dce9cb4f836b927c796a6e4ade" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>LOOPBACK</name></member>
      <member refid="classmdns_1_1_location_1a6936e532f176330df7ed1f67cf37c0a1" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>name</name></member>
      <member refid="classmdns_1_1_location_1a9e631e9ddbfd8f7abd283538ed5040d0" prot="private" virt="non-virtual"><scope>mdns::Location</scope><name>name_</name></member>
      <member refid="classmdns_1_1_location_1a5f6b965bfcf74768a870a12c9473dcae" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>name_from_ip</name></member>
      <member refid="classmdns_1_1_location_1a718a10a3e057d5d54cc6361aac42b880" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>NO_IP</name></member>
      <member refid="classmdns_1_1_location_1a3bb4f86536b22463e69206c95f605233" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>NO_PORT</name></member>
      <member refid="classmdns_1_1_location_1afd4816bc0e38b97d8f8cc5b23f561876" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>operator!=</name></member>
      <member refid="classmdns_1_1_location_1ad60c58b8a647ab11b76d001bb77b7029" prot="private" virt="non-virtual"><scope>mdns::Location</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmdns_1_1_location_1a50d3b1f504af97855886cc64bdd1f350" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>operator==</name></member>
      <member refid="classmdns_1_1_location_1a41ef82bbf614db381369221540e719d9" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>port</name></member>
      <member refid="classmdns_1_1_location_1a532cb7530d78be46e2c2796cef42ae4f" prot="private" virt="non-virtual"><scope>mdns::Location</scope><name>port_</name></member>
      <member refid="classmdns_1_1_location_1aeb264d140a00ae6dc59c46cea5fe13e8" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>protocol</name></member>
      <member refid="classmdns_1_1_location_1a9b30752818ae9dbb3cf1b006f94952bc" prot="private" virt="non-virtual"><scope>mdns::Location</scope><name>protocol_</name></member>
      <member refid="classmdns_1_1_location_1aaeafecac57b073dbba9a9bd50190715d" prot="public" virt="non-virtual"><scope>mdns::Location</scope><name>set_port</name></member>
      <member refid="classmdns_1_1_location_1ac5eb062bf71ebf4ef114d256c79601f9" prot="private" virt="non-virtual"><scope>mdns::Location</scope><name>Url</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
