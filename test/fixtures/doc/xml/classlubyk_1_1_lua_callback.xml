<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="classlubyk_1_1_lua_callback" kind="class" prot="public">
    <compoundname>lubyk::LuaCallback</compoundname>
    <includes refid="lua__callback_8h" local="no">lua_callback.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classlubyk_1_1_lua_callback_1ada6c8e78af305aff5692621f22dce4f5" prot="public" static="no" mutable="no">
        <type><ref refid="classlubyk_1_1_worker" kindref="compound">lubyk::Worker</ref> *</type>
        <definition>lubyk::Worker* lubyk::LuaCallback::worker_</definition>
        <argsstring></argsstring>
        <name>worker_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" line="130" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classlubyk_1_1_lua_callback_1af2386acff12da630aa3bc70b00f120c1" prot="public" static="no" mutable="no">
        <type>lua_State *</type>
        <definition>lua_State* lubyk::LuaCallback::lua_</definition>
        <argsstring></argsstring>
        <name>lua_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" line="131" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" bodystart="131" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_lua_callback_1aa4181f0b72bda32e2af920bcdc428865" compoundref="lua__callback_8h" startline="133" endline="135">callback_set</referencedby>
        <referencedby refid="classlubyk_1_1_lua_callback_1a2123885765721a7e7b2ac7e25dbd7a48" compoundref="lua__callback_8h" startline="122" endline="128">push_lua_callback</referencedby>
        <referencedby refid="classlubyk_1_1_lua_callback_1a8b93bfd4b472131a5bf47fe9aa1e0c10" compoundref="lua__callback_8h" startline="55" endline="118">set_lua_callback</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlubyk_1_1_lua_callback_1a1999d0833dda4291f92ce1b8b3dd72f7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int lubyk::LuaCallback::thread_in_env_idx_</definition>
        <argsstring></argsstring>
        <name>thread_in_env_idx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" line="137" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" bodystart="137" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_lua_callback_1a8b93bfd4b472131a5bf47fe9aa1e0c10" compoundref="lua__callback_8h" startline="55" endline="118">set_lua_callback</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlubyk_1_1_lua_callback_1a9188475375288df77e57a332872dd5d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lubyk::LuaCallback::LuaCallback</definition>
        <argsstring>(lubyk::Worker *worker)</argsstring>
        <name>LuaCallback</name>
        <param>
          <type><ref refid="classlubyk_1_1_worker" kindref="compound">lubyk::Worker</ref> *</type>
          <declname>worker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" line="42" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_lua_callback_1a2769249ce93eb68129d943f9c8d3c234" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual lubyk::LuaCallback::~LuaCallback</definition>
        <argsstring>()</argsstring>
        <name>~LuaCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" line="45" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" bodystart="45" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_lua_callback_1a8b93bfd4b472131a5bf47fe9aa1e0c10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lubyk::LuaCallback::set_lua_callback</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>set_lua_callback</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a callback. The top of the stack should be -2. userdata from lk.Thread / <ref refid="classlk_1_1_socket" kindref="compound">lk.Socket</ref> / <ref refid="classmimas_1_1_callback" kindref="compound">mimas.Callback</ref> / etc -1. function()</para><para>Thanks to Robert G. Jakabosky for the idea to use lua_xmove instead of weak tables to store the function reference. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" line="55" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" bodystart="55" bodyend="118"/>
        <references refid="classlubyk_1_1_lua_callback_1af2386acff12da630aa3bc70b00f120c1" compoundref="lua__callback_8h" startline="131">lua_</references>
        <references refid="classlubyk_1_1_lua_callback_1a1999d0833dda4291f92ce1b8b3dd72f7" compoundref="lua__callback_8h" startline="137">thread_in_env_idx_</references>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_lua_callback_1a2123885765721a7e7b2ac7e25dbd7a48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lubyk::LuaCallback::push_lua_callback</definition>
        <argsstring>(bool push_self=true) const </argsstring>
        <name>push_lua_callback</name>
        <param>
          <type>bool</type>
          <declname>push_self</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The caller should lock before calling this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" line="122" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" bodystart="122" bodyend="128"/>
        <references refid="classlubyk_1_1_lua_callback_1aa4181f0b72bda32e2af920bcdc428865" compoundref="lua__callback_8h" startline="133" endline="135">callback_set</references>
        <references refid="classlubyk_1_1_lua_callback_1af2386acff12da630aa3bc70b00f120c1" compoundref="lua__callback_8h" startline="131">lua_</references>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_lua_callback_1aa4181f0b72bda32e2af920bcdc428865" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lubyk::LuaCallback::callback_set</definition>
        <argsstring>() const </argsstring>
        <name>callback_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" line="133" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" bodystart="133" bodyend="135"/>
        <references refid="classlubyk_1_1_lua_callback_1af2386acff12da630aa3bc70b00f120c1" compoundref="lua__callback_8h" startline="131">lua_</references>
        <referencedby refid="classlubyk_1_1_lua_callback_1a2123885765721a7e7b2ac7e25dbd7a48" compoundref="lua__callback_8h" startline="122" endline="128">push_lua_callback</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Calls a lua function back. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="2188">
        <label>lubyk::Worker</label>
        <link refid="classlubyk_1_1_worker"/>
        <childnode refid="2189" relation="usage">
          <edgelabel>time_ref_</edgelabel>
        </childnode>
      </node>
      <node id="2190">
        <label>lubyk::NonCopyable</label>
        <link refid="classlubyk_1_1_non_copyable"/>
      </node>
      <node id="2189">
        <label>lubyk::TimeRef</label>
        <link refid="classlubyk_1_1_time_ref"/>
        <childnode refid="2190" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2187">
        <label>lubyk::LuaCallback</label>
        <link refid="classlubyk_1_1_lua_callback"/>
        <childnode refid="2188" relation="usage">
          <edgelabel>worker_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" line="38" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/lua_callback.h" bodystart="37" bodyend="138"/>
    <listofallmembers>
      <member refid="classlubyk_1_1_lua_callback_1aa4181f0b72bda32e2af920bcdc428865" prot="public" virt="non-virtual"><scope>lubyk::LuaCallback</scope><name>callback_set</name></member>
      <member refid="classlubyk_1_1_lua_callback_1af2386acff12da630aa3bc70b00f120c1" prot="public" virt="non-virtual"><scope>lubyk::LuaCallback</scope><name>lua_</name></member>
      <member refid="classlubyk_1_1_lua_callback_1a9188475375288df77e57a332872dd5d1" prot="public" virt="non-virtual"><scope>lubyk::LuaCallback</scope><name>LuaCallback</name></member>
      <member refid="classlubyk_1_1_lua_callback_1a2123885765721a7e7b2ac7e25dbd7a48" prot="public" virt="non-virtual"><scope>lubyk::LuaCallback</scope><name>push_lua_callback</name></member>
      <member refid="classlubyk_1_1_lua_callback_1a8b93bfd4b472131a5bf47fe9aa1e0c10" prot="public" virt="non-virtual"><scope>lubyk::LuaCallback</scope><name>set_lua_callback</name></member>
      <member refid="classlubyk_1_1_lua_callback_1a1999d0833dda4291f92ce1b8b3dd72f7" prot="private" virt="non-virtual"><scope>lubyk::LuaCallback</scope><name>thread_in_env_idx_</name></member>
      <member refid="classlubyk_1_1_lua_callback_1ada6c8e78af305aff5692621f22dce4f5" prot="public" virt="non-virtual"><scope>lubyk::LuaCallback</scope><name>worker_</name></member>
      <member refid="classlubyk_1_1_lua_callback_1a2769249ce93eb68129d943f9c8d3c234" prot="public" virt="virtual"><scope>lubyk::LuaCallback</scope><name>~LuaCallback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
