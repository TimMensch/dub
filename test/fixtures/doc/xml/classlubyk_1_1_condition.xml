<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="classlubyk_1_1_condition" kind="class" prot="public">
    <compoundname>lubyk::Condition</compoundname>
    <basecompoundref refid="classlubyk_1_1_mutex" prot="public" virt="non-virtual">lubyk::Mutex</basecompoundref>
    <includes refid="condition_8h" local="no">condition.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlubyk_1_1_condition_1a5d3158ef207afde8b620c8b0c58427c9" prot="private" static="no" mutable="no">
        <type>pthread_cond_t</type>
        <definition>pthread_cond_t lubyk::Condition::cond_</definition>
        <argsstring></argsstring>
        <name>cond_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/condition.h" line="58" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/condition.h" bodystart="58" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_condition_1a00df87b432aab144baceaf703dd03777" compoundref="condition_8h" startline="60" endline="64">Condition</referencedby>
        <referencedby refid="classlubyk_1_1_condition_1a9929b0d44e95c4986165759ec8f6e120" compoundref="condition_8h" startline="83" endline="90">signal</referencedby>
        <referencedby refid="classlubyk_1_1_condition_1a9e1f35162eda86874b3548386cbeffd4" compoundref="condition_8h" startline="75" endline="79">wait</referencedby>
        <referencedby refid="classlubyk_1_1_condition_1ab9b5d04199d8eedc9754cd9f2d57c447" compoundref="condition_8h" startline="66" endline="70">~Condition</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlubyk_1_1_condition_1a00df87b432aab144baceaf703dd03777" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lubyk::Condition::Condition</definition>
        <argsstring>()</argsstring>
        <name>Condition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/condition.h" line="60" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/condition.h" bodystart="60" bodyend="64"/>
        <references refid="classlubyk_1_1_condition_1a5d3158ef207afde8b620c8b0c58427c9" compoundref="condition_8h" startline="58">cond_</references>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_condition_1ab9b5d04199d8eedc9754cd9f2d57c447" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lubyk::Condition::~Condition</definition>
        <argsstring>()</argsstring>
        <name>~Condition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/condition.h" line="66" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/condition.h" bodystart="66" bodyend="70"/>
        <references refid="classlubyk_1_1_condition_1a5d3158ef207afde8b620c8b0c58427c9" compoundref="condition_8h" startline="58">cond_</references>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_condition_1a9e1f35162eda86874b3548386cbeffd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lubyk::Condition::wait</definition>
        <argsstring>()</argsstring>
        <name>wait</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This makes the calling thread sleep until &apos;signal&apos; is called. It should be called after having been locked by the thread that created the <ref refid="classlubyk_1_1_condition" kindref="compound">Condition</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/condition.h" line="75" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/condition.h" bodystart="75" bodyend="79"/>
        <references refid="classlubyk_1_1_condition_1a5d3158ef207afde8b620c8b0c58427c9" compoundref="condition_8h" startline="58">cond_</references>
        <references refid="classlubyk_1_1_mutex_1a378e316656a57c5397896f5ceddc9c5b" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="45">lubyk::Mutex::mutex_</references>
        <referencedby refid="classlubyk_1_1_thread_1aba8009d4d34824dc3b0f9e65f96b1469" compoundref="thread_8h" startline="55" endline="73">lubyk::Thread::startThread</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_condition_1a9929b0d44e95c4986165759ec8f6e120" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lubyk::Condition::signal</definition>
        <argsstring>()</argsstring>
        <name>signal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release any waiting thread. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/condition.h" line="83" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/condition.h" bodystart="83" bodyend="90"/>
        <references refid="classlubyk_1_1_condition_1a5d3158ef207afde8b620c8b0c58427c9" compoundref="condition_8h" startline="58">cond_</references>
        <references refid="classlubyk_1_1_mutex_1a74ee38ef2f9bf4e86a3871f5b60a31c3" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="67" endline="69">lubyk::Mutex::lock</references>
        <references refid="classlubyk_1_1_mutex_1a83fead89eb5401b9dd1fbc6ecdd7e31c" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="72" endline="74">lubyk::Mutex::unlock</references>
        <referencedby refid="classlubyk_1_1_thread_1a37f0de298862cdba718531761bdc41a5" compoundref="thread_8h" startline="202" endline="205">lubyk::Thread::threadReady</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A class to ease multi-threading. The <ref refid="classlubyk_1_1_condition" kindref="compound">Condition</ref> helps lock a given thread while it waits for another to finish some work.</para><para>Typical usage is: 1. thread1 cond-&gt;<ref refid="classlubyk_1_1_mutex_1a74ee38ef2f9bf4e86a3871f5b60a31c3" kindref="member">lock()</ref> 2. start thread2 3. thread1 cond-&gt;<ref refid="classlubyk_1_1_condition_1a9e1f35162eda86874b3548386cbeffd4" kindref="member">wait()</ref> 3. in thread2 cond-&gt;<ref refid="classlubyk_1_1_condition_1a9929b0d44e95c4986165759ec8f6e120" kindref="member">signal()</ref> 4. thread1 cond-&gt;<ref refid="classlubyk_1_1_mutex_1a83fead89eb5401b9dd1fbc6ecdd7e31c" kindref="member">unlock()</ref> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1761">
        <label>lubyk::NonCopyable</label>
        <link refid="classlubyk_1_1_non_copyable"/>
      </node>
      <node id="1760">
        <label>lubyk::Mutex</label>
        <link refid="classlubyk_1_1_mutex"/>
        <childnode refid="1761" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1759">
        <label>lubyk::Condition</label>
        <link refid="classlubyk_1_1_condition"/>
        <childnode refid="1760" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1764">
        <label>lubyk::NonCopyable</label>
        <link refid="classlubyk_1_1_non_copyable"/>
      </node>
      <node id="1763">
        <label>lubyk::Mutex</label>
        <link refid="classlubyk_1_1_mutex"/>
        <childnode refid="1764" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1762">
        <label>lubyk::Condition</label>
        <link refid="classlubyk_1_1_condition"/>
        <childnode refid="1763" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/condition.h" line="57" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/condition.h" bodystart="57" bodyend="91"/>
    <listofallmembers>
      <member refid="classlubyk_1_1_condition_1a5d3158ef207afde8b620c8b0c58427c9" prot="private" virt="non-virtual"><scope>lubyk::Condition</scope><name>cond_</name></member>
      <member refid="classlubyk_1_1_condition_1a00df87b432aab144baceaf703dd03777" prot="public" virt="non-virtual"><scope>lubyk::Condition</scope><name>Condition</name></member>
      <member refid="classlubyk_1_1_mutex_1a74ee38ef2f9bf4e86a3871f5b60a31c3" prot="public" virt="non-virtual"><scope>lubyk::Condition</scope><name>lock</name></member>
      <member refid="classlubyk_1_1_mutex_1a8e93f428f3245e6b6528901f4599d0d7" prot="public" virt="non-virtual"><scope>lubyk::Condition</scope><name>Mutex</name></member>
      <member refid="classlubyk_1_1_condition_1a9929b0d44e95c4986165759ec8f6e120" prot="public" virt="non-virtual"><scope>lubyk::Condition</scope><name>signal</name></member>
      <member refid="classlubyk_1_1_mutex_1a83fead89eb5401b9dd1fbc6ecdd7e31c" prot="public" virt="non-virtual"><scope>lubyk::Condition</scope><name>unlock</name></member>
      <member refid="classlubyk_1_1_condition_1a9e1f35162eda86874b3548386cbeffd4" prot="public" virt="non-virtual"><scope>lubyk::Condition</scope><name>wait</name></member>
      <member refid="classlubyk_1_1_condition_1ab9b5d04199d8eedc9754cd9f2d57c447" prot="public" virt="non-virtual"><scope>lubyk::Condition</scope><name>~Condition</name></member>
      <member refid="classlubyk_1_1_mutex_1abca8268a2723750c3c9a31bc839a2912" prot="public" virt="virtual"><scope>lubyk::Condition</scope><name>~Mutex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
