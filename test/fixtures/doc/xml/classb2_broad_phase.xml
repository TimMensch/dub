<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="classb2_broad_phase" kind="class" prot="public">
    <compoundname>b2BroadPhase</compoundname>
    <includes refid="b2_broad_phase_8h" local="no">b2BroadPhase.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classb2_broad_phase_1a24d2179b74d248dce1cb58d708183eaf" prot="public" static="no">
        <name>@1</name>
        <enumvalue id="classb2_broad_phase_1a24d2179b74d248dce1cb58d708183eafa8a4f9965a5b0bbb13a35c20a37fef0ad" prot="public">
          <name>e_nullProxy</name>
          <initializer> -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="42" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="41" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classb2_broad_phase_1afc450dc71ee33ab0c9e7f1c31d6f7f60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class b2DynamicTree</definition>
        <argsstring></argsstring>
        <name>b2DynamicTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="105" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classb2_broad_phase_1a553b3344719751484472098774ad132a" prot="private" static="no" mutable="no">
        <type><ref refid="classb2_dynamic_tree" kindref="compound">b2DynamicTree</ref></type>
        <definition>b2DynamicTree b2BroadPhase::m_tree</definition>
        <argsstring></argsstring>
        <name>m_tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="112" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="112" bodyend="-1"/>
        <referencedby refid="classb2_broad_phase_1a7b00ac700db52e52248a25397007d4ff" compoundref="b2_broad_phase_8h" startline="155" endline="158">GetFatAABB</referencedby>
        <referencedby refid="classb2_broad_phase_1a1189e783d39bfd69b314284ce52ea3c3" compoundref="b2_broad_phase_8h" startline="170" endline="173">GetTreeBalance</referencedby>
        <referencedby refid="classb2_broad_phase_1aeb9f94f44840c5bd766031d78f63ca08" compoundref="b2_broad_phase_8h" startline="165" endline="168">GetTreeHeight</referencedby>
        <referencedby refid="classb2_broad_phase_1abe02c30ca1b3b9c9b84a571a2f8cef92" compoundref="b2_broad_phase_8h" startline="175" endline="178">GetTreeQuality</referencedby>
        <referencedby refid="classb2_broad_phase_1a89c099e95237d68577376d8f9a4ed013" compoundref="b2_broad_phase_8h" startline="143" endline="146">GetUserData</referencedby>
        <referencedby refid="classb2_broad_phase_1aea5732362c8bb3959c6b24f967654d93" compoundref="b2_broad_phase_8h" startline="237" endline="240">Query</referencedby>
        <referencedby refid="classb2_broad_phase_1aebcb837120ce45bbb82b4b61db533026" compoundref="b2_broad_phase_8h" startline="243" endline="246">RayCast</referencedby>
        <referencedby refid="classb2_broad_phase_1a1785eb29d14997d81bd537f064d22aba" compoundref="b2_broad_phase_8h" startline="148" endline="153">TestOverlap</referencedby>
        <referencedby refid="classb2_broad_phase_1a0a1acd693466b997700242ae00784c20" compoundref="b2_broad_phase_8h" startline="181" endline="234">UpdatePairs</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classb2_broad_phase_1acd748c026ed9ed0f21633df6bd79b1ac" prot="private" static="no" mutable="no">
        <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
        <definition>int32 b2BroadPhase::m_proxyCount</definition>
        <argsstring></argsstring>
        <name>m_proxyCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="114" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="114" bodyend="-1"/>
        <referencedby refid="classb2_broad_phase_1a399fa4f5289a1ec46a65f726f3bac890" compoundref="b2_broad_phase_8h" startline="160" endline="163">GetProxyCount</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classb2_broad_phase_1a320b6be7b85c29ae14fa7b4c34bc8938" prot="private" static="no" mutable="no">
        <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref> *</type>
        <definition>int32* b2BroadPhase::m_moveBuffer</definition>
        <argsstring></argsstring>
        <name>m_moveBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="116" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="116" bodyend="-1"/>
        <referencedby refid="classb2_broad_phase_1a0a1acd693466b997700242ae00784c20" compoundref="b2_broad_phase_8h" startline="181" endline="234">UpdatePairs</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classb2_broad_phase_1aad2464ca4943c5b7c57fe7b72f868600" prot="private" static="no" mutable="no">
        <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
        <definition>int32 b2BroadPhase::m_moveCapacity</definition>
        <argsstring></argsstring>
        <name>m_moveCapacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="117" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classb2_broad_phase_1a8261c4be18ed7abe064c86352861c711" prot="private" static="no" mutable="no">
        <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
        <definition>int32 b2BroadPhase::m_moveCount</definition>
        <argsstring></argsstring>
        <name>m_moveCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="118" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="118" bodyend="-1"/>
        <referencedby refid="classb2_broad_phase_1a0a1acd693466b997700242ae00784c20" compoundref="b2_broad_phase_8h" startline="181" endline="234">UpdatePairs</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classb2_broad_phase_1a082a4d4dc794e1a023e96b43c933be33" prot="private" static="no" mutable="no">
        <type><ref refid="structb2_pair" kindref="compound">b2Pair</ref> *</type>
        <definition>b2Pair* b2BroadPhase::m_pairBuffer</definition>
        <argsstring></argsstring>
        <name>m_pairBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="120" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="120" bodyend="-1"/>
        <referencedby refid="classb2_broad_phase_1a0a1acd693466b997700242ae00784c20" compoundref="b2_broad_phase_8h" startline="181" endline="234">UpdatePairs</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classb2_broad_phase_1aa406224944d006cdbdba2742370a3c67" prot="private" static="no" mutable="no">
        <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
        <definition>int32 b2BroadPhase::m_pairCapacity</definition>
        <argsstring></argsstring>
        <name>m_pairCapacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="121" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classb2_broad_phase_1a492a7a5e5574df1b9dc51c5e56d7af95" prot="private" static="no" mutable="no">
        <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
        <definition>int32 b2BroadPhase::m_pairCount</definition>
        <argsstring></argsstring>
        <name>m_pairCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="122" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="122" bodyend="-1"/>
        <referencedby refid="classb2_broad_phase_1a0a1acd693466b997700242ae00784c20" compoundref="b2_broad_phase_8h" startline="181" endline="234">UpdatePairs</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classb2_broad_phase_1a0c7b404407c5e6626fb3fc8b55240516" prot="private" static="no" mutable="no">
        <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
        <definition>int32 b2BroadPhase::m_queryProxyId</definition>
        <argsstring></argsstring>
        <name>m_queryProxyId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="124" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="124" bodyend="-1"/>
        <referencedby refid="classb2_broad_phase_1a0a1acd693466b997700242ae00784c20" compoundref="b2_broad_phase_8h" startline="181" endline="234">UpdatePairs</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classb2_broad_phase_1ac58820d4cb10df81a33923c7c75d8f85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>b2BroadPhase::b2BroadPhase</definition>
        <argsstring>()</argsstring>
        <name>b2BroadPhase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="46"/>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1a40cebf62f00ebfa7ca373ad96f76661f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>b2BroadPhase::~b2BroadPhase</definition>
        <argsstring>()</argsstring>
        <name>~b2BroadPhase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="47"/>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1ae2f7af756bc55ece45221466c5af449c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
        <definition>int32 b2BroadPhase::CreateProxy</definition>
        <argsstring>(const b2AABB &amp;aabb, void *userData)</argsstring>
        <name>CreateProxy</name>
        <param>
          <type>const <ref refid="structb2_a_a_b_b" kindref="compound">b2AABB</ref> &amp;</type>
          <declname>aabb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a proxy with an initial AABB. Pairs are not reported until UpdatePairs is called. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="51"/>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1a84f0fb227dc01a9b9baa55c7b8c68984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2BroadPhase::DestroyProxy</definition>
        <argsstring>(int32 proxyId)</argsstring>
        <name>DestroyProxy</name>
        <param>
          <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
<para>Destroy a proxy. It is up to the client to remove any pairs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="54"/>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1a01dc18a19c2b5d0cc1d9cd8c8554234c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2BroadPhase::MoveProxy</definition>
        <argsstring>(int32 proxyId, const b2AABB &amp;aabb, const b2Vec2 &amp;displacement)</argsstring>
        <name>MoveProxy</name>
        <param>
          <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
          <declname>proxyId</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_a_a_b_b" kindref="compound">b2AABB</ref> &amp;</type>
          <declname>aabb</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_vec2" kindref="compound">b2Vec2</ref> &amp;</type>
          <declname>displacement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call MoveProxy as many times as you like, then when you are done call UpdatePairs to finalized the proxy pairs (for your time step). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="58"/>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1a67b296431ebbc7b44037f21d645d9166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2BroadPhase::TouchProxy</definition>
        <argsstring>(int32 proxyId)</argsstring>
        <name>TouchProxy</name>
        <param>
          <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
<para>Call to trigger a re-processing of it&apos;s pairs on the next call to UpdatePairs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="61"/>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1a7b00ac700db52e52248a25397007d4ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structb2_a_a_b_b" kindref="compound">b2AABB</ref> &amp;</type>
        <definition>const b2AABB &amp; b2BroadPhase::GetFatAABB</definition>
        <argsstring>(int32 proxyId) const </argsstring>
        <name>GetFatAABB</name>
        <param>
          <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
<para>Get the fat AABB for a proxy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="64" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="155" bodyend="158"/>
        <references refid="classb2_dynamic_tree_1adf4676b1c34a57b4451bcbeaebe65687" compoundref="b2_dynamic_tree_8h" startline="157" endline="161">b2DynamicTree::GetFatAABB</references>
        <references refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" compoundref="b2_broad_phase_8h" startline="112">m_tree</references>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1a89c099e95237d68577376d8f9a4ed013" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * b2BroadPhase::GetUserData</definition>
        <argsstring>(int32 proxyId) const </argsstring>
        <name>GetUserData</name>
        <param>
          <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
<para>Get user data from a proxy. Returns NULL if the id is invalid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="67" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="143" bodyend="146"/>
        <references refid="classb2_dynamic_tree_1a44ab57dce3c42b0a5847a64e489a71ce" compoundref="b2_dynamic_tree_8h" startline="151" endline="155">b2DynamicTree::GetUserData</references>
        <references refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" compoundref="b2_broad_phase_8h" startline="112">m_tree</references>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1a1785eb29d14997d81bd537f064d22aba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool b2BroadPhase::TestOverlap</definition>
        <argsstring>(int32 proxyIdA, int32 proxyIdB) const </argsstring>
        <name>TestOverlap</name>
        <param>
          <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
          <declname>proxyIdA</declname>
        </param>
        <param>
          <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
          <declname>proxyIdB</declname>
        </param>
        <briefdescription>
<para>Test overlap of fat AABBs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="70" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="148" bodyend="153"/>
        <references refid="b2_collision_8h_1ae7601420d0b42c1ee494e879dd2009a5">b2TestOverlap</references>
        <references refid="classb2_dynamic_tree_1adf4676b1c34a57b4451bcbeaebe65687" compoundref="b2_dynamic_tree_8h" startline="157" endline="161">b2DynamicTree::GetFatAABB</references>
        <references refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" compoundref="b2_broad_phase_8h" startline="112">m_tree</references>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1a399fa4f5289a1ec46a65f726f3bac890" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
        <definition>int32 b2BroadPhase::GetProxyCount</definition>
        <argsstring>() const </argsstring>
        <name>GetProxyCount</name>
        <briefdescription>
<para>Get the number of proxies. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="73" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="160" bodyend="163"/>
        <references refid="classb2_broad_phase_1acd748c026ed9ed0f21633df6bd79b1ac" compoundref="b2_broad_phase_8h" startline="114">m_proxyCount</references>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1a0a1acd693466b997700242ae00784c20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void b2BroadPhase::UpdatePairs</definition>
        <argsstring>(T *callback)</argsstring>
        <name>UpdatePairs</name>
        <param>
          <type><ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Update the pairs. This results in pair callbacks. This can only add pairs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="77" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="181" bodyend="234"/>
        <references refid="b2_broad_phase_8h_1ad6d75f0819dcf1b88933300ae0430934" compoundref="b2_broad_phase_8h" startline="128" endline="141">b2PairLessThan</references>
        <references refid="classb2_broad_phase_1a24d2179b74d248dce1cb58d708183eafa8a4f9965a5b0bbb13a35c20a37fef0ad" compoundref="b2_broad_phase_8h" startline="43">e_nullProxy</references>
        <references refid="classb2_dynamic_tree_1adf4676b1c34a57b4451bcbeaebe65687" compoundref="b2_dynamic_tree_8h" startline="157" endline="161">b2DynamicTree::GetFatAABB</references>
        <references refid="classb2_dynamic_tree_1a44ab57dce3c42b0a5847a64e489a71ce" compoundref="b2_dynamic_tree_8h" startline="151" endline="155">b2DynamicTree::GetUserData</references>
        <references refid="classb2_broad_phase_1a320b6be7b85c29ae14fa7b4c34bc8938" compoundref="b2_broad_phase_8h" startline="116">m_moveBuffer</references>
        <references refid="classb2_broad_phase_1a8261c4be18ed7abe064c86352861c711" compoundref="b2_broad_phase_8h" startline="118">m_moveCount</references>
        <references refid="classb2_broad_phase_1a082a4d4dc794e1a023e96b43c933be33" compoundref="b2_broad_phase_8h" startline="120">m_pairBuffer</references>
        <references refid="classb2_broad_phase_1a492a7a5e5574df1b9dc51c5e56d7af95" compoundref="b2_broad_phase_8h" startline="122">m_pairCount</references>
        <references refid="classb2_broad_phase_1a0c7b404407c5e6626fb3fc8b55240516" compoundref="b2_broad_phase_8h" startline="124">m_queryProxyId</references>
        <references refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" compoundref="b2_broad_phase_8h" startline="112">m_tree</references>
        <references refid="structb2_pair_1abae3df5e877cf0c4611334e3eec4b84c" compoundref="b2_broad_phase_8h" startline="29">b2Pair::proxyIdA</references>
        <references refid="structb2_pair_1af2bd888ccb34535ab9126497349da749" compoundref="b2_broad_phase_8h" startline="30">b2Pair::proxyIdB</references>
        <references refid="classb2_dynamic_tree_1adf70aee89b4692fc79d65b1f54308585" compoundref="b2_dynamic_tree_8h" startline="164" endline="196">b2DynamicTree::Query</references>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1aea5732362c8bb3959c6b24f967654d93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void b2BroadPhase::Query</definition>
        <argsstring>(T *callback, const b2AABB &amp;aabb) const </argsstring>
        <name>Query</name>
        <param>
          <type><ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref> *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_a_a_b_b" kindref="compound">b2AABB</ref> &amp;</type>
          <declname>aabb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Query an AABB for overlapping proxies. The callback class is called for each proxy that overlaps the supplied AABB. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="82" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="237" bodyend="240"/>
        <references refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" compoundref="b2_broad_phase_8h" startline="112">m_tree</references>
        <references refid="classb2_dynamic_tree_1adf70aee89b4692fc79d65b1f54308585" compoundref="b2_dynamic_tree_8h" startline="164" endline="196">b2DynamicTree::Query</references>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1aebcb837120ce45bbb82b4b61db533026" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void b2BroadPhase::RayCast</definition>
        <argsstring>(T *callback, const b2RayCastInput &amp;input) const </argsstring>
        <name>RayCast</name>
        <param>
          <type><ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref> *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_ray_cast_input" kindref="compound">b2RayCastInput</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ray-cast against the proxies in the tree. This relies on the callback to perform a exact ray-cast in the case were the proxy contains a shape. The callback also performs the any collision filtering. This has performance roughly equal to k * log(n), where k is the number of collisions and n is the number of proxies in the tree. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>a callback class that is called for each proxy that is hit by the ray. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="92" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="243" bodyend="246"/>
        <references refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" compoundref="b2_broad_phase_8h" startline="112">m_tree</references>
        <references refid="classb2_dynamic_tree_1abd7a5c6a5bc109dbbdb0ec3aae039648" compoundref="b2_dynamic_tree_8h" startline="199" endline="282">b2DynamicTree::RayCast</references>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1aeb9f94f44840c5bd766031d78f63ca08" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
        <definition>int32 b2BroadPhase::GetTreeHeight</definition>
        <argsstring>() const </argsstring>
        <name>GetTreeHeight</name>
        <briefdescription>
<para>Get the height of the embedded tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="95" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="165" bodyend="168"/>
        <references refid="classb2_dynamic_tree_1add7e09cdf279e7c0031da9dfd4cdf4db">b2DynamicTree::GetHeight</references>
        <references refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" compoundref="b2_broad_phase_8h" startline="112">m_tree</references>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1a1189e783d39bfd69b314284ce52ea3c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
        <definition>int32 b2BroadPhase::GetTreeBalance</definition>
        <argsstring>() const </argsstring>
        <name>GetTreeBalance</name>
        <briefdescription>
<para>Get the balance of the embedded tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="98" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="170" bodyend="173"/>
        <references refid="classb2_dynamic_tree_1ae02c45d1a68b42e59d170438ddbb7977">b2DynamicTree::GetMaxBalance</references>
        <references refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" compoundref="b2_broad_phase_8h" startline="112">m_tree</references>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1abe02c30ca1b3b9c9b84a571a2f8cef92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="b2_settings_8h_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref></type>
        <definition>float32 b2BroadPhase::GetTreeQuality</definition>
        <argsstring>() const </argsstring>
        <name>GetTreeQuality</name>
        <briefdescription>
<para>Get the quality metric of the embedded tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="101" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="175" bodyend="178"/>
        <references refid="classb2_dynamic_tree_1ad78282a720c451e032b43c34cba02f1a">b2DynamicTree::GetAreaRatio</references>
        <references refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" compoundref="b2_broad_phase_8h" startline="112">m_tree</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classb2_broad_phase_1a4917a3c91402339757b5edc1a07ac1f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2BroadPhase::BufferMove</definition>
        <argsstring>(int32 proxyId)</argsstring>
        <name>BufferMove</name>
        <param>
          <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="107"/>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1a5744c0e7a5cbc0bceb0fca334827ca35" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void b2BroadPhase::UnBufferMove</definition>
        <argsstring>(int32 proxyId)</argsstring>
        <name>UnBufferMove</name>
        <param>
          <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="108"/>
      </memberdef>
      <memberdef kind="function" id="classb2_broad_phase_1a7c24ab9e23c062ea51d8018aee0d03f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool b2BroadPhase::QueryCallback</definition>
        <argsstring>(int32 proxyId)</argsstring>
        <name>QueryCallback</name>
        <param>
          <type><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref></type>
          <declname>proxyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The broad-phase is used for computing pairs and performing volume queries and ray casts. This broad-phase does not persist pairs. Instead, this reports potentially new pairs. It is up to the client to consume the new pairs and to track subsequent overlap. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="94">
        <label>b2DynamicTree</label>
        <link refid="classb2_dynamic_tree"/>
        <childnode refid="95" relation="usage">
          <edgelabel>m_nodes</edgelabel>
        </childnode>
      </node>
      <node id="92">
        <label>b2BroadPhase</label>
        <link refid="classb2_broad_phase"/>
        <childnode refid="93" relation="usage">
          <edgelabel>m_pairBuffer</edgelabel>
        </childnode>
        <childnode refid="94" relation="usage">
          <edgelabel>m_tree</edgelabel>
        </childnode>
      </node>
      <node id="93">
        <label>b2Pair</label>
        <link refid="structb2_pair"/>
      </node>
      <node id="97">
        <label>b2Vec2</label>
        <link refid="structb2_vec2"/>
      </node>
      <node id="95">
        <label>b2TreeNode</label>
        <link refid="structb2_tree_node"/>
        <childnode refid="96" relation="usage">
          <edgelabel>aabb</edgelabel>
        </childnode>
      </node>
      <node id="96">
        <label>b2AABB</label>
        <link refid="structb2_a_a_b_b"/>
        <childnode refid="97" relation="usage">
          <edgelabel>lowerBound</edgelabel>
          <edgelabel>upperBound</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="38" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="37" bodyend="125"/>
    <listofallmembers>
      <member refid="classb2_broad_phase_1ac58820d4cb10df81a33923c7c75d8f85" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>b2BroadPhase</name></member>
      <member refid="classb2_broad_phase_1afc450dc71ee33ab0c9e7f1c31d6f7f60" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>b2DynamicTree</name></member>
      <member refid="classb2_broad_phase_1a4917a3c91402339757b5edc1a07ac1f9" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>BufferMove</name></member>
      <member refid="classb2_broad_phase_1ae2f7af756bc55ece45221466c5af449c" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>CreateProxy</name></member>
      <member refid="classb2_broad_phase_1a84f0fb227dc01a9b9baa55c7b8c68984" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>DestroyProxy</name></member>
      <member refid="classb2_broad_phase_1a24d2179b74d248dce1cb58d708183eafa8a4f9965a5b0bbb13a35c20a37fef0ad" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>e_nullProxy</name></member>
      <member refid="classb2_broad_phase_1a7b00ac700db52e52248a25397007d4ff" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>GetFatAABB</name></member>
      <member refid="classb2_broad_phase_1a399fa4f5289a1ec46a65f726f3bac890" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>GetProxyCount</name></member>
      <member refid="classb2_broad_phase_1a1189e783d39bfd69b314284ce52ea3c3" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>GetTreeBalance</name></member>
      <member refid="classb2_broad_phase_1aeb9f94f44840c5bd766031d78f63ca08" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>GetTreeHeight</name></member>
      <member refid="classb2_broad_phase_1abe02c30ca1b3b9c9b84a571a2f8cef92" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>GetTreeQuality</name></member>
      <member refid="classb2_broad_phase_1a89c099e95237d68577376d8f9a4ed013" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>GetUserData</name></member>
      <member refid="classb2_broad_phase_1a320b6be7b85c29ae14fa7b4c34bc8938" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>m_moveBuffer</name></member>
      <member refid="classb2_broad_phase_1aad2464ca4943c5b7c57fe7b72f868600" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>m_moveCapacity</name></member>
      <member refid="classb2_broad_phase_1a8261c4be18ed7abe064c86352861c711" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>m_moveCount</name></member>
      <member refid="classb2_broad_phase_1a082a4d4dc794e1a023e96b43c933be33" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>m_pairBuffer</name></member>
      <member refid="classb2_broad_phase_1aa406224944d006cdbdba2742370a3c67" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>m_pairCapacity</name></member>
      <member refid="classb2_broad_phase_1a492a7a5e5574df1b9dc51c5e56d7af95" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>m_pairCount</name></member>
      <member refid="classb2_broad_phase_1acd748c026ed9ed0f21633df6bd79b1ac" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>m_proxyCount</name></member>
      <member refid="classb2_broad_phase_1a0c7b404407c5e6626fb3fc8b55240516" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>m_queryProxyId</name></member>
      <member refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>m_tree</name></member>
      <member refid="classb2_broad_phase_1a01dc18a19c2b5d0cc1d9cd8c8554234c" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>MoveProxy</name></member>
      <member refid="classb2_broad_phase_1aea5732362c8bb3959c6b24f967654d93" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>Query</name></member>
      <member refid="classb2_broad_phase_1a7c24ab9e23c062ea51d8018aee0d03f5" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>QueryCallback</name></member>
      <member refid="classb2_broad_phase_1aebcb837120ce45bbb82b4b61db533026" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>RayCast</name></member>
      <member refid="classb2_broad_phase_1a1785eb29d14997d81bd537f064d22aba" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>TestOverlap</name></member>
      <member refid="classb2_broad_phase_1a67b296431ebbc7b44037f21d645d9166" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>TouchProxy</name></member>
      <member refid="classb2_broad_phase_1a5744c0e7a5cbc0bceb0fca334827ca35" prot="private" virt="non-virtual"><scope>b2BroadPhase</scope><name>UnBufferMove</name></member>
      <member refid="classb2_broad_phase_1a0a1acd693466b997700242ae00784c20" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>UpdatePairs</name></member>
      <member refid="classb2_broad_phase_1a40cebf62f00ebfa7ca373ad96f76661f" prot="public" virt="non-virtual"><scope>b2BroadPhase</scope><name>~b2BroadPhase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
