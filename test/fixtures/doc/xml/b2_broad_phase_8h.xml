<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="b2_broad_phase_8h" kind="file">
    <compoundname>b2BroadPhase.h</compoundname>
    <includes local="no">Box2D/Common/b2Settings.h</includes>
    <includes local="no">Box2D/Collision/b2Collision.h</includes>
    <includes local="no">Box2D/Collision/b2DynamicTree.h</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="8">
        <label>/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h</label>
        <link refid="b2BroadPhase.h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Box2D/Collision/b2DynamicTree.h</label>
      </node>
      <node id="10">
        <label>Box2D/Collision/b2Collision.h</label>
      </node>
      <node id="9">
        <label>Box2D/Common/b2Settings.h</label>
      </node>
      <node id="12">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <innerclass refid="structb2_pair" prot="public">b2Pair</innerclass>
    <innerclass refid="classb2_broad_phase" prot="public">b2BroadPhase</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="b2_broad_phase_8h_1ad6d75f0819dcf1b88933300ae0430934" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool b2PairLessThan</definition>
        <argsstring>(const b2Pair &amp;pair1, const b2Pair &amp;pair2)</argsstring>
        <name>b2PairLessThan</name>
        <param>
          <type>const <ref refid="structb2_pair" kindref="compound">b2Pair</ref> &amp;</type>
          <declname>pair1</declname>
        </param>
        <param>
          <type>const <ref refid="structb2_pair" kindref="compound">b2Pair</ref> &amp;</type>
          <declname>pair2</declname>
        </param>
        <briefdescription>
<para>This is used to sort pairs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" line="129" bodyfile="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h" bodystart="128" bodyend="141"/>
        <references refid="structb2_pair_1abae3df5e877cf0c4611334e3eec4b84c" compoundref="b2_broad_phase_8h" startline="29">b2Pair::proxyIdA</references>
        <references refid="structb2_pair_1af2bd888ccb34535ab9126497349da749" compoundref="b2_broad_phase_8h" startline="30">b2Pair::proxyIdB</references>
        <referencedby refid="classb2_broad_phase_1a0a1acd693466b997700242ae00784c20" compoundref="b2_broad_phase_8h" startline="181" endline="234">b2BroadPhase::UpdatePairs</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Copyright<sp/>(c)<sp/>2006-2009<sp/>Erin<sp/>Catto<sp/>http://www.box2d.org</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>B2_BROAD_PHASE_H</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>B2_BROAD_PHASE_H</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Box2D/Common/b2Settings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Box2D/Collision/b2Collision.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Box2D/Collision/b2DynamicTree.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structb2_pair" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structb2_pair" kindref="compound">b2Pair</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29" refid="structb2_pair_1abae3df5e877cf0c4611334e3eec4b84c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="structb2_pair_1abae3df5e877cf0c4611334e3eec4b84c" kindref="member">proxyIdA</ref>;</highlight></codeline>
<codeline lineno="30" refid="structb2_pair_1af2bd888ccb34535ab9126497349da749" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="structb2_pair_1af2bd888ccb34535ab9126497349da749" kindref="member">proxyIdB</ref>;</highlight></codeline>
<codeline lineno="31" refid="structb2_pair_1a41bcc6aae5e81c8a7bd874e406446ea8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="structb2_pair_1a41bcc6aae5e81c8a7bd874e406446ea8" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classb2_broad_phase" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classb2_broad_phase" kindref="compound">b2BroadPhase</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43" refid="classb2_broad_phase_1a24d2179b74d248dce1cb58d708183eafa8a4f9965a5b0bbb13a35c20a37fef0ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classb2_broad_phase_1a24d2179b74d248dce1cb58d708183eafa8a4f9965a5b0bbb13a35c20a37fef0ad" kindref="member">e_nullProxy</ref><sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classb2_broad_phase_1ac58820d4cb10df81a33923c7c75d8f85" kindref="member">b2BroadPhase</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classb2_broad_phase_1a40cebf62f00ebfa7ca373ad96f76661f" kindref="member">~b2BroadPhase</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1ae2f7af756bc55ece45221466c5af449c" kindref="member">CreateProxy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_a_a_b_b" kindref="compound" tooltip="An axis aligned bounding box.">b2AABB</ref>&amp;<sp/>aabb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="cvaux_8h_1ae6d7787b8c860038ffa2f009134ec73e" kindref="member">userData</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a84f0fb227dc01a9b9baa55c7b8c68984" kindref="member" tooltip="Destroy a proxy. It is up to the client to remove any pairs.">DestroyProxy</ref>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyId);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a01dc18a19c2b5d0cc1d9cd8c8554234c" kindref="member">MoveProxy</ref>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_a_a_b_b" kindref="compound" tooltip="An axis aligned bounding box.">b2AABB</ref>&amp;<sp/>aabb,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_vec2" kindref="compound" tooltip="A 2D column vector.">b2Vec2</ref>&amp;<sp/>displacement);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a67b296431ebbc7b44037f21d645d9166" kindref="member" tooltip="Call to trigger a re-processing of it&amp;#39;s pairs on the next call to UpdatePairs.">TouchProxy</ref>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyId);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_a_a_b_b" kindref="compound" tooltip="An axis aligned bounding box.">b2AABB</ref>&amp;<sp/><ref refid="classb2_broad_phase_1a7b00ac700db52e52248a25397007d4ff" kindref="member" tooltip="Get the fat AABB for a proxy.">GetFatAABB</ref>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classb2_broad_phase_1a89c099e95237d68577376d8f9a4ed013" kindref="member" tooltip="Get user data from a proxy. Returns NULL if the id is invalid.">GetUserData</ref>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyId)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a1785eb29d14997d81bd537f064d22aba" kindref="member" tooltip="Test overlap of fat AABBs.">TestOverlap</ref>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyIdA,<sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyIdB)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1a399fa4f5289a1ec46a65f726f3bac890" kindref="member" tooltip="Get the number of proxies.">GetProxyCount</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a0a1acd693466b997700242ae00784c20" kindref="member" tooltip="Update the pairs. This results in pair callbacks. This can only add pairs.">UpdatePairs</ref>(<ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref>*<sp/>callback);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1aea5732362c8bb3959c6b24f967654d93" kindref="member">Query</ref>(<ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref>*<sp/>callback,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_a_a_b_b" kindref="compound" tooltip="An axis aligned bounding box.">b2AABB</ref>&amp;<sp/>aabb)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1aebcb837120ce45bbb82b4b61db533026" kindref="member">RayCast</ref>(<ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref>*<sp/>callback,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_ray_cast_input" kindref="compound" tooltip="Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).">b2RayCastInput</ref>&amp;<sp/><ref refid="cvaux_8h_1a8f45a3157cd8bdbb30d638b20fd31f1a" kindref="member">input</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1aeb9f94f44840c5bd766031d78f63ca08" kindref="member" tooltip="Get the height of the embedded tree.">GetTreeHeight</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1a1189e783d39bfd69b314284ce52ea3c3" kindref="member" tooltip="Get the balance of the embedded tree.">GetTreeBalance</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/><ref refid="classb2_broad_phase_1abe02c30ca1b3b9c9b84a571a2f8cef92" kindref="member" tooltip="Get the quality metric of the embedded tree.">GetTreeQuality</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classb2_broad_phase_1afc450dc71ee33ab0c9e7f1c31d6f7f60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classb2_dynamic_tree" kindref="compound">b2DynamicTree</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a4917a3c91402339757b5edc1a07ac1f9" kindref="member">BufferMove</ref>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyId);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a5744c0e7a5cbc0bceb0fca334827ca35" kindref="member">UnBufferMove</ref>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyId);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a7c24ab9e23c062ea51d8018aee0d03f5" kindref="member">QueryCallback</ref>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyId);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classb2_dynamic_tree" kindref="compound">b2DynamicTree</ref><sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classb2_broad_phase_1acd748c026ed9ed0f21633df6bd79b1ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1acd748c026ed9ed0f21633df6bd79b1ac" kindref="member">m_proxyCount</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classb2_broad_phase_1a320b6be7b85c29ae14fa7b4c34bc8938" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref>*<sp/><ref refid="classb2_broad_phase_1a320b6be7b85c29ae14fa7b4c34bc8938" kindref="member">m_moveBuffer</ref>;</highlight></codeline>
<codeline lineno="117" refid="classb2_broad_phase_1aad2464ca4943c5b7c57fe7b72f868600" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1aad2464ca4943c5b7c57fe7b72f868600" kindref="member">m_moveCapacity</ref>;</highlight></codeline>
<codeline lineno="118" refid="classb2_broad_phase_1a8261c4be18ed7abe064c86352861c711" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1a8261c4be18ed7abe064c86352861c711" kindref="member">m_moveCount</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classb2_broad_phase_1a082a4d4dc794e1a023e96b43c933be33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_pair" kindref="compound">b2Pair</ref>*<sp/><ref refid="classb2_broad_phase_1a082a4d4dc794e1a023e96b43c933be33" kindref="member">m_pairBuffer</ref>;</highlight></codeline>
<codeline lineno="121" refid="classb2_broad_phase_1aa406224944d006cdbdba2742370a3c67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1aa406224944d006cdbdba2742370a3c67" kindref="member">m_pairCapacity</ref>;</highlight></codeline>
<codeline lineno="122" refid="classb2_broad_phase_1a492a7a5e5574df1b9dc51c5e56d7af95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1a492a7a5e5574df1b9dc51c5e56d7af95" kindref="member">m_pairCount</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classb2_broad_phase_1a0c7b404407c5e6626fb3fc8b55240516" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1a0c7b404407c5e6626fb3fc8b55240516" kindref="member">m_queryProxyId</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="b2_broad_phase_8h_1ad6d75f0819dcf1b88933300ae0430934" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="b2_broad_phase_8h_1ad6d75f0819dcf1b88933300ae0430934" kindref="member" tooltip="This is used to sort pairs.">b2PairLessThan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_pair" kindref="compound">b2Pair</ref>&amp;<sp/>pair1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_pair" kindref="compound">b2Pair</ref>&amp;<sp/>pair2)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pair1.<ref refid="structb2_pair_1abae3df5e877cf0c4611334e3eec4b84c" kindref="member">proxyIdA</ref><sp/>&lt;<sp/>pair2.<ref refid="structb2_pair_1abae3df5e877cf0c4611334e3eec4b84c" kindref="member">proxyIdA</ref>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pair1.<ref refid="structb2_pair_1abae3df5e877cf0c4611334e3eec4b84c" kindref="member">proxyIdA</ref><sp/>==<sp/>pair2.<ref refid="structb2_pair_1abae3df5e877cf0c4611334e3eec4b84c" kindref="member">proxyIdA</ref>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair1.<ref refid="structb2_pair_1af2bd888ccb34535ab9126497349da749" kindref="member">proxyIdB</ref><sp/>&lt;<sp/>pair2.<ref refid="structb2_pair_1af2bd888ccb34535ab9126497349da749" kindref="member">proxyIdB</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classb2_broad_phase_1a89c099e95237d68577376d8f9a4ed013" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classb2_broad_phase_1a89c099e95237d68577376d8f9a4ed013" kindref="member" tooltip="Get user data from a proxy. Returns NULL if the id is invalid.">b2BroadPhase::GetUserData</ref>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyId)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="144"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1a44ab57dce3c42b0a5847a64e489a71ce" kindref="member">GetUserData</ref>(proxyId);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classb2_broad_phase_1a1785eb29d14997d81bd537f064d22aba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a1785eb29d14997d81bd537f064d22aba" kindref="member" tooltip="Test overlap of fat AABBs.">b2BroadPhase::TestOverlap</ref>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyIdA,<sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyIdB)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="149"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_a_a_b_b" kindref="compound" tooltip="An axis aligned bounding box.">b2AABB</ref>&amp;<sp/>aabbA<sp/>=<sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1adf4676b1c34a57b4451bcbeaebe65687" kindref="member" tooltip="Get the fat AABB for a proxy.">GetFatAABB</ref>(proxyIdA);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_a_a_b_b" kindref="compound" tooltip="An axis aligned bounding box.">b2AABB</ref>&amp;<sp/>aabbB<sp/>=<sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1adf4676b1c34a57b4451bcbeaebe65687" kindref="member" tooltip="Get the fat AABB for a proxy.">GetFatAABB</ref>(proxyIdB);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="b2_collision_8h_1ae7601420d0b42c1ee494e879dd2009a5" kindref="member" tooltip="Determine if two generic shapes overlap.">b2TestOverlap</ref>(aabbA,<sp/>aabbB);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classb2_broad_phase_1a7b00ac700db52e52248a25397007d4ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_a_a_b_b" kindref="compound" tooltip="An axis aligned bounding box.">b2AABB</ref>&amp;<sp/><ref refid="classb2_broad_phase_1a7b00ac700db52e52248a25397007d4ff" kindref="member" tooltip="Get the fat AABB for a proxy.">b2BroadPhase::GetFatAABB</ref>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>proxyId)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="156"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1adf4676b1c34a57b4451bcbeaebe65687" kindref="member" tooltip="Get the fat AABB for a proxy.">GetFatAABB</ref>(proxyId);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classb2_broad_phase_1a399fa4f5289a1ec46a65f726f3bac890" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1a399fa4f5289a1ec46a65f726f3bac890" kindref="member" tooltip="Get the number of proxies.">b2BroadPhase::GetProxyCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="161"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1acd748c026ed9ed0f21633df6bd79b1ac" kindref="member">m_proxyCount</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classb2_broad_phase_1aeb9f94f44840c5bd766031d78f63ca08" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1aeb9f94f44840c5bd766031d78f63ca08" kindref="member" tooltip="Get the height of the embedded tree.">b2BroadPhase::GetTreeHeight</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="166"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1add7e09cdf279e7c0031da9dfd4cdf4db" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classb2_broad_phase_1a1189e783d39bfd69b314284ce52ea3c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/><ref refid="classb2_broad_phase_1a1189e783d39bfd69b314284ce52ea3c3" kindref="member" tooltip="Get the balance of the embedded tree.">b2BroadPhase::GetTreeBalance</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="171"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1ae02c45d1a68b42e59d170438ddbb7977" kindref="member">GetMaxBalance</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classb2_broad_phase_1abe02c30ca1b3b9c9b84a571a2f8cef92" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="b2_settings_8h_1aacdc525d6f7bddb3ae95d5c311bd06a1" kindref="member">float32</ref><sp/><ref refid="classb2_broad_phase_1abe02c30ca1b3b9c9b84a571a2f8cef92" kindref="member" tooltip="Get the quality metric of the embedded tree.">b2BroadPhase::GetTreeQuality</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="176"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1ad78282a720c451e032b43c34cba02f1a" kindref="member" tooltip="Get the ratio of the sum of the node areas to the root area.">GetAreaRatio</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="181" refid="classb2_broad_phase_1a0a1acd693466b997700242ae00784c20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1a0a1acd693466b997700242ae00784c20" kindref="member" tooltip="Update the pairs. This results in pair callbacks. This can only add pairs.">b2BroadPhase::UpdatePairs</ref>(<ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref>*<sp/>callback)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>pair<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classb2_broad_phase_1a492a7a5e5574df1b9dc51c5e56d7af95" kindref="member">m_pairCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>tree<sp/>queries<sp/>for<sp/>all<sp/>moving<sp/>proxies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classb2_broad_phase_1a8261c4be18ed7abe064c86352861c711" kindref="member">m_moveCount</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classb2_broad_phase_1a0c7b404407c5e6626fb3fc8b55240516" kindref="member">m_queryProxyId</ref><sp/>=<sp/><ref refid="classb2_broad_phase_1a320b6be7b85c29ae14fa7b4c34bc8938" kindref="member">m_moveBuffer</ref>[i];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classb2_broad_phase_1a0c7b404407c5e6626fb3fc8b55240516" kindref="member">m_queryProxyId</ref><sp/>==<sp/><ref refid="classb2_broad_phase_1a24d2179b74d248dce1cb58d708183eafa8a4f9965a5b0bbb13a35c20a37fef0ad" kindref="member">e_nullProxy</ref>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>to<sp/>query<sp/>the<sp/>tree<sp/>with<sp/>the<sp/>fat<sp/>AABB<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>don&apos;t<sp/>fail<sp/>to<sp/>create<sp/>a<sp/>pair<sp/>that<sp/>may<sp/>touch<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_a_a_b_b" kindref="compound" tooltip="An axis aligned bounding box.">b2AABB</ref>&amp;<sp/>fatAABB<sp/>=<sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1adf4676b1c34a57b4451bcbeaebe65687" kindref="member" tooltip="Get the fat AABB for a proxy.">GetFatAABB</ref>(<ref refid="classb2_broad_phase_1a0c7b404407c5e6626fb3fc8b55240516" kindref="member">m_queryProxyId</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Query<sp/>tree,<sp/>create<sp/>pairs<sp/>and<sp/>add<sp/>them<sp/>pair<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1adf70aee89b4692fc79d65b1f54308585" kindref="member">Query</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>fatAABB);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>move<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_moveCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>the<sp/>pair<sp/>buffer<sp/>to<sp/>expose<sp/>duplicates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(<ref refid="classb2_broad_phase_1a082a4d4dc794e1a023e96b43c933be33" kindref="member">m_pairBuffer</ref>,<sp/><ref refid="classb2_broad_phase_1a082a4d4dc794e1a023e96b43c933be33" kindref="member">m_pairBuffer</ref><sp/>+<sp/><ref refid="classb2_broad_phase_1a492a7a5e5574df1b9dc51c5e56d7af95" kindref="member">m_pairCount</ref>,<sp/><ref refid="b2_broad_phase_8h_1ad6d75f0819dcf1b88933300ae0430934" kindref="member" tooltip="This is used to sort pairs.">b2PairLessThan</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>pairs<sp/>back<sp/>to<sp/>the<sp/>client.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="b2_settings_8h_1a43d43196463bde49cb067f5c20ab8481" kindref="member">int32</ref><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="classb2_broad_phase_1a492a7a5e5574df1b9dc51c5e56d7af95" kindref="member">m_pairCount</ref>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_pair" kindref="compound">b2Pair</ref>*<sp/>primaryPair<sp/>=<sp/><ref refid="classb2_broad_phase_1a082a4d4dc794e1a023e96b43c933be33" kindref="member">m_pairBuffer</ref><sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>userDataA<sp/>=<sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1a44ab57dce3c42b0a5847a64e489a71ce" kindref="member">GetUserData</ref>(primaryPair-&gt;<ref refid="structb2_pair_1abae3df5e877cf0c4611334e3eec4b84c" kindref="member">proxyIdA</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>userDataB<sp/>=<sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1a44ab57dce3c42b0a5847a64e489a71ce" kindref="member">GetUserData</ref>(primaryPair-&gt;<ref refid="structb2_pair_1af2bd888ccb34535ab9126497349da749" kindref="member">proxyIdB</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback-&gt;AddPair(userDataA,<sp/>userDataB);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>any<sp/>duplicate<sp/>pairs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="classb2_broad_phase_1a492a7a5e5574df1b9dc51c5e56d7af95" kindref="member">m_pairCount</ref>)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structb2_pair" kindref="compound">b2Pair</ref>*<sp/>pair<sp/>=<sp/><ref refid="classb2_broad_phase_1a082a4d4dc794e1a023e96b43c933be33" kindref="member">m_pairBuffer</ref><sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pair-&gt;<ref refid="structb2_pair_1abae3df5e877cf0c4611334e3eec4b84c" kindref="member">proxyIdA</ref><sp/>!=<sp/>primaryPair-&gt;<ref refid="structb2_pair_1abae3df5e877cf0c4611334e3eec4b84c" kindref="member">proxyIdA</ref><sp/>||<sp/>pair-&gt;<ref refid="structb2_pair_1af2bd888ccb34535ab9126497349da749" kindref="member">proxyIdB</ref><sp/>!=<sp/>primaryPair-&gt;<ref refid="structb2_pair_1af2bd888ccb34535ab9126497349da749" kindref="member">proxyIdB</ref>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>keep<sp/>the<sp/>tree<sp/>balanced.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_tree.Rebalance(4);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="237" refid="classb2_broad_phase_1aea5732362c8bb3959c6b24f967654d93" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1aea5732362c8bb3959c6b24f967654d93" kindref="member">b2BroadPhase::Query</ref>(<ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref>*<sp/>callback,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_a_a_b_b" kindref="compound" tooltip="An axis aligned bounding box.">b2AABB</ref>&amp;<sp/>aabb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="238"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1adf70aee89b4692fc79d65b1f54308585" kindref="member">Query</ref>(callback,<sp/>aabb);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="243" refid="classb2_broad_phase_1aebcb837120ce45bbb82b4b61db533026" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classb2_broad_phase_1aebcb837120ce45bbb82b4b61db533026" kindref="member">b2BroadPhase::RayCast</ref>(<ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref>*<sp/>callback,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structb2_ray_cast_input" kindref="compound" tooltip="Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).">b2RayCastInput</ref>&amp;<sp/><ref refid="cvaux_8h_1a8f45a3157cd8bdbb30d638b20fd31f1a" kindref="member">input</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="244"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classb2_broad_phase_1a553b3344719751484472098774ad132a" kindref="member">m_tree</ref>.<ref refid="classb2_dynamic_tree_1abd7a5c6a5bc109dbbdb0ec3aae039648" kindref="member">RayCast</ref>(callback,<sp/>input);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/gaspard/git/lubyk/modules/b2/bind/b2BroadPhase.h"/>
  </compounddef>
</doxygen>
