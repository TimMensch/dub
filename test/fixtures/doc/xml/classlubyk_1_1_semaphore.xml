<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="classlubyk_1_1_semaphore" kind="class" prot="public">
    <compoundname>lubyk::Semaphore</compoundname>
    <basecompoundref refid="classlubyk_1_1_non_copyable" prot="private" virt="non-virtual">lubyk::NonCopyable</basecompoundref>
    <includes refid="semaphore_8h" local="no">semaphore.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlubyk_1_1_semaphore_1a4b16db492356b1ed277883e8d57f04c1" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lubyk::Semaphore::resource_count_</definition>
        <argsstring></argsstring>
        <name>resource_count_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" line="92" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" bodystart="92" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_semaphore_1ab10c6fbf95d70e647719499d62eb22c0" compoundref="semaphore_8h" startline="62" endline="68">acquire</referencedby>
        <referencedby refid="classlubyk_1_1_semaphore_1aaa9a20bd08a7cd4f935dc99916addd73" compoundref="semaphore_8h" startline="81" endline="83">acquire_all</referencedby>
        <referencedby refid="classlubyk_1_1_semaphore_1a37f0e9061f06ce28ce4f2a2031c97c56" compoundref="semaphore_8h" startline="72" endline="77">release</referencedby>
        <referencedby refid="classlubyk_1_1_semaphore_1a170ed134d1d01a0d4d6ef3275ede7ab6" compoundref="semaphore_8h" startline="87" endline="89">release_all</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlubyk_1_1_semaphore_1a4f22425e72d36e55ea671217efc9c35d" prot="private" static="no" mutable="no">
        <type><ref refid="classlubyk_1_1_mutex" kindref="compound">Mutex</ref></type>
        <definition>Mutex lubyk::Semaphore::acquire_mutex_</definition>
        <argsstring></argsstring>
        <name>acquire_mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" line="93" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" bodystart="93" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_semaphore_1ab10c6fbf95d70e647719499d62eb22c0" compoundref="semaphore_8h" startline="62" endline="68">acquire</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlubyk_1_1_semaphore_1a03a9d01551acdefc1978dac3d1f4b139" prot="private" static="no" mutable="no">
        <type>sem_t *</type>
        <definition>sem_t* lubyk::Semaphore::semaphore_</definition>
        <argsstring></argsstring>
        <name>semaphore_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" line="94" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" bodystart="94" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_semaphore_1a8b65faefafa05220a2699c8bfc32bef3" compoundref="semaphore_8h" startline="50" endline="52">acquire</referencedby>
        <referencedby refid="classlubyk_1_1_semaphore_1ac2626575a0a1d34925907c52721ce9fe" compoundref="semaphore_8h" startline="56" endline="58">release</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlubyk_1_1_semaphore_1a7a9c667c726522efcc22f68eae53719c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lubyk::Semaphore::Semaphore</definition>
        <argsstring>(int resource_count=0)</argsstring>
        <name>Semaphore</name>
        <param>
          <type>int</type>
          <declname>resource_count</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" line="44"/>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_semaphore_1a2b958d532119d370ec9c54745e68f59f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>lubyk::Semaphore::~Semaphore</definition>
        <argsstring>()</argsstring>
        <name>~Semaphore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" line="46"/>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_semaphore_1a8b65faefafa05220a2699c8bfc32bef3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lubyk::Semaphore::acquire</definition>
        <argsstring>()</argsstring>
        <name>acquire</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get resource or wait until it is available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" line="50" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" bodystart="50" bodyend="52"/>
        <references refid="classlubyk_1_1_semaphore_1a03a9d01551acdefc1978dac3d1f4b139" compoundref="semaphore_8h" startline="94">semaphore_</references>
        <referencedby refid="classlubyk_1_1_semaphore_1ab10c6fbf95d70e647719499d62eb22c0" compoundref="semaphore_8h" startline="62" endline="68">acquire</referencedby>
        <referencedby refid="classlubyk_1_1_semaphore_1aaa9a20bd08a7cd4f935dc99916addd73" compoundref="semaphore_8h" startline="81" endline="83">acquire_all</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_semaphore_1ac2626575a0a1d34925907c52721ce9fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lubyk::Semaphore::release</definition>
        <argsstring>()</argsstring>
        <name>release</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release resource. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" line="56" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" bodystart="56" bodyend="58"/>
        <references refid="classlubyk_1_1_semaphore_1a03a9d01551acdefc1978dac3d1f4b139" compoundref="semaphore_8h" startline="94">semaphore_</references>
        <referencedby refid="classlubyk_1_1_semaphore_1a37f0e9061f06ce28ce4f2a2031c97c56" compoundref="semaphore_8h" startline="72" endline="77">release</referencedby>
        <referencedby refid="classlubyk_1_1_semaphore_1a170ed134d1d01a0d4d6ef3275ede7ab6" compoundref="semaphore_8h" startline="87" endline="89">release_all</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_semaphore_1ab10c6fbf95d70e647719499d62eb22c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lubyk::Semaphore::acquire</definition>
        <argsstring>(size_t count)</argsstring>
        <name>acquire</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Acquire multiple resources at the same time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" line="62" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" bodystart="62" bodyend="68"/>
        <references refid="classlubyk_1_1_semaphore_1a8b65faefafa05220a2699c8bfc32bef3" compoundref="semaphore_8h" startline="50" endline="52">acquire</references>
        <references refid="classlubyk_1_1_semaphore_1a4f22425e72d36e55ea671217efc9c35d" compoundref="semaphore_8h" startline="93">acquire_mutex_</references>
        <references refid="cv_8h_1a2e751d0e4002c0a0e2779e2ad4dae90f" compoundref="cv_8h" startline="516">count</references>
        <references refid="classlubyk_1_1_semaphore_1a4b16db492356b1ed277883e8d57f04c1" compoundref="semaphore_8h" startline="92">resource_count_</references>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_semaphore_1a37f0e9061f06ce28ce4f2a2031c97c56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lubyk::Semaphore::release</definition>
        <argsstring>(size_t count)</argsstring>
        <name>release</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release multiple resources at the same time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" line="72" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" bodystart="72" bodyend="77"/>
        <references refid="cv_8h_1a2e751d0e4002c0a0e2779e2ad4dae90f" compoundref="cv_8h" startline="516">count</references>
        <references refid="classlubyk_1_1_semaphore_1ac2626575a0a1d34925907c52721ce9fe" compoundref="semaphore_8h" startline="56" endline="58">release</references>
        <references refid="classlubyk_1_1_semaphore_1a4b16db492356b1ed277883e8d57f04c1" compoundref="semaphore_8h" startline="92">resource_count_</references>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_semaphore_1aaa9a20bd08a7cd4f935dc99916addd73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lubyk::Semaphore::acquire_all</definition>
        <argsstring>()</argsstring>
        <name>acquire_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Acquire all resources protected by this semaphore </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" line="81" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" bodystart="81" bodyend="83"/>
        <references refid="classlubyk_1_1_semaphore_1a8b65faefafa05220a2699c8bfc32bef3" compoundref="semaphore_8h" startline="50" endline="52">acquire</references>
        <references refid="classlubyk_1_1_semaphore_1a4b16db492356b1ed277883e8d57f04c1" compoundref="semaphore_8h" startline="92">resource_count_</references>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_semaphore_1a170ed134d1d01a0d4d6ef3275ede7ab6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lubyk::Semaphore::release_all</definition>
        <argsstring>()</argsstring>
        <name>release_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release all resources previously acquired with a call to &apos;acquire_all&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" line="87" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" bodystart="87" bodyend="89"/>
        <references refid="classlubyk_1_1_semaphore_1ac2626575a0a1d34925907c52721ce9fe" compoundref="semaphore_8h" startline="56" endline="58">release</references>
        <references refid="classlubyk_1_1_semaphore_1a4b16db492356b1ed277883e8d57f04c1" compoundref="semaphore_8h" startline="92">resource_count_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2397">
        <label>lubyk::NonCopyable</label>
        <link refid="classlubyk_1_1_non_copyable"/>
      </node>
      <node id="2396">
        <label>lubyk::Semaphore</label>
        <link refid="classlubyk_1_1_semaphore"/>
        <childnode refid="2397" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2399">
        <label>lubyk::NonCopyable</label>
        <link refid="classlubyk_1_1_non_copyable"/>
      </node>
      <node id="2400">
        <label>lubyk::Mutex</label>
        <link refid="classlubyk_1_1_mutex"/>
        <childnode refid="2399" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2398">
        <label>lubyk::Semaphore</label>
        <link refid="classlubyk_1_1_semaphore"/>
        <childnode refid="2399" relation="private-inheritance">
        </childnode>
        <childnode refid="2400" relation="usage">
          <edgelabel>acquire_mutex_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" line="42" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/semaphore.h" bodystart="42" bodyend="95"/>
    <listofallmembers>
      <member refid="classlubyk_1_1_semaphore_1a8b65faefafa05220a2699c8bfc32bef3" prot="public" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>acquire</name></member>
      <member refid="classlubyk_1_1_semaphore_1ab10c6fbf95d70e647719499d62eb22c0" prot="public" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>acquire</name></member>
      <member refid="classlubyk_1_1_semaphore_1aaa9a20bd08a7cd4f935dc99916addd73" prot="public" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>acquire_all</name></member>
      <member refid="classlubyk_1_1_semaphore_1a4f22425e72d36e55ea671217efc9c35d" prot="private" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>acquire_mutex_</name></member>
      <member refid="classlubyk_1_1_non_copyable_1a589ca6787b3fb8f88439cff31b249bf7" prot="private" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>NonCopyable</name></member>
      <member refid="classlubyk_1_1_semaphore_1ac2626575a0a1d34925907c52721ce9fe" prot="public" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>release</name></member>
      <member refid="classlubyk_1_1_semaphore_1a37f0e9061f06ce28ce4f2a2031c97c56" prot="public" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>release</name></member>
      <member refid="classlubyk_1_1_semaphore_1a170ed134d1d01a0d4d6ef3275ede7ab6" prot="public" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>release_all</name></member>
      <member refid="classlubyk_1_1_semaphore_1a4b16db492356b1ed277883e8d57f04c1" prot="private" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>resource_count_</name></member>
      <member refid="classlubyk_1_1_semaphore_1a7a9c667c726522efcc22f68eae53719c" prot="public" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>Semaphore</name></member>
      <member refid="classlubyk_1_1_semaphore_1a03a9d01551acdefc1978dac3d1f4b139" prot="private" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>semaphore_</name></member>
      <member refid="classlubyk_1_1_non_copyable_1a7efa456af3055dc86071f78c4bf1d1c3" prot="private" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>~NonCopyable</name></member>
      <member refid="classlubyk_1_1_semaphore_1a2b958d532119d370ec9c54745e68f59f" prot="public" virt="non-virtual"><scope>lubyk::Semaphore</scope><name>~Semaphore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
