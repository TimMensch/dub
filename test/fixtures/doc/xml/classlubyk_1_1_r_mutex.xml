<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="classlubyk_1_1_r_mutex" kind="class" prot="public">
    <compoundname>lubyk::RMutex</compoundname>
    <basecompoundref refid="classlubyk_1_1_non_copyable" prot="private" virt="non-virtual">lubyk::NonCopyable</basecompoundref>
    <derivedcompoundref refid="classlk_1_1_mutex" prot="public" virt="non-virtual">lk::Mutex</derivedcompoundref>
    <includes refid="rmutex_8h" local="no">rmutex.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlubyk_1_1_r_mutex_1a90815906910a60676dcb8f019946254c" prot="private" static="no" mutable="no">
        <type><ref refid="classlubyk_1_1_mutex" kindref="compound">Mutex</ref></type>
        <definition>Mutex lubyk::RMutex::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" line="46" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" bodystart="46" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_r_mutex_1a63ad83c6e14efe863a139d972fc36e42" compoundref="rmutex_8h" startline="59" endline="68">lock</referencedby>
        <referencedby refid="classlubyk_1_1_r_mutex_1aea9fcfff855511d10784d718c82df6f8" compoundref="rmutex_8h" startline="71" endline="76">unlock</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlubyk_1_1_r_mutex_1a8e32c598ca3ae87227c6ce5b2173ecc3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int lubyk::RMutex::counter_</definition>
        <argsstring></argsstring>
        <name>counter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" line="47" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" bodystart="47" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_r_mutex_1a63ad83c6e14efe863a139d972fc36e42" compoundref="rmutex_8h" startline="59" endline="68">lock</referencedby>
        <referencedby refid="classlubyk_1_1_r_mutex_1a80b858a3e7a1747c3678a1e52a49ad24" compoundref="rmutex_8h" startline="80" endline="82">lockCount</referencedby>
        <referencedby refid="classlubyk_1_1_r_mutex_1aea9fcfff855511d10784d718c82df6f8" compoundref="rmutex_8h" startline="71" endline="76">unlock</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlubyk_1_1_r_mutex_1a04f8725a1831353b11d5c940df75c812" prot="private" static="no" mutable="no">
        <type>pthread_t</type>
        <definition>pthread_t lubyk::RMutex::owner_</definition>
        <argsstring></argsstring>
        <name>owner_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" line="48" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" bodystart="48" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_r_mutex_1a63ad83c6e14efe863a139d972fc36e42" compoundref="rmutex_8h" startline="59" endline="68">lock</referencedby>
        <referencedby refid="classlubyk_1_1_r_mutex_1aea9fcfff855511d10784d718c82df6f8" compoundref="rmutex_8h" startline="71" endline="76">unlock</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlubyk_1_1_r_mutex_1a25061c60abad8f98b813ebfe1a358ad0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lubyk::RMutex::RMutex</definition>
        <argsstring>()</argsstring>
        <name>RMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" line="52" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_r_mutex_1a57f8cc4e13e6286a7e41cc5d7212a08b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lubyk::RMutex::~RMutex</definition>
        <argsstring>()</argsstring>
        <name>~RMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" line="54" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_r_mutex_1a63ad83c6e14efe863a139d972fc36e42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lubyk::RMutex::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <reimplementedby refid="classlk_1_1_mutex_1abeb0351ba089c71991ab8bd9e60a649d">lock</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the mutex is locked by another thread, waits until it is unlocked, lock and continue. If the mutex is not locked. Lock and continue. If this thread locked it: bang! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" line="59" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" bodystart="59" bodyend="68"/>
        <references refid="classlubyk_1_1_r_mutex_1a8e32c598ca3ae87227c6ce5b2173ecc3" compoundref="rmutex_8h" startline="47">counter_</references>
        <references refid="classlubyk_1_1_mutex_1a74ee38ef2f9bf4e86a3871f5b60a31c3" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="67" endline="69">lubyk::Mutex::lock</references>
        <references refid="classlubyk_1_1_r_mutex_1a90815906910a60676dcb8f019946254c" compoundref="rmutex_8h" startline="46">mutex_</references>
        <references refid="classlubyk_1_1_r_mutex_1a04f8725a1831353b11d5c940df75c812" compoundref="rmutex_8h" startline="48">owner_</references>
        <referencedby refid="classlubyk_1_1_scoped_lock_1a602c6ba7fa51e5e684fb90d934d94c07" compoundref="rmutex_8h" startline="93" endline="95">lubyk::ScopedLock::ScopedLock</referencedby>
        <referencedby refid="classlubyk_1_1_scoped_unlock_1a552ddc12ad44674a7e91990706fe8bd0" compoundref="rmutex_8h" startline="121" endline="123">lubyk::ScopedUnlock::~ScopedUnlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_r_mutex_1aea9fcfff855511d10784d718c82df6f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lubyk::RMutex::unlock</definition>
        <argsstring>()</argsstring>
        <name>unlock</name>
        <reimplementedby refid="classlk_1_1_mutex_1a9572d1bbf2813fa7e7f6dcc4fd3686b3">unlock</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release the lock so others can work on the data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" line="71" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" bodystart="71" bodyend="76"/>
        <references refid="classlubyk_1_1_r_mutex_1a8e32c598ca3ae87227c6ce5b2173ecc3" compoundref="rmutex_8h" startline="47">counter_</references>
        <references refid="classlubyk_1_1_r_mutex_1a90815906910a60676dcb8f019946254c" compoundref="rmutex_8h" startline="46">mutex_</references>
        <references refid="classlubyk_1_1_r_mutex_1a04f8725a1831353b11d5c940df75c812" compoundref="rmutex_8h" startline="48">owner_</references>
        <references refid="classlubyk_1_1_mutex_1a83fead89eb5401b9dd1fbc6ecdd7e31c" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="72" endline="74">lubyk::Mutex::unlock</references>
        <referencedby refid="classlubyk_1_1_scoped_unlock_1af8211e327e5047c6dff6f3807c78ff15" compoundref="rmutex_8h" startline="113" endline="115">lubyk::ScopedUnlock::ScopedUnlock</referencedby>
        <referencedby refid="classlubyk_1_1_scoped_lock_1adafdc2f414a4847fe3499dec25bf6fb5" compoundref="rmutex_8h" startline="101" endline="103">lubyk::ScopedLock::~ScopedLock</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlubyk_1_1_r_mutex_1a80b858a3e7a1747c3678a1e52a49ad24" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lubyk::RMutex::lockCount</definition>
        <argsstring>() const </argsstring>
        <name>lockCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used for debugging and testing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" line="80" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" bodystart="80" bodyend="82"/>
        <references refid="classlubyk_1_1_r_mutex_1a8e32c598ca3ae87227c6ce5b2173ecc3" compoundref="rmutex_8h" startline="47">counter_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Recursive <ref refid="classlubyk_1_1_mutex" kindref="compound">Mutex</ref>: experimental DO NOT USE ! </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2367">
        <label>lubyk::NonCopyable</label>
        <link refid="classlubyk_1_1_non_copyable"/>
      </node>
      <node id="2368">
        <label>lk::Mutex</label>
        <link refid="classlk_1_1_mutex"/>
        <childnode refid="2366" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2366">
        <label>lubyk::RMutex</label>
        <link refid="classlubyk_1_1_r_mutex"/>
        <childnode refid="2367" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2370">
        <label>lubyk::NonCopyable</label>
        <link refid="classlubyk_1_1_non_copyable"/>
      </node>
      <node id="2369">
        <label>lubyk::RMutex</label>
        <link refid="classlubyk_1_1_r_mutex"/>
        <childnode refid="2370" relation="private-inheritance">
        </childnode>
        <childnode refid="2371" relation="usage">
          <edgelabel>mutex_</edgelabel>
        </childnode>
      </node>
      <node id="2371">
        <label>lubyk::Mutex</label>
        <link refid="classlubyk_1_1_mutex"/>
        <childnode refid="2370" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" line="45" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/rmutex.h" bodystart="44" bodyend="83"/>
    <listofallmembers>
      <member refid="classlubyk_1_1_r_mutex_1a8e32c598ca3ae87227c6ce5b2173ecc3" prot="private" virt="non-virtual"><scope>lubyk::RMutex</scope><name>counter_</name></member>
      <member refid="classlubyk_1_1_r_mutex_1a63ad83c6e14efe863a139d972fc36e42" prot="public" virt="non-virtual"><scope>lubyk::RMutex</scope><name>lock</name></member>
      <member refid="classlubyk_1_1_r_mutex_1a80b858a3e7a1747c3678a1e52a49ad24" prot="protected" virt="non-virtual"><scope>lubyk::RMutex</scope><name>lockCount</name></member>
      <member refid="classlubyk_1_1_r_mutex_1a90815906910a60676dcb8f019946254c" prot="private" virt="non-virtual"><scope>lubyk::RMutex</scope><name>mutex_</name></member>
      <member refid="classlubyk_1_1_non_copyable_1a589ca6787b3fb8f88439cff31b249bf7" prot="private" virt="non-virtual"><scope>lubyk::RMutex</scope><name>NonCopyable</name></member>
      <member refid="classlubyk_1_1_r_mutex_1a04f8725a1831353b11d5c940df75c812" prot="private" virt="non-virtual"><scope>lubyk::RMutex</scope><name>owner_</name></member>
      <member refid="classlubyk_1_1_r_mutex_1a25061c60abad8f98b813ebfe1a358ad0" prot="public" virt="non-virtual"><scope>lubyk::RMutex</scope><name>RMutex</name></member>
      <member refid="classlubyk_1_1_r_mutex_1aea9fcfff855511d10784d718c82df6f8" prot="public" virt="non-virtual"><scope>lubyk::RMutex</scope><name>unlock</name></member>
      <member refid="classlubyk_1_1_non_copyable_1a7efa456af3055dc86071f78c4bf1d1c3" prot="private" virt="non-virtual"><scope>lubyk::RMutex</scope><name>~NonCopyable</name></member>
      <member refid="classlubyk_1_1_r_mutex_1a57f8cc4e13e6286a7e41cc5d7212a08b" prot="public" virt="non-virtual"><scope>lubyk::RMutex</scope><name>~RMutex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
