<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="cxflann_8h" kind="file">
    <compoundname>cxflann.h</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*M///////////////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="2"><highlight class="comment">//</highlight></codeline>
<codeline lineno="3"><highlight class="comment">//<sp/><sp/>IMPORTANT:<sp/>READ<sp/>BEFORE<sp/>DOWNLOADING,<sp/>COPYING,<sp/>INSTALLING<sp/>OR<sp/>USING.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">//</highlight></codeline>
<codeline lineno="5"><highlight class="comment">//<sp/><sp/>By<sp/>downloading,<sp/>copying,<sp/>installing<sp/>or<sp/>using<sp/>the<sp/>software<sp/>you<sp/>agree<sp/>to<sp/>this<sp/>license.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">//<sp/><sp/>If<sp/>you<sp/>do<sp/>not<sp/>agree<sp/>to<sp/>this<sp/>license,<sp/>do<sp/>not<sp/>download,<sp/>install,</highlight></codeline>
<codeline lineno="7"><highlight class="comment">//<sp/><sp/>copy<sp/>or<sp/>use<sp/>the<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">//</highlight></codeline>
<codeline lineno="9"><highlight class="comment">//</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>License<sp/>Agreement</highlight></codeline>
<codeline lineno="11"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>Open<sp/>Source<sp/>Computer<sp/>Vision<sp/>Library</highlight></codeline>
<codeline lineno="12"><highlight class="comment">//</highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2000-2008,<sp/>Intel<sp/>Corporation,<sp/>all<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2009,<sp/>Willow<sp/>Garage<sp/>Inc.,<sp/>all<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>Third<sp/>party<sp/>copyrights<sp/>are<sp/>property<sp/>of<sp/>their<sp/>respective<sp/>owners.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">//</highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="18"><highlight class="comment">//<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="19"><highlight class="comment">//</highlight></codeline>
<codeline lineno="20"><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Redistribution&apos;s<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="21"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">//</highlight></codeline>
<codeline lineno="23"><highlight class="comment">//<sp/><sp/><sp/>*<sp/>Redistribution&apos;s<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="24"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation</highlight></codeline>
<codeline lineno="25"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="26"><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment">//<sp/><sp/><sp/>*<sp/>The<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holders<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products</highlight></codeline>
<codeline lineno="28"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="29"><highlight class="comment">//</highlight></codeline>
<codeline lineno="30"><highlight class="comment">//<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>by<sp/>the<sp/>copyright<sp/>holders<sp/>and<sp/>contributors<sp/>&quot;as<sp/>is&quot;<sp/>and</highlight></codeline>
<codeline lineno="31"><highlight class="comment">//<sp/>any<sp/>express<sp/>or<sp/>implied<sp/>warranties,<sp/>including,<sp/>but<sp/>not<sp/>limited<sp/>to,<sp/>the<sp/>implied</highlight></codeline>
<codeline lineno="32"><highlight class="comment">//<sp/>warranties<sp/>of<sp/>merchantability<sp/>and<sp/>fitness<sp/>for<sp/>a<sp/>particular<sp/>purpose<sp/>are<sp/>disclaimed.</highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>In<sp/>no<sp/>event<sp/>shall<sp/>the<sp/>Intel<sp/>Corporation<sp/>or<sp/>contributors<sp/>be<sp/>liable<sp/>for<sp/>any<sp/>direct,</highlight></codeline>
<codeline lineno="34"><highlight class="comment">//<sp/>indirect,<sp/>incidental,<sp/>special,<sp/>exemplary,<sp/>or<sp/>consequential<sp/>damages</highlight></codeline>
<codeline lineno="35"><highlight class="comment">//<sp/>(including,<sp/>but<sp/>not<sp/>limited<sp/>to,<sp/>procurement<sp/>of<sp/>substitute<sp/>goods<sp/>or<sp/>services;</highlight></codeline>
<codeline lineno="36"><highlight class="comment">//<sp/>loss<sp/>of<sp/>use,<sp/>data,<sp/>or<sp/>profits;<sp/>or<sp/>business<sp/>interruption)<sp/>however<sp/>caused</highlight></codeline>
<codeline lineno="37"><highlight class="comment">//<sp/>and<sp/>on<sp/>any<sp/>theory<sp/>of<sp/>liability,<sp/>whether<sp/>in<sp/>contract,<sp/>strict<sp/>liability,</highlight></codeline>
<codeline lineno="38"><highlight class="comment">//<sp/>or<sp/>tort<sp/>(including<sp/>negligence<sp/>or<sp/>otherwise)<sp/>arising<sp/>in<sp/>any<sp/>way<sp/>out<sp/>of</highlight></codeline>
<codeline lineno="39"><highlight class="comment">//<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software,<sp/>even<sp/>if<sp/>advised<sp/>of<sp/>the<sp/>possibility<sp/>of<sp/>such<sp/>damage.</highlight></codeline>
<codeline lineno="40"><highlight class="comment">//</highlight></codeline>
<codeline lineno="41"><highlight class="comment">//M*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CXFLANN_H_</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CXFLANN_H_</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">flann</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Index;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cv<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">flann<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Nearest<sp/>neighbor<sp/>index<sp/>algorithms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>flann_algorithm_t<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LINEAR<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KDTREE<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KMEANS<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPOSITE<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SAVED<sp/>=<sp/>254,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AUTOTUNED<sp/>=<sp/>255</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>flann_centers_init_t<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CENTERS_RANDOM<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CENTERS_GONZALES<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CENTERS_KMEANSPP<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>flann_log_level_t<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_NONE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_FATAL<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERROR<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_WARN<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_INFO<sp/>=<sp/>4</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>flann_distance_t<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EUCLIDEAN<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MANHATTAN<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MINKOWSKI<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="cxtypes_8h_1a1bf9f0e121b54272da02379cfccd0a2b" kindref="member">CV_EXPORTS</ref><sp/>IndexFactory</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~IndexFactory()<sp/>{}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>::flann::Index*<sp/>createIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>dataset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="cxtypes_8h_1a1bf9f0e121b54272da02379cfccd0a2b" kindref="member">CV_EXPORTS</ref><sp/>IndexParams<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IndexFactory<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndexParams()<sp/>{};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="cxtypes_8h_1a1bf9f0e121b54272da02379cfccd0a2b" kindref="member">CV_EXPORTS</ref><sp/>LinearIndexParams<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IndexParams<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearIndexParams()<sp/>{};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::flann::Index*<sp/>createIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>dataset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="cxtypes_8h_1a1bf9f0e121b54272da02379cfccd0a2b" kindref="member">CV_EXPORTS</ref><sp/>KDTreeIndexParams<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IndexParams<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KDTreeIndexParams(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trees_<sp/>=<sp/>4)<sp/>:<sp/>trees(trees_)<sp/>{};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trees;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>randomized<sp/>trees<sp/>to<sp/>use<sp/>(for<sp/>kdtree)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::flann::Index*<sp/>createIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>dataset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="cxtypes_8h_1a1bf9f0e121b54272da02379cfccd0a2b" kindref="member">CV_EXPORTS</ref><sp/>KMeansIndexParams<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IndexParams<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KMeansIndexParams(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>branching_<sp/>=<sp/>32,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations_<sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flann_centers_init_t<sp/>centers_init_<sp/>=<sp/>CENTERS_RANDOM,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cb_index_<sp/>=<sp/>0.2<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branching(branching_),</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cv_8h_1a17372ac3c8ba01bc6cfc265b2824992e" kindref="member">iterations</ref>(iterations_),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centers_init(centers_init_),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb_index(cb_index_)<sp/>{};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>branching;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>branching<sp/>factor<sp/>(for<sp/>kmeans<sp/>tree)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cv_8h_1a17372ac3c8ba01bc6cfc265b2824992e" kindref="member">iterations</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>iterations<sp/>to<sp/>perform<sp/>in<sp/>one<sp/>kmeans<sp/>clustering<sp/>(kmeans<sp/>tree)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flann_centers_init_t<sp/>centers_init;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>algorithm<sp/>used<sp/>for<sp/>picking<sp/>the<sp/>initial<sp/>cluster<sp/>centers<sp/>for<sp/>kmeans<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cb_index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cluster<sp/>boundary<sp/>index.<sp/>Used<sp/>when<sp/>searching<sp/>the<sp/>kmeans<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>::flann::Index*<sp/>createIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>dataset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="cxtypes_8h_1a1bf9f0e121b54272da02379cfccd0a2b" kindref="member">CV_EXPORTS</ref><sp/>CompositeIndexParams<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IndexParams<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CompositeIndexParams(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trees_<sp/>=<sp/>4,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>branching_<sp/>=<sp/>32,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations_<sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flann_centers_init_t<sp/>centers_init_<sp/>=<sp/>CENTERS_RANDOM,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cb_index_<sp/>=<sp/>0.2<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees(trees_),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>branching(branching_),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cv_8h_1a17372ac3c8ba01bc6cfc265b2824992e" kindref="member">iterations</ref>(iterations_),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centers_init(centers_init_),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb_index(cb_index_)<sp/>{};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trees;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>randomized<sp/>trees<sp/>to<sp/>use<sp/>(for<sp/>kdtree)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>branching;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>branching<sp/>factor<sp/>(for<sp/>kmeans<sp/>tree)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cv_8h_1a17372ac3c8ba01bc6cfc265b2824992e" kindref="member">iterations</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>iterations<sp/>to<sp/>perform<sp/>in<sp/>one<sp/>kmeans<sp/>clustering<sp/>(kmeans<sp/>tree)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flann_centers_init_t<sp/>centers_init;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>algorithm<sp/>used<sp/>for<sp/>picking<sp/>the<sp/>initial<sp/>cluster<sp/>centers<sp/>for<sp/>kmeans<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cb_index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cluster<sp/>boundary<sp/>index.<sp/>Used<sp/>when<sp/>searching<sp/>the<sp/>kmeans<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>::flann::Index*<sp/>createIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>dataset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="cxtypes_8h_1a1bf9f0e121b54272da02379cfccd0a2b" kindref="member">CV_EXPORTS</ref><sp/>AutotunedIndexParams<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IndexParams<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AutotunedIndexParams(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target_precision_<sp/>=<sp/>0.9,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>build_weight_<sp/>=<sp/>0.01,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>memory_weight_<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sample_fraction_<sp/>=<sp/>0.1)<sp/>:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_precision(target_precision_),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_weight(build_weight_),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory_weight(memory_weight_),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_fraction(sample_fraction_)<sp/>{};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target_precision;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precision<sp/>desired<sp/>(used<sp/>for<sp/>autotuning,<sp/>-1<sp/>otherwise)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>build_weight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>tree<sp/>time<sp/>weighting<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>memory_weight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>memory<sp/>weighting<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sample_fraction;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>fraction<sp/>of<sp/>the<sp/>dataset<sp/>to<sp/>use<sp/>for<sp/>autotuning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>::flann::Index*<sp/>createIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>dataset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="cxtypes_8h_1a1bf9f0e121b54272da02379cfccd0a2b" kindref="member">CV_EXPORTS</ref><sp/>SavedIndexParams<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IndexParams<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SavedIndexParams()<sp/>{}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SavedIndexParams(std::string<sp/>filename_)<sp/>:<sp/><ref refid="cxcore_8h_1acc427f35f3bd9f865d39012657cc42f8" kindref="member">filename</ref>(filename_)<sp/>{}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="cxcore_8h_1acc427f35f3bd9f865d39012657cc42f8" kindref="member">filename</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filename<sp/>of<sp/>the<sp/>stored<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::flann::Index*<sp/>createIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>dataset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="cxtypes_8h_1a1bf9f0e121b54272da02379cfccd0a2b" kindref="member">CV_EXPORTS</ref><sp/>SearchParams<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SearchParams(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>checks_<sp/>=<sp/>32)<sp/>:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checks(checks_)<sp/>{};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>checks;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="cxtypes_8h_1a1bf9f0e121b54272da02379cfccd0a2b" kindref="member">CV_EXPORTS</ref><sp/>Index<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::flann::Index*<sp/>nnIndex;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Index(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>features,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexParams&amp;<sp/><ref refid="cv_8h_1a0480a03ecc41b20cde376602531d9270" kindref="member">params</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~Index();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>knnSearch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;float&gt;&amp;<sp/>queries,<sp/>vector&lt;int&gt;&amp;<sp/><ref refid="cv_8h_1a3e3b9b48bcbc7f460efbcfe4399ad24a" kindref="member">indices</ref>,<sp/>vector&lt;float&gt;&amp;<sp/>dists,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>knn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SearchParams&amp;<sp/><ref refid="cv_8h_1a0480a03ecc41b20cde376602531d9270" kindref="member">params</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>knnSearch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>queries,<sp/>Mat&amp;<sp/><ref refid="cv_8h_1a3e3b9b48bcbc7f460efbcfe4399ad24a" kindref="member">indices</ref>,<sp/>Mat&amp;<sp/>dists,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>knn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SearchParams&amp;<sp/><ref refid="cv_8h_1a0480a03ecc41b20cde376602531d9270" kindref="member">params</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radiusSearch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;float&gt;&amp;<sp/>query,<sp/>vector&lt;int&gt;&amp;<sp/><ref refid="cv_8h_1a3e3b9b48bcbc7f460efbcfe4399ad24a" kindref="member">indices</ref>,<sp/>vector&lt;float&gt;&amp;<sp/>dists,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="cv_8h_1a32526d67e420fc7060ade2efeaeda976" kindref="member">radius</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SearchParams&amp;<sp/><ref refid="cv_8h_1a0480a03ecc41b20cde376602531d9270" kindref="member">params</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radiusSearch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>query,<sp/>Mat&amp;<sp/><ref refid="cv_8h_1a3e3b9b48bcbc7f460efbcfe4399ad24a" kindref="member">indices</ref>,<sp/>Mat&amp;<sp/>dists,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="cv_8h_1a32526d67e420fc7060ade2efeaeda976" kindref="member">radius</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SearchParams&amp;<sp/><ref refid="cv_8h_1a0480a03ecc41b20cde376602531d9270" kindref="member">params</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save(std::string<sp/><ref refid="cxcore_8h_1acc427f35f3bd9f865d39012657cc42f8" kindref="member">filename</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>veclen()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cv_8h_1a854352f53b148adc24983a58a1866d66" kindref="member">size</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="cxtypes_8h_1a1bf9f0e121b54272da02379cfccd0a2b" kindref="member">CV_EXPORTS</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hierarchicalClustering(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>features,<sp/>Mat&amp;<sp/>centers,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KMeansIndexParams&amp;<sp/><ref refid="cv_8h_1a0480a03ecc41b20cde376602531d9270" kindref="member">params</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__cplusplus</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CXFLANN_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/gaspard/git/lubyk/modules/cv/include/cv/cxflann.h"/>
  </compounddef>
</doxygen>
