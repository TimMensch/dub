<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="classlubyk_1_1_fifo" kind="class" prot="public">
    <compoundname>lubyk::Fifo</compoundname>
    <basecompoundref refid="classlubyk_1_1_non_copyable" prot="private" virt="non-virtual">lubyk::NonCopyable</basecompoundref>
    <includes refid="include_2lubyk_2fifo_8h" local="no">fifo.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlubyk_1_1_fifo_1abe946d1e4922c9c3aae19c252f7a2910" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>volatile int lubyk::Fifo&lt; T &gt;::read_idx_</definition>
        <argsstring></argsstring>
        <name>read_idx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current read position in the queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" line="52" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" bodystart="52" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_fifo_1a4d9a3be0e5c06021bbd93386b5972f60" compoundref="include_2lubyk_2fifo_8h" startline="109" endline="124">lubyk::Fifo&lt; MsgVector &gt;::pop</referencedby>
        <referencedby refid="classlubyk_1_1_fifo_1ae7c39e88d6528314a4a8f27598ede7dd" compoundref="include_2lubyk_2fifo_8h" startline="135" endline="147">lubyk::Fifo&lt; MsgVector &gt;::push</referencedby>
        <referencedby refid="classlubyk_1_1_fifo_1aa99834fbbf69e2ef1690f9b9e6c2981b" compoundref="include_2lubyk_2fifo_8h" startline="83" endline="94">lubyk::Fifo&lt; MsgVector &gt;::~Fifo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlubyk_1_1_fifo_1afb9ed0ddf57a4105071ebd8b12daf2dc" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>volatile int lubyk::Fifo&lt; T &gt;::write_idx_</definition>
        <argsstring></argsstring>
        <name>write_idx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Next write position in the queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" line="56" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" bodystart="56" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_fifo_1a4d9a3be0e5c06021bbd93386b5972f60" compoundref="include_2lubyk_2fifo_8h" startline="109" endline="124">lubyk::Fifo&lt; MsgVector &gt;::pop</referencedby>
        <referencedby refid="classlubyk_1_1_fifo_1ae7c39e88d6528314a4a8f27598ede7dd" compoundref="include_2lubyk_2fifo_8h" startline="135" endline="147">lubyk::Fifo&lt; MsgVector &gt;::push</referencedby>
        <referencedby refid="classlubyk_1_1_fifo_1aa99834fbbf69e2ef1690f9b9e6c2981b" compoundref="include_2lubyk_2fifo_8h" startline="83" endline="94">lubyk::Fifo&lt; MsgVector &gt;::~Fifo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlubyk_1_1_fifo_1a299b8d099dfa865f72adcaa0c91fc7d7" prot="private" static="no" mutable="no">
        <type><ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref> *volatile</type>
        <definition>T* volatile lubyk::Fifo&lt; T &gt;::data_[BUFFER_SIZE]</definition>
        <argsstring>[BUFFER_SIZE]</argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Heap allocated data (the sub-class should free elements on pop). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" line="64" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" bodystart="64" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_fifo_1a4d9a3be0e5c06021bbd93386b5972f60" compoundref="include_2lubyk_2fifo_8h" startline="109" endline="124">lubyk::Fifo&lt; MsgVector &gt;::pop</referencedby>
        <referencedby refid="classlubyk_1_1_fifo_1ae7c39e88d6528314a4a8f27598ede7dd" compoundref="include_2lubyk_2fifo_8h" startline="135" endline="147">lubyk::Fifo&lt; MsgVector &gt;::push</referencedby>
        <referencedby refid="classlubyk_1_1_fifo_1aa99834fbbf69e2ef1690f9b9e6c2981b" compoundref="include_2lubyk_2fifo_8h" startline="83" endline="94">lubyk::Fifo&lt; MsgVector &gt;::~Fifo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classlubyk_1_1_fifo_1a3be4f027ff53696b155ae9e8c10530b3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int lubyk::Fifo&lt; T &gt;::pipe_fd_[2]</definition>
        <argsstring>[2]</argsstring>
        <name>pipe_fd_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>File descriptors used by the pipe. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" line="68" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" bodystart="68" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_fifo_1af528d8b811e015215c3a8e1bae391fb2" compoundref="include_2lubyk_2fifo_8h" startline="99" endline="101">lubyk::Fifo&lt; MsgVector &gt;::fd</referencedby>
        <referencedby refid="classlubyk_1_1_fifo_1ac1482af8ee456e929e46bafb70af0a0e" compoundref="include_2lubyk_2fifo_8h" startline="70" endline="81">lubyk::Fifo&lt; MsgVector &gt;::Fifo</referencedby>
        <referencedby refid="classlubyk_1_1_fifo_1a4d9a3be0e5c06021bbd93386b5972f60" compoundref="include_2lubyk_2fifo_8h" startline="109" endline="124">lubyk::Fifo&lt; MsgVector &gt;::pop</referencedby>
        <referencedby refid="classlubyk_1_1_fifo_1ae7c39e88d6528314a4a8f27598ede7dd" compoundref="include_2lubyk_2fifo_8h" startline="135" endline="147">lubyk::Fifo&lt; MsgVector &gt;::push</referencedby>
        <referencedby refid="classlubyk_1_1_fifo_1aa99834fbbf69e2ef1690f9b9e6c2981b" compoundref="include_2lubyk_2fifo_8h" startline="83" endline="94">lubyk::Fifo&lt; MsgVector &gt;::~Fifo</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classlubyk_1_1_fifo_1ae8bf94fc3f0237f9ceebcac0d119bb39" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int lubyk::Fifo&lt; T &gt;::BUFFER_SIZE</definition>
        <argsstring></argsstring>
        <name>BUFFER_SIZE</name>
        <initializer> 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The buffer should never fill up so it does not need to be large </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" line="60" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" bodystart="60" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_fifo_1a4d9a3be0e5c06021bbd93386b5972f60" compoundref="include_2lubyk_2fifo_8h" startline="109" endline="124">lubyk::Fifo&lt; MsgVector &gt;::pop</referencedby>
        <referencedby refid="classlubyk_1_1_fifo_1ae7c39e88d6528314a4a8f27598ede7dd" compoundref="include_2lubyk_2fifo_8h" startline="135" endline="147">lubyk::Fifo&lt; MsgVector &gt;::push</referencedby>
        <referencedby refid="classlubyk_1_1_fifo_1aa99834fbbf69e2ef1690f9b9e6c2981b" compoundref="include_2lubyk_2fifo_8h" startline="83" endline="94">lubyk::Fifo&lt; MsgVector &gt;::~Fifo</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlubyk_1_1_fifo_1ac1482af8ee456e929e46bafb70af0a0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lubyk::Fifo&lt; T &gt;::Fifo</definition>
        <argsstring>()</argsstring>
        <name>Fifo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" line="72" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" bodystart="70" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_fifo_1aa99834fbbf69e2ef1690f9b9e6c2981b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual lubyk::Fifo&lt; T &gt;::~Fifo</definition>
        <argsstring>()</argsstring>
        <name>~Fifo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" line="83" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" bodystart="83" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_fifo_1af528d8b811e015215c3a8e1bae391fb2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int lubyk::Fifo&lt; T &gt;::fd</definition>
        <argsstring>() const </argsstring>
        <name>fd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a filedescriptor that signals whenever the queue fills up (edge-trigger). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" line="99" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_fifo_1a4d9a3be0e5c06021bbd93386b5972f60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lk_2include_2lk_2_socket_8h_1a038a308a5e7246ac41ca22c43d7209d1" kindref="member">LuaStackSize</ref></type>
        <definition>LuaStackSize lubyk::Fifo&lt; T &gt;::pop</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>pop</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pop an element from the queue. Before calling this method, the calling code should make sure there is something to be read with &apos;sched:waitRead(fd)&apos;.</para><para><simplesect kind="return"><para>multiple values </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" line="109" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" bodystart="109" bodyend="124"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classlubyk_1_1_fifo_1a211d75991af18eb935598966e4428eb5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="lk_2include_2lk_2_socket_8h_1a038a308a5e7246ac41ca22c43d7209d1" kindref="member">LuaStackSize</ref></type>
        <definition>virtual LuaStackSize lubyk::Fifo&lt; T &gt;::unpack</definition>
        <argsstring>(lua_State *L, T *data)=0</argsstring>
        <name>unpack</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Push data onto the lua stack. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" line="130"/>
        <referencedby refid="classlubyk_1_1_fifo_1a4d9a3be0e5c06021bbd93386b5972f60" compoundref="include_2lubyk_2fifo_8h" startline="109" endline="124">lubyk::Fifo&lt; MsgVector &gt;::pop</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_fifo_1ae7c39e88d6528314a4a8f27598ede7dd" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lubyk::Fifo&lt; T &gt;::push</definition>
        <argsstring>(T *data)</argsstring>
        <name>push</name>
        <param>
          <type><ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Push data in the queue. <simplesect kind="return"><para>false if the buffer is full. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" line="135" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" bodystart="135" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is a utility class that should be used to wrap objects that need to run in a different OS thread. The fifo provides a file descriptor and a &apos;pop&apos; method to get the last message. Messages in the FIFO queue are encoded with Msgpack. The interface should be fast and does not use any locking.</para><para>For this <ref refid="classlubyk_1_1_fifo" kindref="compound">Fifo</ref> to work: YOU NEED TO HAVE read/write index ALIGNED or the read and write operations are not atomic. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2108">
        <label>lubyk::NonCopyable</label>
        <link refid="classlubyk_1_1_non_copyable"/>
      </node>
      <node id="2107">
        <label>lubyk::Fifo&lt; T &gt;</label>
        <link refid="classlubyk_1_1_fifo"/>
        <childnode refid="2108" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2111">
        <label>T</label>
      </node>
      <node id="2110">
        <label>lubyk::NonCopyable</label>
        <link refid="classlubyk_1_1_non_copyable"/>
      </node>
      <node id="2109">
        <label>lubyk::Fifo&lt; T &gt;</label>
        <link refid="classlubyk_1_1_fifo"/>
        <childnode refid="2110" relation="private-inheritance">
        </childnode>
        <childnode refid="2111" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" line="49" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/fifo.h" bodystart="48" bodyend="149"/>
    <listofallmembers>
      <member refid="classlubyk_1_1_fifo_1ae8bf94fc3f0237f9ceebcac0d119bb39" prot="private" virt="non-virtual"><scope>lubyk::Fifo</scope><name>BUFFER_SIZE</name></member>
      <member refid="classlubyk_1_1_fifo_1a299b8d099dfa865f72adcaa0c91fc7d7" prot="private" virt="non-virtual"><scope>lubyk::Fifo</scope><name>data_</name></member>
      <member refid="classlubyk_1_1_fifo_1af528d8b811e015215c3a8e1bae391fb2" prot="public" virt="non-virtual"><scope>lubyk::Fifo</scope><name>fd</name></member>
      <member refid="classlubyk_1_1_fifo_1ac1482af8ee456e929e46bafb70af0a0e" prot="public" virt="non-virtual"><scope>lubyk::Fifo</scope><name>Fifo</name></member>
      <member refid="classlubyk_1_1_non_copyable_1a589ca6787b3fb8f88439cff31b249bf7" prot="private" virt="non-virtual"><scope>lubyk::Fifo</scope><name>NonCopyable</name></member>
      <member refid="classlubyk_1_1_fifo_1a3be4f027ff53696b155ae9e8c10530b3" prot="private" virt="non-virtual"><scope>lubyk::Fifo</scope><name>pipe_fd_</name></member>
      <member refid="classlubyk_1_1_fifo_1a4d9a3be0e5c06021bbd93386b5972f60" prot="public" virt="non-virtual"><scope>lubyk::Fifo</scope><name>pop</name></member>
      <member refid="classlubyk_1_1_fifo_1ae7c39e88d6528314a4a8f27598ede7dd" prot="protected" virt="non-virtual"><scope>lubyk::Fifo</scope><name>push</name></member>
      <member refid="classlubyk_1_1_fifo_1abe946d1e4922c9c3aae19c252f7a2910" prot="private" virt="non-virtual"><scope>lubyk::Fifo</scope><name>read_idx_</name></member>
      <member refid="classlubyk_1_1_fifo_1a211d75991af18eb935598966e4428eb5" prot="protected" virt="pure-virtual"><scope>lubyk::Fifo</scope><name>unpack</name></member>
      <member refid="classlubyk_1_1_fifo_1afb9ed0ddf57a4105071ebd8b12daf2dc" prot="private" virt="non-virtual"><scope>lubyk::Fifo</scope><name>write_idx_</name></member>
      <member refid="classlubyk_1_1_fifo_1aa99834fbbf69e2ef1690f9b9e6c2981b" prot="public" virt="virtual"><scope>lubyk::Fifo</scope><name>~Fifo</name></member>
      <member refid="classlubyk_1_1_non_copyable_1a7efa456af3055dc86071f78c4bf1d1c3" prot="private" virt="non-virtual"><scope>lubyk::Fifo</scope><name>~NonCopyable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
