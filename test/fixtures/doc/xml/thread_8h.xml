<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="thread_8h" kind="file">
    <compoundname>thread.h</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">csignal</includes>
    <includes local="no">fstream</includes>
    <includes refid="semaphore_8h" local="no">semaphore.h</includes>
    <includes local="yes">assert.h</includes>
    <includes refid="lubyk_2include_2lubyk_2_mutex_8h" local="yes">lubyk/mutex.h</includes>
    <includes refid="condition_8h" local="yes">lubyk/condition.h</includes>
    <includedby refid="lubyk_2include_2lubyk_2timer_8h" local="yes">/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/timer.h</includedby>
    <includedby refid="worker_8h" local="yes">/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/worker.h</includedby>
    <incdepgraph>
      <node id="500">
        <label>lubyk/condition.h</label>
        <link refid="condition_8h"/>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
      </node>
      <node id="495">
        <label>assert.h</label>
      </node>
      <node id="497">
        <label>lubyk/mutex.h</label>
        <link refid="lubyk_2include_2lubyk_2_mutex_8h"/>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
      </node>
      <node id="490">
        <label>errno.h</label>
      </node>
      <node id="493">
        <label>fstream</label>
      </node>
      <node id="498">
        <label>pthread.h</label>
      </node>
      <node id="491">
        <label>string.h</label>
      </node>
      <node id="499">
        <label>cstdio</label>
      </node>
      <node id="496">
        <label>lubyk/non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="494">
        <label>semaphore.h</label>
        <link refid="semaphore_8h"/>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
      </node>
      <node id="492">
        <label>csignal</label>
      </node>
      <node id="489">
        <label>/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/thread.h</label>
        <link refid="thread.h"/>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="502">
        <label>/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/timer.h</label>
        <link refid="lubyk_2include_2lubyk_2timer_8h"/>
      </node>
      <node id="503">
        <label>/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/worker.h</label>
        <link refid="worker_8h"/>
      </node>
      <node id="501">
        <label>/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/thread.h</label>
        <link refid="thread.h"/>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classlubyk_1_1_thread" prot="public">lubyk::Thread</innerclass>
    <innernamespace refid="namespacelubyk">lubyk</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>==============================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>LUBYK<sp/>library<sp/>(http://lubyk.org)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-2011<sp/>by<sp/>Gaspard<sp/>Bucher<sp/>(http://teti.ch).</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>==============================================================================</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LUBYK_INCLUDE_LUBYK_THREAD_H_</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LUBYK_INCLUDE_LUBYK_THREAD_H_</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>refactor<sp/>all<sp/>this<sp/>to<sp/>move<sp/>all<sp/>thread<sp/>specific<sp/>code<sp/>into<sp/>&apos;cpp&apos;<sp/>file<sp/>!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>errno</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>strerror</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;csignal&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="semaphore_8h" kindref="compound">semaphore.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;assert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lubyk_2include_2lubyk_2_mutex_8h" kindref="compound">lubyk/mutex.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="condition_8h" kindref="compound">lubyk/condition.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">lubyk<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classlubyk_1_1_thread" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlubyk_1_1_thread" kindref="compound">Thread</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_mutex" kindref="compound">Mutex</ref><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classlubyk_1_1_thread_1aed806528cf050edab241676caa80e05f" kindref="member">Thread</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1a40fe36cf5a97c14ce117287ad7d49674" kindref="member">~Thread</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*Tmethod)(Thread*)&gt;</highlight></codeline>
<codeline lineno="55" refid="classlubyk_1_1_thread_1aba8009d4d34824dc3b0f9e65f96b1469" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1aba8009d4d34824dc3b0f9e65f96b1469" kindref="member">startThread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cv_8h_1a53f8bd5b417150d5807b949c52ddc5cd" kindref="member">parameter</ref><sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_scoped_s_lock" kindref="compound">ScopedSLock</ref><sp/><ref refid="classlubyk_1_1_mutex_1a74ee38ef2f9bf4e86a3871f5b60a31c3" kindref="member">lock</ref>(<ref refid="classlubyk_1_1_thread_1a85b5d99c4d0044b805920dda5a18f9b5" kindref="member">condition_</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlubyk_1_1_thread_1aad6e1aa05c22d497f621142bdc894c1b" kindref="member">isRunning</ref>())<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>start<sp/>thread<sp/>when<sp/>it<sp/>is<sp/>already<sp/>running<sp/>!<sp/>(in<sp/>Thread::start)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1ae02827945cd692dbc62a7648dcd03611" kindref="member">owner_</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1a23b7685c06684e858bbd039456a4ac46" kindref="member">static_method_</ref><sp/>=<sp/>Tmethod;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1a803f2081dd6d425396dc440ecb7de399" kindref="member">parameter_</ref><sp/><sp/>=<sp/><ref refid="cv_8h_1a53f8bd5b417150d5807b949c52ddc5cd" kindref="member">parameter</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1aed027872144ce648ab7150501ea02130" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(<sp/>&amp;<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>,<sp/>NULL,<sp/>&amp;<ref refid="classlubyk_1_1_thread_1a48a1e23e21a10cf826bb4a1b6b1b1a1b" kindref="member">s_start_static_thread</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>thread<sp/>is<sp/>properly<sp/>started<sp/>(signals<sp/>registered)<sp/>in<sp/>case<sp/>we<sp/>die<sp/>right<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>we<sp/>could<sp/>use<sp/>timedwait<sp/>if<sp/>something<sp/>goes<sp/>wrong<sp/>during<sp/>thread<sp/>initialization...<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1a85b5d99c4d0044b805920dda5a18f9b5" kindref="member">condition_</ref>.<ref refid="classlubyk_1_1_condition_1a9e1f35162eda86874b3548386cbeffd4" kindref="member">wait</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classlubyk_1_1_thread_1acd809e5980356db9b1cc5e74d4210b9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1acd809e5980356db9b1cc5e74d4210b9e" kindref="member">startThread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*static_method)(<ref refid="classlubyk_1_1_thread" kindref="compound">Thread</ref>*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cv_8h_1a53f8bd5b417150d5807b949c52ddc5cd" kindref="member">parameter</ref><sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_scoped_s_lock" kindref="compound">ScopedSLock</ref><sp/><ref refid="classlubyk_1_1_mutex_1a74ee38ef2f9bf4e86a3871f5b60a31c3" kindref="member">lock</ref>(<ref refid="classlubyk_1_1_thread_1a85b5d99c4d0044b805920dda5a18f9b5" kindref="member">condition_</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlubyk_1_1_thread_1aad6e1aa05c22d497f621142bdc894c1b" kindref="member">isRunning</ref>())<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>start<sp/>thread<sp/>when<sp/>it<sp/>is<sp/>already<sp/>running<sp/>!<sp/>(in<sp/>Thread::start)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1ae02827945cd692dbc62a7648dcd03611" kindref="member">owner_</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1a23b7685c06684e858bbd039456a4ac46" kindref="member">static_method_</ref><sp/>=<sp/>static_method;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1a803f2081dd6d425396dc440ecb7de399" kindref="member">parameter_</ref><sp/><sp/>=<sp/><ref refid="cv_8h_1a53f8bd5b417150d5807b949c52ddc5cd" kindref="member">parameter</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1aed027872144ce648ab7150501ea02130" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(<sp/>&amp;<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>,<sp/>NULL,<sp/>&amp;<ref refid="classlubyk_1_1_thread_1a48a1e23e21a10cf826bb4a1b6b1b1a1b" kindref="member">s_start_static_thread</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>thread<sp/>is<sp/>properly<sp/>started<sp/>(signals<sp/>registered)<sp/>in<sp/>case<sp/>we<sp/>die<sp/>right<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1a85b5d99c4d0044b805920dda5a18f9b5" kindref="member">condition_</ref>.<ref refid="classlubyk_1_1_condition_1a9e1f35162eda86874b3548386cbeffd4" kindref="member">wait</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T::*Tmethod)(Thread*)&gt;</highlight></codeline>
<codeline lineno="98" refid="classlubyk_1_1_thread_1ab12640737a5456fb53d41d8690b9cd7e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1ab12640737a5456fb53d41d8690b9cd7e" kindref="member">startThread</ref>(<ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref><sp/>*owner,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cv_8h_1a53f8bd5b417150d5807b949c52ddc5cd" kindref="member">parameter</ref><sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_scoped_s_lock" kindref="compound">ScopedSLock</ref><sp/><ref refid="classlubyk_1_1_mutex_1a74ee38ef2f9bf4e86a3871f5b60a31c3" kindref="member">lock</ref>(<ref refid="classlubyk_1_1_thread_1a85b5d99c4d0044b805920dda5a18f9b5" kindref="member">condition_</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlubyk_1_1_thread_1aad6e1aa05c22d497f621142bdc894c1b" kindref="member">isRunning</ref>())<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>start<sp/>thread<sp/>when<sp/>it<sp/>is<sp/>already<sp/>running<sp/>!<sp/>(in<sp/>Thread::start)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1ae02827945cd692dbc62a7648dcd03611" kindref="member">owner_</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>owner;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1a803f2081dd6d425396dc440ecb7de399" kindref="member">parameter_</ref><sp/><sp/>=<sp/><ref refid="cv_8h_1a53f8bd5b417150d5807b949c52ddc5cd" kindref="member">parameter</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1aed027872144ce648ab7150501ea02130" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(<sp/>&amp;<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>,<sp/>NULL,<sp/>&amp;s_startThread&lt;T,Tmethod&gt;,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>thread<sp/>is<sp/>properly<sp/>started<sp/>(signals<sp/>registered)<sp/>in<sp/>case<sp/>we<sp/>die<sp/>right<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1a85b5d99c4d0044b805920dda5a18f9b5" kindref="member">condition_</ref>.<ref refid="classlubyk_1_1_condition_1a9e1f35162eda86874b3548386cbeffd4" kindref="member">wait</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T::*Tmethod)()&gt;</highlight></codeline>
<codeline lineno="119" refid="classlubyk_1_1_thread_1ab12640737a5456fb53d41d8690b9cd7e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1ab12640737a5456fb53d41d8690b9cd7e" kindref="member">startThread</ref>(<ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref><sp/>*owner,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="cv_8h_1a53f8bd5b417150d5807b949c52ddc5cd" kindref="member">parameter</ref><sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_scoped_s_lock" kindref="compound">ScopedSLock</ref><sp/><ref refid="classlubyk_1_1_mutex_1a74ee38ef2f9bf4e86a3871f5b60a31c3" kindref="member">lock</ref>(<ref refid="classlubyk_1_1_thread_1a85b5d99c4d0044b805920dda5a18f9b5" kindref="member">condition_</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlubyk_1_1_thread_1aad6e1aa05c22d497f621142bdc894c1b" kindref="member">isRunning</ref>())<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>start<sp/>thread<sp/>when<sp/>it<sp/>is<sp/>already<sp/>running<sp/>!<sp/>(in<sp/>Thread::start)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1ae02827945cd692dbc62a7648dcd03611" kindref="member">owner_</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>owner;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1a803f2081dd6d425396dc440ecb7de399" kindref="member">parameter_</ref><sp/><sp/>=<sp/><ref refid="cv_8h_1a53f8bd5b417150d5807b949c52ddc5cd" kindref="member">parameter</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1aed027872144ce648ab7150501ea02130" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_create(<sp/>&amp;<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>,<sp/>NULL,<sp/>&amp;s_startThread&lt;T,Tmethod&gt;,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>thread<sp/>is<sp/>properly<sp/>started<sp/>(signals<sp/>registered)<sp/>in<sp/>case<sp/>we<sp/>die<sp/>right<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1a85b5d99c4d0044b805920dda5a18f9b5" kindref="member">condition_</ref>.<ref refid="classlubyk_1_1_condition_1a9e1f35162eda86874b3548386cbeffd4" kindref="member">wait</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classlubyk_1_1_thread_1a79a76930356ff8056995bb6ef7745d17" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1a79a76930356ff8056995bb6ef7745d17" kindref="member">shouldRun</ref>()<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1aed027872144ce648ab7150501ea02130" kindref="member">should_run_</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classlubyk_1_1_thread_1a53158cda2d2a4738eaab4232d5603e16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1a53158cda2d2a4738eaab4232d5603e16" kindref="member">kill</ref>()<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1aed027872144ce648ab7150501ea02130" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pthread_equal(<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>,<sp/>pthread_self()))<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pthread_kill(thread_id_,<sp/>SIGTERM);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cancel(<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_join(<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classlubyk_1_1_thread_1a0682ee75f6021f3bcb7d8d1979333f21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1a0682ee75f6021f3bcb7d8d1979333f21" kindref="member">sendSignal</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!pthread_equal(<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>,<sp/>pthread_self()));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_kill(<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>,<sp/>sig);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classlubyk_1_1_thread_1a1db79610063cc908a055999f36d0cca1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1a1db79610063cc908a055999f36d0cca1" kindref="member">registerSignal</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>cannot<sp/>use<sp/>the<sp/>assertion<sp/>because<sp/>thread_id_<sp/>might<sp/>not<sp/>be<sp/>set<sp/>yet<sp/>(race<sp/>condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert(pthread_equal(thread_id_,<sp/>pthread_self()));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(sig,<sp/><ref refid="classlubyk_1_1_thread_1a25a878378b45e53aa050cabb87069db2" kindref="member">terminate</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classlubyk_1_1_thread_1a3e070fed4de974dfea2f42f97c818250" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1a3e070fed4de974dfea2f42f97c818250" kindref="member">join</ref>()<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>check<sp/>we<sp/>do<sp/>not<sp/>join<sp/>on<sp/>self<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_join(<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classlubyk_1_1_thread_1a63b081a7b99ac42d7d04b0cb67fbc052" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1a63b081a7b99ac42d7d04b0cb67fbc052" kindref="member">quit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1aed027872144ce648ab7150501ea02130" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classlubyk_1_1_thread_1aad6e1aa05c22d497f621142bdc894c1b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1aad6e1aa05c22d497f621142bdc894c1b" kindref="member">isRunning</ref>()<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref><sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1af0c5a92031088fb09de9d01fddb1261b" kindref="member">highPriority</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1a4e0a784e5c8a6d557b79808684547b24" kindref="member">normalPriority</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1a023551515678f97dcfa14629f20f0b10" kindref="member">millisleep</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>milliseconds);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="classlubyk_1_1_thread_1a37f0de298862cdba718531761bdc41a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1a37f0de298862cdba718531761bdc41a5" kindref="member">threadReady</ref>()<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signals<sp/>installed,<sp/>we<sp/>can<sp/>free<sp/>parent<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1a85b5d99c4d0044b805920dda5a18f9b5" kindref="member">condition_</ref>.<ref refid="classlubyk_1_1_condition_1a9929b0d44e95c4986165759ec8f6e120" kindref="member">signal</ref>();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="classlubyk_1_1_thread_1a9881baf5e814d085525db510a6f7cdfd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread" kindref="compound">Thread</ref><sp/>*<ref refid="classlubyk_1_1_thread_1a9881baf5e814d085525db510a6f7cdfd" kindref="member">thread_this</ref>()<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classlubyk_1_1_thread" kindref="compound">Thread</ref>*)<sp/>pthread_getspecific(<ref refid="classlubyk_1_1_thread_1ac5066b34897d5f8ea3c696e4f712c183" kindref="member">sThisKey</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classlubyk_1_1_thread_1ac5066b34897d5f8ea3c696e4f712c183" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pthread_key_t<sp/><ref refid="classlubyk_1_1_thread_1ac5066b34897d5f8ea3c696e4f712c183" kindref="member">sThisKey</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="classlubyk_1_1_thread_1a803f2081dd6d425396dc440ecb7de399" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classlubyk_1_1_thread_1a803f2081dd6d425396dc440ecb7de399" kindref="member">parameter_</ref>;<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classlubyk_1_1_thread_1aec8277427577e3b0b4a8102a097c0261" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1aec8277427577e3b0b4a8102a097c0261" kindref="member">setThreadThis</ref>(<ref refid="classlubyk_1_1_thread" kindref="compound">Thread</ref><sp/>*thread)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>pthread_setspecific(<ref refid="classlubyk_1_1_thread_1ac5066b34897d5f8ea3c696e4f712c183" kindref="member">sThisKey</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)thread);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classlubyk_1_1_thread_1a48a1e23e21a10cf826bb4a1b6b1b1a1b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlubyk_1_1_thread_1a48a1e23e21a10cf826bb4a1b6b1b1a1b" kindref="member">s_start_static_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thread_ptr)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread" kindref="compound">Thread</ref><sp/>*<sp/>thread<sp/>=<sp/>(<ref refid="classlubyk_1_1_thread" kindref="compound">Thread</ref>*)thread_ptr;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>begin<sp/>of<sp/>new<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1aec8277427577e3b0b4a8102a097c0261" kindref="member">setThreadThis</ref>(thread);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classlubyk_1_1_thread_1a1db79610063cc908a055999f36d0cca1" kindref="member">registerSignal</ref>(SIGTERM);<sp/></highlight><highlight class="comment">//<sp/>register<sp/>a<sp/>SIGTERM<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classlubyk_1_1_thread_1a1db79610063cc908a055999f36d0cca1" kindref="member">registerSignal</ref>(SIGINT);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_setcancelstate(PTHREAD_CANCEL_ENABLE,<sp/>NULL);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removing<sp/>comment<sp/>below<sp/>=<sp/>force<sp/>cancelation<sp/>to<sp/>occur<sp/>NOW,<sp/>whatever<sp/>the<sp/>program<sp/>is<sp/>doing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pthread_setcanceltype(PTHREAD_CANCEL_ASYNCHRONOUS,<sp/>NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classlubyk_1_1_thread_1aed027872144ce648ab7150501ea02130" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>(*thread-&gt;<ref refid="classlubyk_1_1_thread_1a23b7685c06684e858bbd039456a4ac46" kindref="member">static_method_</ref>)(thread);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>running<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T::*Tmethod)(Thread*)&gt;</highlight></codeline>
<codeline lineno="252" refid="classlubyk_1_1_thread_1a2bfcb77eb3b839cb3655198e0fbcc5f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classlubyk_1_1_thread_1a2bfcb77eb3b839cb3655198e0fbcc5f7" kindref="member">s_startThread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thread_ptr)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread" kindref="compound">Thread</ref><sp/>*<sp/>thread<sp/>=<sp/>(<ref refid="classlubyk_1_1_thread" kindref="compound">Thread</ref>*)thread_ptr;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>begin<sp/>of<sp/>new<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1aec8277427577e3b0b4a8102a097c0261" kindref="member">setThreadThis</ref>(thread);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classlubyk_1_1_thread_1a1db79610063cc908a055999f36d0cca1" kindref="member">registerSignal</ref>(SIGTERM);<sp/></highlight><highlight class="comment">//<sp/>register<sp/>a<sp/>SIGTERM<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classlubyk_1_1_thread_1a1db79610063cc908a055999f36d0cca1" kindref="member">registerSignal</ref>(SIGINT);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_setcancelstate(PTHREAD_CANCEL_ENABLE,<sp/>NULL);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pthread_setcanceltype(PTHREAD_CANCEL_ASYNCHRONOUS,<sp/>NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref><sp/>*owner<sp/>=<sp/>(<ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref>*)thread-&gt;<ref refid="classlubyk_1_1_thread_1ae02827945cd692dbc62a7648dcd03611" kindref="member">owner_</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classlubyk_1_1_thread_1aed027872144ce648ab7150501ea02130" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>(owner-&gt;*Tmethod)(thread);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>running<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T::*Tmethod)()&gt;</highlight></codeline>
<codeline lineno="273" refid="classlubyk_1_1_thread_1a2bfcb77eb3b839cb3655198e0fbcc5f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classlubyk_1_1_thread_1a2bfcb77eb3b839cb3655198e0fbcc5f7" kindref="member">s_startThread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thread_ptr)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread" kindref="compound">Thread</ref><sp/>*<sp/>thread<sp/>=<sp/>(<ref refid="classlubyk_1_1_thread" kindref="compound">Thread</ref>*)thread_ptr;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>begin<sp/>of<sp/>new<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1aec8277427577e3b0b4a8102a097c0261" kindref="member">setThreadThis</ref>(thread);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classlubyk_1_1_thread_1a1db79610063cc908a055999f36d0cca1" kindref="member">registerSignal</ref>(SIGTERM);<sp/></highlight><highlight class="comment">//<sp/>register<sp/>a<sp/>SIGTERM<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classlubyk_1_1_thread_1a1db79610063cc908a055999f36d0cca1" kindref="member">registerSignal</ref>(SIGINT);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref><sp/>*owner<sp/>=<sp/>(<ref refid="cv_8h_1a3efb9551a871ddd0463079a808916717" kindref="member">T</ref>*)thread-&gt;<ref refid="classlubyk_1_1_thread_1ae02827945cd692dbc62a7648dcd03611" kindref="member">owner_</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classlubyk_1_1_thread_1aed027872144ce648ab7150501ea02130" kindref="member">should_run_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>(owner-&gt;*Tmethod)();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>thread-&gt;<ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>running<sp/>anymore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classlubyk_1_1_thread_1a25a878378b45e53aa050cabb87069db2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1a25a878378b45e53aa050cabb87069db2" kindref="member">terminate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlubyk_1_1_thread_1a9881baf5e814d085525db510a6f7cdfd" kindref="member">thread_this</ref>()-&gt;<ref refid="classlubyk_1_1_thread_1a63b081a7b99ac42d7d04b0cb67fbc052" kindref="member">quit</ref>();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="classlubyk_1_1_thread_1ae02827945cd692dbc62a7648dcd03611" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="classlubyk_1_1_thread_1ae02827945cd692dbc62a7648dcd03611" kindref="member">owner_</ref>;</highlight></codeline>
<codeline lineno="296" refid="classlubyk_1_1_thread_1a23b7685c06684e858bbd039456a4ac46" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cvaux_8h_1a8bb47f092d473522721002c86c13b94e" kindref="member">void</ref><sp/>(*<ref refid="classlubyk_1_1_thread_1a23b7685c06684e858bbd039456a4ac46" kindref="member">static_method_</ref>)(<ref refid="classlubyk_1_1_thread" kindref="compound">Thread</ref>*);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" refkind="member"><highlight class="normal"><sp/><sp/>pthread_t<sp/><ref refid="classlubyk_1_1_thread_1af0e95505c90fd5bbc7b4ced7ed99cf20" kindref="member">thread_id_</ref>;</highlight></codeline>
<codeline lineno="299" refid="classlubyk_1_1_thread_1aa5386778f536134d39332daf9cec1857" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1aa5386778f536134d39332daf9cec1857" kindref="member">normal_sched_policy_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="300" refid="classlubyk_1_1_thread_1a71e5f8ea00b2b4a93bb45d53310c9026" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sched_param<sp/><ref refid="classlubyk_1_1_thread_1a71e5f8ea00b2b4a93bb45d53310c9026" kindref="member">normal_thread_param_</ref>;<sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="303" refid="classlubyk_1_1_thread_1aed027872144ce648ab7150501ea02130" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_thread_1aed027872144ce648ab7150501ea02130" kindref="member">should_run_</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="306" refid="classlubyk_1_1_thread_1a85b5d99c4d0044b805920dda5a18f9b5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlubyk_1_1_condition" kindref="compound">Condition</ref><sp/><ref refid="classlubyk_1_1_thread_1a85b5d99c4d0044b805920dda5a18f9b5" kindref="member">condition_</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">};</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LUBYK_INCLUDE_LUBYK_THREAD_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/thread.h"/>
  </compounddef>
</doxygen>
