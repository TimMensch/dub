<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="_poller_8h" kind="file">
    <compoundname>Poller.h</compoundname>
    <includes local="yes">lubyk.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">string</includes>
    <includes local="yes">../vendor/include/zmq.h</includes>
    <includes refid="msgpack_8h" local="yes">lubyk/msgpack.h</includes>
    <includes refid="time__ref_8h" local="yes">lubyk/time_ref.h</includes>
    <includes refid="zmq_2include_2zmq_2_socket_8h" local="yes">zmq/Socket.h</includes>
    <incdepgraph>
      <node id="1074">
        <label>zmq/Socket.h</label>
        <link refid="zmq_2include_2zmq_2_socket_8h"/>
        <childnode refid="1069" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1071" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
      </node>
      <node id="1066">
        <label>stdlib.h</label>
      </node>
      <node id="1065">
        <label>lubyk.h</label>
      </node>
      <node id="1068">
        <label>string</label>
      </node>
      <node id="1069">
        <label>../vendor/include/zmq.h</label>
      </node>
      <node id="1071">
        <label>lubyk/time_ref.h</label>
        <link refid="time__ref_8h"/>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1073" relation="include">
        </childnode>
      </node>
      <node id="1072">
        <label>sys/types.h</label>
      </node>
      <node id="1070">
        <label>lubyk/msgpack.h</label>
        <link refid="msgpack_8h"/>
        <childnode refid="1065" relation="include">
        </childnode>
      </node>
      <node id="1073">
        <label>lubyk/non_copyable.h</label>
        <link refid="non__copyable_8h"/>
      </node>
      <node id="1067">
        <label>time.h</label>
      </node>
      <node id="1064">
        <label>/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h</label>
        <link refid="Poller.h"/>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1069" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1071" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classzmq_1_1_poller" prot="public">zmq::Poller</innerclass>
    <innernamespace refid="namespacezmq">zmq</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>==============================================================================</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>LUBYK<sp/>project<sp/>(http://lubyk.org)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-2011<sp/>by<sp/>Gaspard<sp/>Bucher<sp/>(http://teti.ch).</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>==============================================================================</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LUBYK_INCLUDE_ZMQ_POLLER_H_</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LUBYK_INCLUDE_ZMQ_POLLER_H_</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lubyk.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>rand()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../vendor/include/zmq.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="msgpack_8h" kindref="compound">lubyk/msgpack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="time__ref_8h" kindref="compound">lubyk/time_ref.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="zmq_2include_2zmq_2_socket_8h" kindref="compound">zmq/Socket.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">lubyk;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">zmq<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classzmq_1_1_poller" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classzmq_1_1_poller" kindref="compound">Poller</ref><sp/>{</highlight></codeline>
<codeline lineno="57" refid="classzmq_1_1_poller_1a5e52f42cc4b725ffad5743635caf9b9b" refkind="member"><highlight class="normal"><sp/><sp/>zmq_pollitem_t<sp/>*<ref refid="classzmq_1_1_poller_1a5e52f42cc4b725ffad5743635caf9b9b" kindref="member">pollitems_</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classzmq_1_1_poller_1a25e34f52af6102a5d118dc7185e268ea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classzmq_1_1_poller_1a25e34f52af6102a5d118dc7185e268ea" kindref="member">pollitems_size_</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classzmq_1_1_poller_1ace8c21321df7921d5476b648121b33d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="classzmq_1_1_poller_1ace8c21321df7921d5476b648121b33d3" kindref="member">idx_to_pos_</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classzmq_1_1_poller_1a132fc4f9ce6390c1cf504c9798069a43" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="classzmq_1_1_poller_1a132fc4f9ce6390c1cf504c9798069a43" kindref="member">pos_to_idx_</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classzmq_1_1_poller_1a5f4e51b42b28b2a72beb908e21cf453f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classzmq_1_1_poller_1a5f4e51b42b28b2a72beb908e21cf453f" kindref="member">used_count_</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classzmq_1_1_poller_1a18bf5e60e5b75fce4e8ce76989132679" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classzmq_1_1_poller_1a18bf5e60e5b75fce4e8ce76989132679" kindref="member">event_count_</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classzmq_1_1_poller_1a36710780e8664a7f6d94ee6f6ce67fbd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlubyk_1_1_time_ref" kindref="compound">TimeRef</ref><sp/><ref refid="classzmq_1_1_poller_1a36710780e8664a7f6d94ee6f6ce67fbd" kindref="member">time_</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classzmq_1_1_poller_1a81342f4252b33884385fc1d844c1190b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classzmq_1_1_poller_1a81342f4252b33884385fc1d844c1190b" kindref="member">interrupted_</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91" refid="classzmq_1_1_poller_1ab1902c19d79435bdfb9990145383ae92" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classzmq_1_1_poller" kindref="compound">Poller</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reserve=8)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>pollitems_(NULL),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pollitems_size_(0),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_to_pos_(NULL),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_to_idx_(NULL),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used_count_(0),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_count_(0),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interrupted_(false)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reserve<sp/>&lt;<sp/>0)<sp/>reserve<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>pollitems_<sp/>=<sp/>(zmq_pollitem_t*)calloc(reserve,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(zmq_pollitem_t));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pollitems_<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>pre-allocate<sp/>%i<sp/>pollitems&quot;</highlight><highlight class="normal">,<sp/>reserve);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>idx_to_pos_<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)calloc(reserve,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx_to_pos_<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(pollitems_);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>pre-allocate<sp/>%i<sp/>pollitems&quot;</highlight><highlight class="normal">,<sp/>reserve);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>pos_to_idx_<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)calloc(reserve,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos_to_idx_<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(pollitems_);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(idx_to_pos_);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>pre-allocate<sp/>%i<sp/>pollitems&quot;</highlight><highlight class="normal">,<sp/>reserve);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>pollitems_size_<sp/>=<sp/>reserve;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(idx_to_pos_,<sp/>-1,<sp/>reserve<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(pos_to_idx_,<sp/>-1,<sp/>reserve<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>setupInterruptHook();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classzmq_1_1_poller_1a8f9dee6dc38621c7a82809c6fbd408ac" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classzmq_1_1_poller_1a8f9dee6dc38621c7a82809c6fbd408ac" kindref="member">~Poller</ref>()<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pollitems_)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(pollitems_);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(idx_to_pos_);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(pos_to_idx_);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classzmq_1_1_poller_1a08be8489aaee2d0ade8ff1bdf839ce48" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classzmq_1_1_poller_1a08be8489aaee2d0ade8ff1bdf839ce48" kindref="member">poll</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interruption<sp/>can<sp/>occur<sp/>between<sp/>poll<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interrupted_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;=============================<sp/>%f\n&quot;,<sp/>timeout);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for(int<sp/>i=0;<sp/>i&lt;used_count_;<sp/>++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>zmq_pollitem_t<sp/>*item<sp/>=<sp/>pollitems_<sp/>+<sp/>i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>printf(&quot;%i:<sp/>%2i<sp/>/<sp/>%p<sp/>(%i)\n&quot;,<sp/>i,<sp/>item-&gt;fd,<sp/>item-&gt;socket,<sp/>item-&gt;events);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>POLLER_JITTER_HACK</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="cvaux_8h_1a7e7356db167a8b78d03c01efc265b638" kindref="member">start</ref><sp/>=<sp/>time_.elapsed();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>timeout<sp/>&gt;<sp/>2<sp/>?<sp/>timeout<sp/>-<sp/>2<sp/>:<sp/>timeout;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zmq<sp/>counts<sp/>micro<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>event_count_<sp/>=<sp/>zmq_poll(pollitems_,<sp/>used_count_,<sp/>t<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event_count_<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>or<sp/>interruption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_count_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!interrupted_)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occured<sp/>during<sp/>zmq_poll<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>zmq_strerror(zmq_errno()));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!event_count_)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>timed<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>remaining<sp/>=<sp/>timeout<sp/>-<sp/>time_.elapsed()<sp/>+<sp/><ref refid="cvaux_8h_1a7e7356db167a8b78d03c01efc265b638" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>We<sp/>must<sp/>measure<sp/>that<sp/>this<sp/>&apos;hack&apos;<sp/>improves<sp/>jitter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining<sp/>&gt;<sp/>0)<sp/><ref refid="classlubyk_1_1_thread_1a023551515678f97dcfa14629f20f0b10" kindref="member">Thread::millisleep</ref>(remaining);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>timeout<sp/>or<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>event_count_<sp/>=<sp/>zmq_poll(pollitems_,<sp/>used_count_,<sp/>timeout);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event_count_<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>or<sp/>interruption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_count_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!interrupted_)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occured<sp/>during<sp/>zmq_poll<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>zmq_strerror(zmq_errno()));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>event_count_<sp/>=<sp/>zmq_poll(pollitems_,<sp/>used_count_,<sp/>timeout<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;===&gt;<sp/>%i\n&quot;,<sp/>event_count_);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event_count_<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>or<sp/>interruption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>event_count_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!interrupted_)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occured<sp/>during<sp/>zmq_poll<sp/>(%s)&quot;</highlight><highlight class="normal">,<sp/>zmq_strerror(zmq_errno()));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classzmq_1_1_poller_1abe06259a302655881eed1ac716abf449" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lk_2include_2lk_2_socket_8h_1a038a308a5e7246ac41ca22c43d7209d1" kindref="member">LuaStackSize</ref><sp/><ref refid="classzmq_1_1_poller_1abe06259a302655881eed1ac716abf449" kindref="member">events</ref>(lua_State<sp/>*L)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!event_count_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_newtable(L);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;table&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cxcore_8h_1a6492959798ef439146ab2816fe754d81" kindref="member">pos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>used_count_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zmq_pollitem_t<sp/>*item<sp/>=<sp/>pollitems_<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;revents)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushnumber(L,<sp/>pos_to_idx_[i]);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;table&gt;<sp/>&lt;idx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_rawseti(L,<sp/>-2,<sp/>++pos);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>event_count_)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>event_count_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classzmq_1_1_poller_1a333f32eed1ef2b5f77ed2e28afd93627" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classzmq_1_1_poller_1a333f32eed1ef2b5f77ed2e28afd93627" kindref="member">add</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>events)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>addItem(fd,<sp/>NULL,<sp/>events);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classzmq_1_1_poller_1adfc902286b26f6e29ab809a74debd7be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classzmq_1_1_poller_1adfc902286b26f6e29ab809a74debd7be" kindref="member">add</ref>(<ref refid="classzmq_1_1_socket" kindref="compound">zmq::Socket</ref><sp/>*sock,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>events)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>addItem(0,<sp/>sock-&gt;<ref refid="classzmq_1_1_socket_1a069f600701355be727b06d9f2dd7f976" kindref="member">socket_</ref>,<sp/>events);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="classzmq_1_1_poller_1a5e4197ac4ed9932f40d0dae3fcd80aae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classzmq_1_1_poller_1a5e4197ac4ed9932f40d0dae3fcd80aae" kindref="member">modify</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cxcore_8h_1a5c7c842f447336aa2f10826df65a28b3" kindref="member">idx</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>events,<sp/>lua_State<sp/>*L)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(events);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(idx<sp/>&lt;<sp/>pollitems_size_<sp/>&amp;&amp;<sp/>idx<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>zmq_pollitem_t<sp/>*item<sp/>=<sp/>pollitems_<sp/>+<sp/>idx_to_pos_[<ref refid="cxcore_8h_1a5c7c842f447336aa2f10826df65a28b3" kindref="member">idx</ref>];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;events<sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>lua_gettop(L);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;self&gt;<sp/>&lt;idx&gt;<sp/>&lt;events&gt;<sp/>&lt;new_fd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lua_isuserdata(L,<sp/>4))<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classzmq_1_1_socket" kindref="compound">zmq::Socket</ref><sp/>*sock<sp/>=<sp/>*((<ref refid="classzmq_1_1_socket" kindref="compound">zmq::Socket</ref><sp/>**)dubL_checksdata(L,<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;zmq.Socket&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;<ref refid="classzmq_1_1_socket_1a6913e6251911ecb39c2d03638e72f3a3" kindref="member">fd</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;socket<sp/>=<sp/>sock-&gt;<ref refid="classzmq_1_1_socket_1a069f600701355be727b06d9f2dd7f976" kindref="member">socket_</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>dubL_checkint(L,<sp/>4);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;fd<sp/>=<sp/>fd;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;socket<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="classzmq_1_1_poller_1ae90abc98bde5c2f0451603970bdcafb3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cxcore_8h_1a5c7c842f447336aa2f10826df65a28b3" kindref="member">idx</ref>)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(idx<sp/>&lt;<sp/>pollitems_size_<sp/>&amp;&amp;<sp/>idx<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_pos<sp/>=<sp/>used_count_<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cxcore_8h_1a6492959798ef439146ab2816fe754d81" kindref="member">pos</ref><sp/>=<sp/>idx_to_pos_[<ref refid="cxcore_8h_1a5c7c842f447336aa2f10826df65a28b3" kindref="member">idx</ref>];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>idx_to_pos_[<ref refid="cxcore_8h_1a5c7c842f447336aa2f10826df65a28b3" kindref="member">idx</ref>]<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>now<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>--used_count_;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>last_pos)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>removed<sp/>the<sp/>last<sp/>element,<sp/>we<sp/>are<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>last<sp/>item<sp/>in<sp/>the<sp/>position<sp/>where<sp/>idx<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_idx<sp/>=<sp/>pos_to_idx_[last_pos];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>pos_to_idx_[last_pos]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>idx_to_pos_[last_idx]<sp/>=<sp/><ref refid="cxcore_8h_1a6492959798ef439146ab2816fe754d81" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>pos_to_idx_[<ref refid="cxcore_8h_1a6492959798ef439146ab2816fe754d81" kindref="member">pos</ref>]<sp/>=<sp/>last_idx;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pollitems_[pos]<sp/>&lt;==<sp/>pollitems_[last_pos];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(pollitems_<sp/>+<sp/>pos,<sp/>pollitems_<sp/>+<sp/>last_pos,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(zmq_pollitem_t));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="classzmq_1_1_poller_1a9c6fc1f9d6136f534442e771bc3a874b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classzmq_1_1_poller_1a9c6fc1f9d6136f534442e771bc3a874b" kindref="member">count</ref>()<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>used_count_;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="classzmq_1_1_poller_1a8fc5036306f6b3667844a4924716f458" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lk_2include_2lk_2_socket_8h_1a038a308a5e7246ac41ca22c43d7209d1" kindref="member">LuaStackSize</ref><sp/><ref refid="classzmq_1_1_poller_1a8fc5036306f6b3667844a4924716f458" kindref="member">idxToPos</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cxcore_8h_1a5c7c842f447336aa2f10826df65a28b3" kindref="member">idx</ref>,<sp/>lua_State<sp/>*L)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>&gt;=<sp/>pollitems_size_<sp/>||<sp/>idx<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_pushnumber(L,<sp/>idx_to_pos_[idx]);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classzmq_1_1_poller_1a8ffaf312d0c5d9c2856b6b8a7f37e447" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lk_2include_2lk_2_socket_8h_1a038a308a5e7246ac41ca22c43d7209d1" kindref="member">LuaStackSize</ref><sp/><ref refid="classzmq_1_1_poller_1a8ffaf312d0c5d9c2856b6b8a7f37e447" kindref="member">posToIdx</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cxcore_8h_1a6492959798ef439146ab2816fe754d81" kindref="member">pos</ref>,<sp/>lua_State<sp/>*L)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/>pollitems_size_<sp/>||<sp/>pos<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_pushnumber(L,<sp/>pos_to_idx_[pos]);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classzmq_1_1_poller_1a1b9ddae14c69b4112f3f3e41a33b6534" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lk_2include_2lk_2_socket_8h_1a038a308a5e7246ac41ca22c43d7209d1" kindref="member">LuaStackSize</ref><sp/><ref refid="classzmq_1_1_poller_1a1b9ddae14c69b4112f3f3e41a33b6534" kindref="member">posToFd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cxcore_8h_1a6492959798ef439146ab2816fe754d81" kindref="member">pos</ref>,<sp/>lua_State<sp/>*L)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/>used_count_<sp/>||<sp/>pos<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_pushnumber(L,<sp/>pollitems_[pos].fd);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="300" refid="classzmq_1_1_poller_1a9089999eff431f60d3f79b5fcd84d883" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="lk_2include_2lk_2_socket_8h_1a038a308a5e7246ac41ca22c43d7209d1" kindref="member">LuaStackSize</ref><sp/><ref refid="classzmq_1_1_poller_1a9089999eff431f60d3f79b5fcd84d883" kindref="member">posToEvent</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cxcore_8h_1a6492959798ef439146ab2816fe754d81" kindref="member">pos</ref>,<sp/>lua_State<sp/>*L)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/>used_count_<sp/>||<sp/>pos<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>lua_pushnumber(L,<sp/>pollitems_[pos].events);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="classzmq_1_1_poller_1a6ab80f411e0dfb094da0407f2918ac8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pthread_key_t<sp/><ref refid="classzmq_1_1_poller_1a6ab80f411e0dfb094da0407f2918ac8c" kindref="member">sThisKey</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="309" refid="classzmq_1_1_poller_1a372f17bfca9bf84cd98b87a69272261b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classzmq_1_1_poller_1a372f17bfca9bf84cd98b87a69272261b" kindref="member">addItem</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*socket,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>events)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;addItem<sp/>fd:%i<sp/>socket:%p\n&quot;,<sp/>fd,<sp/>socket);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(used_count_<sp/>&gt;=<sp/>pollitems_size_)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>more<sp/>space:<sp/>realloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)realloc(idx_to_pos_,<sp/>pollitems_size_<sp/>*<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sptr)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>reallocate<sp/>%i<sp/>pollitems.&quot;</highlight><highlight class="normal">,<sp/>pollitems_size_<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idx_to_pos_<sp/>=<sp/>sptr;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)realloc(pos_to_idx_,<sp/>pollitems_size_<sp/>*<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sptr)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>reallocate<sp/>%i<sp/>pollitems.&quot;</highlight><highlight class="normal">,<sp/>pollitems_size_<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos_to_idx_<sp/>=<sp/>sptr;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zmq_pollitem_t<sp/>*<ref refid="cxcore_8h_1a166529da793cc1ef241cff347f3db5a5" kindref="member">ptr</ref><sp/>=<sp/>(zmq_pollitem_t*)realloc(pollitems_,<sp/>pollitems_size_<sp/>*<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(zmq_pollitem_t));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classlubyk_1_1_exception" kindref="compound">Exception</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>reallocate<sp/>%i<sp/>pollitems.&quot;</highlight><highlight class="normal">,<sp/>pollitems_size_<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pollitems_<sp/>=<sp/><ref refid="cxcore_8h_1a166529da793cc1ef241cff347f3db5a5" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>new<sp/>space<sp/>(same<sp/>size<sp/>as<sp/>pollitems_size_<sp/>because<sp/>we<sp/>double).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(idx_to_pos_+<sp/>used_count_,<sp/>-1,<sp/>pollitems_size_<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(pos_to_idx_+<sp/>used_count_,<sp/>-1,<sp/>pollitems_size_<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(pollitems_<sp/>+<sp/>used_count_,<sp/><sp/>0,<sp/>pollitems_size_<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(zmq_pollitem_t));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pollitems_size_<sp/>=<sp/>2<sp/>*<sp/>pollitems_size_;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cxcore_8h_1a6492959798ef439146ab2816fe754d81" kindref="member">pos</ref><sp/>=<sp/>used_count_;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>++used_count_;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>zmq_pollitem_t<sp/>*item<sp/>=<sp/>pollitems_<sp/>+<sp/><ref refid="cxcore_8h_1a6492959798ef439146ab2816fe754d81" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;fd<sp/>=<sp/>fd;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;socket<sp/>=<sp/>socket;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;events<sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hasn&apos;t<sp/>been<sp/>moved<sp/>yet:<sp/>idx<sp/>==<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>a<sp/>free<sp/>idx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cxcore_8h_1a5c7c842f447336aa2f10826df65a28b3" kindref="member">idx</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>pollitems_size_;<sp/>++<ref refid="cxcore_8h_1a5c7c842f447336aa2f10826df65a28b3" kindref="member">idx</ref>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx_to_pos_[idx]<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>idx_to_pos_[<ref refid="cxcore_8h_1a5c7c842f447336aa2f10826df65a28b3" kindref="member">idx</ref>]<sp/>=<sp/><ref refid="cxcore_8h_1a6492959798ef439146ab2816fe754d81" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>pos_to_idx_[<ref refid="cxcore_8h_1a6492959798ef439146ab2816fe754d81" kindref="member">pos</ref>]<sp/>=<sp/><ref refid="cxcore_8h_1a5c7c842f447336aa2f10826df65a28b3" kindref="member">idx</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cxcore_8h_1a5c7c842f447336aa2f10826df65a28b3" kindref="member">idx</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="classzmq_1_1_poller_1ac447625ccfda6190f2e7a244c9aaf85f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classzmq_1_1_poller_1ac447625ccfda6190f2e7a244c9aaf85f" kindref="member">sInterrupted</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(i,<sp/>SIG_DFL);<sp/></highlight><highlight class="comment">//<sp/>double<sp/>interrupt<sp/>==<sp/>kill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classzmq_1_1_poller" kindref="compound">Poller</ref><sp/>*p<sp/>=<sp/>(<ref refid="classzmq_1_1_poller" kindref="compound">Poller</ref>*)pthread_getspecific(sThisKey);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="classzmq_1_1_poller_1a81342f4252b33884385fc1d844c1190b" kindref="member">interrupted_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="classzmq_1_1_poller_1a8c4a125d4bcae1d10ca927f638ef67de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classzmq_1_1_poller_1a8c4a125d4bcae1d10ca927f638ef67de" kindref="member">setupInterruptHook</ref>()<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classzmq_1_1_poller" kindref="compound">Poller</ref><sp/>*p<sp/>=<sp/>(<ref refid="classzmq_1_1_poller" kindref="compound">Poller</ref>*)pthread_getspecific(sThisKey);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>register<sp/>first<sp/>(main)<sp/>Scheduler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pthread_setspecific(sThisKey,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>signal(SIGINT,<sp/>sInterrupted);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal">};</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>zmq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LUBYK_INCLUDE_ZMQ_POLLER_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Poller.h"/>
  </compounddef>
</doxygen>
