<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="classlubyk_1_1_scoped_s_unlock" kind="class" prot="public">
    <compoundname>lubyk::ScopedSUnlock</compoundname>
    <basecompoundref refid="classlubyk_1_1_non_copyable" prot="private" virt="non-virtual">lubyk::NonCopyable</basecompoundref>
    <includes refid="lubyk_2include_2lubyk_2_mutex_8h" local="no">mutex.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlubyk_1_1_scoped_s_unlock_1a704bbacaf9532aceaffd2b01a1f17790" prot="private" static="no" mutable="no">
        <type><ref refid="classlubyk_1_1_mutex" kindref="compound">Mutex</ref> *</type>
        <definition>Mutex* lubyk::ScopedSUnlock::mutex_ptr_</definition>
        <argsstring></argsstring>
        <name>mutex_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/mutex.h" line="102" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/mutex.h" bodystart="102" bodyend="-1"/>
        <referencedby refid="classlubyk_1_1_scoped_s_unlock_1ab0d137cecef5efe8895b7537972e7a31" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="105" endline="107">ScopedSUnlock</referencedby>
        <referencedby refid="classlubyk_1_1_scoped_s_unlock_1a30cfbbed06c7246ecd9eee03500c9b58" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="113" endline="115">~ScopedSUnlock</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlubyk_1_1_scoped_s_unlock_1ab0d137cecef5efe8895b7537972e7a31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lubyk::ScopedSUnlock::ScopedSUnlock</definition>
        <argsstring>(Mutex *mutex)</argsstring>
        <name>ScopedSUnlock</name>
        <param>
          <type><ref refid="classlubyk_1_1_mutex" kindref="compound">Mutex</ref> *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/mutex.h" line="105" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/mutex.h" bodystart="105" bodyend="107"/>
        <references refid="classlubyk_1_1_scoped_s_unlock_1a704bbacaf9532aceaffd2b01a1f17790" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="102">mutex_ptr_</references>
        <references refid="classlubyk_1_1_mutex_1a83fead89eb5401b9dd1fbc6ecdd7e31c" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="72" endline="74">lubyk::Mutex::unlock</references>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_scoped_s_unlock_1afd6b9d579e80cf9a4aebf8db9028abe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lubyk::ScopedSUnlock::ScopedSUnlock</definition>
        <argsstring>(Mutex &amp;mutex)</argsstring>
        <name>ScopedSUnlock</name>
        <param>
          <type><ref refid="classlubyk_1_1_mutex" kindref="compound">Mutex</ref> &amp;</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/mutex.h" line="109" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/mutex.h" bodystart="109" bodyend="111"/>
        <references refid="classlubyk_1_1_scoped_s_unlock_1a704bbacaf9532aceaffd2b01a1f17790" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="102">mutex_ptr_</references>
        <references refid="classlubyk_1_1_mutex_1a83fead89eb5401b9dd1fbc6ecdd7e31c" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="72" endline="74">lubyk::Mutex::unlock</references>
      </memberdef>
      <memberdef kind="function" id="classlubyk_1_1_scoped_s_unlock_1a30cfbbed06c7246ecd9eee03500c9b58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lubyk::ScopedSUnlock::~ScopedSUnlock</definition>
        <argsstring>()</argsstring>
        <name>~ScopedSUnlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/mutex.h" line="113" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/mutex.h" bodystart="113" bodyend="115"/>
        <references refid="classlubyk_1_1_mutex_1a74ee38ef2f9bf4e86a3871f5b60a31c3" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="67" endline="69">lubyk::Mutex::lock</references>
        <references refid="classlubyk_1_1_scoped_s_unlock_1a704bbacaf9532aceaffd2b01a1f17790" compoundref="lubyk_2include_2lubyk_2_mutex_8h" startline="102">mutex_ptr_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Scoped simple <ref refid="classlubyk_1_1_mutex" kindref="compound">Mutex</ref> Unlock to release exclusive access to a resource. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2386">
        <label>lubyk::NonCopyable</label>
        <link refid="classlubyk_1_1_non_copyable"/>
      </node>
      <node id="2385">
        <label>lubyk::ScopedSUnlock</label>
        <link refid="classlubyk_1_1_scoped_s_unlock"/>
        <childnode refid="2386" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2388">
        <label>lubyk::NonCopyable</label>
        <link refid="classlubyk_1_1_non_copyable"/>
      </node>
      <node id="2387">
        <label>lubyk::ScopedSUnlock</label>
        <link refid="classlubyk_1_1_scoped_s_unlock"/>
        <childnode refid="2388" relation="private-inheritance">
        </childnode>
        <childnode refid="2389" relation="usage">
          <edgelabel>mutex_ptr_</edgelabel>
        </childnode>
      </node>
      <node id="2389">
        <label>lubyk::Mutex</label>
        <link refid="classlubyk_1_1_mutex"/>
        <childnode refid="2388" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/mutex.h" line="101" bodyfile="/Users/gaspard/git/lubyk/modules/lubyk/include/lubyk/mutex.h" bodystart="100" bodyend="116"/>
    <listofallmembers>
      <member refid="classlubyk_1_1_scoped_s_unlock_1a704bbacaf9532aceaffd2b01a1f17790" prot="private" virt="non-virtual"><scope>lubyk::ScopedSUnlock</scope><name>mutex_ptr_</name></member>
      <member refid="classlubyk_1_1_non_copyable_1a589ca6787b3fb8f88439cff31b249bf7" prot="private" virt="non-virtual"><scope>lubyk::ScopedSUnlock</scope><name>NonCopyable</name></member>
      <member refid="classlubyk_1_1_scoped_s_unlock_1ab0d137cecef5efe8895b7537972e7a31" prot="public" virt="non-virtual"><scope>lubyk::ScopedSUnlock</scope><name>ScopedSUnlock</name></member>
      <member refid="classlubyk_1_1_scoped_s_unlock_1afd6b9d579e80cf9a4aebf8db9028abe7" prot="public" virt="non-virtual"><scope>lubyk::ScopedSUnlock</scope><name>ScopedSUnlock</name></member>
      <member refid="classlubyk_1_1_non_copyable_1a7efa456af3055dc86071f78c4bf1d1c3" prot="private" virt="non-virtual"><scope>lubyk::ScopedSUnlock</scope><name>~NonCopyable</name></member>
      <member refid="classlubyk_1_1_scoped_s_unlock_1a30cfbbed06c7246ecd9eee03500c9b58" prot="public" virt="non-virtual"><scope>lubyk::ScopedSUnlock</scope><name>~ScopedSUnlock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
