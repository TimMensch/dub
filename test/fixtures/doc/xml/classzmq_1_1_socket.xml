<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.5.1">
  <compounddef id="classzmq_1_1_socket" kind="class" prot="public">
    <compoundname>zmq::Socket</compoundname>
    <basecompoundref refid="classlubyk_1_1_lua_object" prot="public" virt="non-virtual">lubyk::LuaObject</basecompoundref>
    <includes refid="zmq_2include_2zmq_2_socket_8h" local="no">Socket.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classzmq_1_1_socket_1a6368feb544053a5a867a590000aeb1de" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Poller</definition>
        <argsstring></argsstring>
        <name>Poller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="56" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classzmq_1_1_socket_1a069f600701355be727b06d9f2dd7f976" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* zmq::Socket::socket_</definition>
        <argsstring></argsstring>
        <name>socket_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="57" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="57" bodyend="-1"/>
        <referencedby refid="classzmq_1_1_poller_1adfc902286b26f6e29ab809a74debd7be" compoundref="_poller_8h" startline="219" endline="221">zmq::Poller::add</referencedby>
        <referencedby refid="classzmq_1_1_poller_1a5e4197ac4ed9932f40d0dae3fcd80aae" compoundref="_poller_8h" startline="225" endline="243">zmq::Poller::modify</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classzmq_1_1_socket_1ab9140c21bb2248b528acac9670634675" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string zmq::Socket::location_</definition>
        <argsstring></argsstring>
        <name>location_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="58" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmq_1_1_socket_1ad4347e6eaf983accf60cfb5aed31020b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int zmq::Socket::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="59" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmq_1_1_socket_1a2494e6be34e6491248e3fc9aae01e79c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int zmq::Socket::send_flags_</definition>
        <argsstring></argsstring>
        <name>send_flags_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="60" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classzmq_1_1_socket_1a2a1ea503ff3a43dd8982e9b105fcea50" prot="private" static="no" mutable="no">
        <type><ref refid="classlubyk_1_1_time_ref" kindref="compound">TimeRef</ref></type>
        <definition>TimeRef zmq::Socket::time_ref_</definition>
        <argsstring></argsstring>
        <name>time_ref_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timer used for timeout in request. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="64" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classzmq_1_1_socket_1ab20b347056a6dcb162f3deef4ac2a63c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zmq::Socket::Socket</definition>
        <argsstring>(int type, lubyk::Worker *worker)</argsstring>
        <name>Socket</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classlubyk_1_1_worker" kindref="compound">lubyk::Worker</ref> *</type>
          <declname>worker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The worker is not provided by LuaObject before luaInit is called. This call happens after full object construction. We need the worker to set the zmq context, so we pass it as argument. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="73" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="70" bodyend="98"/>
        <references refid="classlubyk_1_1_worker_1a4068e8972c5fce50a60aaf9b37c614fa" compoundref="worker_8h" startline="80">lubyk::Worker::zmq_context_</references>
        <references refid="classlubyk_1_1_worker_1a0bc70f22a0ef1b6599639171828b590b" compoundref="worker_8h" startline="85">lubyk::Worker::zmq_context_refcount_</references>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1a2844b4299a3e410d88832943b4c6524f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>zmq::Socket::~Socket</definition>
        <argsstring>()</argsstring>
        <name>~Socket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="100" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="100" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1a6913e6251911ecb39c2d03638e72f3a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int zmq::Socket::fd</definition>
        <argsstring>()</argsstring>
        <name>fd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="108" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="108" bodyend="115"/>
        <referencedby refid="classzmq_1_1_poller_1a5e4197ac4ed9932f40d0dae3fcd80aae" compoundref="_poller_8h" startline="225" endline="243">zmq::Poller::modify</referencedby>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1ab85fbea3c413a711e0ac6589448fb466" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zmq::Socket::setNonBlocking</definition>
        <argsstring>(bool non_blocking)</argsstring>
        <name>setNonBlocking</name>
        <param>
          <type>bool</type>
          <declname>non_blocking</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="117" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="117" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1ad7a88861054408143e59724dd87f6b5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zmq::Socket::setsockopt</definition>
        <argsstring>(int type, lua_State *L)</argsstring>
        <name>setsockopt</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set socket options. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="127" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="127" bodyend="175"/>
        <references refid="cv_8h_1ae17b3c2584dab511e91d1c96644018bf" compoundref="cv_8h" startline="516">status</references>
        <references refid="cxcore_8h_1a5f3a65d240411b0018990ff992b348c0" compoundref="cxcore_8h" startline="1628">str</references>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1aba886d2247712d2f85cce98f04960226" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zmq::Socket::bind</definition>
        <argsstring>(const char *location)</argsstring>
        <name>bind</name>
        <param>
          <type>const char *</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bind a service to a location like &quot;tcp://\*:5500&quot; Should NOT be used while in a <ref refid="classzmq_1_1_socket_1a9d6e15efa968134db3ceaf2c6516f4ad" kindref="member">request()</ref> or <ref refid="classzmq_1_1_socket_1ac9afea253b7419e252a348b06a09fb46" kindref="member">recv()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="180" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1a5bb530a06ae28aed7e9b26094045d541" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int zmq::Socket::bind</definition>
        <argsstring>(int min_port=2000, int max_port=20000, int retries=100)</argsstring>
        <name>bind</name>
        <param>
          <type>int</type>
          <declname>min_port</declname>
          <defval>2000</defval>
        </param>
        <param>
          <type>int</type>
          <declname>max_port</declname>
          <defval>20000</defval>
        </param>
        <param>
          <type>int</type>
          <declname>retries</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bind to a random port. Should NOT be used while in a <ref refid="classzmq_1_1_socket_1a9d6e15efa968134db3ceaf2c6516f4ad" kindref="member">request()</ref> or <ref refid="classzmq_1_1_socket_1ac9afea253b7419e252a348b06a09fb46" kindref="member">recv()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="190" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="190" bodyend="207"/>
        <references refid="cv_8h_1ac9db6ccf8d1a2abfd9a0a162547f9666" compoundref="cv_8h" startline="391">buffer</references>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1a1fb452e66fbc3080430b07b18d53772e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zmq::Socket::connect</definition>
        <argsstring>(const char *location)</argsstring>
        <name>connect</name>
        <param>
          <type>const char *</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Connect to a server. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="211" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="211" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1ae65e9573a8dcc32dc83242aec20a29ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmq::Socket::hasEvent</definition>
        <argsstring>(int event)</argsstring>
        <name>hasEvent</name>
        <param>
          <type>int</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if the socket responds to the given event. This has to be used when we do not use zmq_poll but some external poll/select on the file descriptor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="221" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="221" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1ac9afea253b7419e252a348b06a09fb46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lk_2include_2lk_2_socket_8h_1a038a308a5e7246ac41ca22c43d7209d1" kindref="member">LuaStackSize</ref></type>
        <definition>LuaStackSize zmq::Socket::recv</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>recv</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Receive a message (blocks). Should NOT be used while already in a <ref refid="classzmq_1_1_socket_1a9d6e15efa968134db3ceaf2c6516f4ad" kindref="member">request()</ref> or <ref refid="classzmq_1_1_socket_1ac9afea253b7419e252a348b06a09fb46" kindref="member">recv()</ref>. For a server, this should typically be used inside the loop. We pass the lua_State to avoid mixing thread contexts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="235" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="235" bodyend="249"/>
        <references refid="msgpack_8h_1ac85382666450aa97773427832b79652d">msgpack_bin_to_lua</references>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1a8c9e876a842883a8a25c4647ec1039c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmq::Socket::send</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>send</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a message packed with msgpack. Varying parameters. <simplesect kind="return"><para>false in case the send buffer is full. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="255" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="255" bodyend="270"/>
        <references refid="cv_8h_1ac9db6ccf8d1a2abfd9a0a162547f9666" compoundref="cv_8h" startline="391">buffer</references>
        <references refid="structmsgpack__sbuffer_1a2dc6fcda73b0e59f3dcaa61b7e85837d" compoundref="msgpack_8h" startline="41">msgpack_sbuffer::data</references>
        <references refid="msgpack_8h_1acb585ec742d4be93f13cc8731f734d28">free_msgpack_msg</references>
        <references refid="msgpack_8h_1a1dd8a74096eebc9fda9e552668ce3df1">msgpack_lua_to_bin</references>
        <references refid="structmsgpack__sbuffer_1a7779f75edb79f38b4f987e04985011f3" compoundref="msgpack_8h" startline="40">msgpack_sbuffer::size</references>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1adb9c798cb32e1b4b2a1488f6d509adc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool zmq::Socket::rawSend</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>rawSend</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends raw bytes without using msgpack. <simplesect kind="return"><para>false in case the send buffer is full. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="275" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="275" bodyend="288"/>
        <references refid="cv_8h_1acd1647952fba31484ea63d6f1140e509" compoundref="cv_8h" startline="841">data</references>
        <references refid="cv_8h_1a854352f53b148adc24983a58a1866d66" compoundref="cv_8h" startline="1397">size</references>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1a9d6e15efa968134db3ceaf2c6516f4ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lk_2include_2lk_2_socket_8h_1a038a308a5e7246ac41ca22c43d7209d1" kindref="member">LuaStackSize</ref></type>
        <definition>LuaStackSize zmq::Socket::request</definition>
        <argsstring>(lua_State *L)</argsstring>
        <name>request</name>
        <param>
          <type>lua_State *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request = remote call. Can be used by multiple threads. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="292" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="292" bodyend="357"/>
        <references refid="cv_8h_1ac9db6ccf8d1a2abfd9a0a162547f9666" compoundref="cv_8h" startline="391">buffer</references>
        <references refid="structmsgpack__sbuffer_1a2dc6fcda73b0e59f3dcaa61b7e85837d" compoundref="msgpack_8h" startline="41">msgpack_sbuffer::data</references>
        <references refid="msgpack_8h_1acb585ec742d4be93f13cc8731f734d28">free_msgpack_msg</references>
        <references refid="msgpack_8h_1ac85382666450aa97773427832b79652d">msgpack_bin_to_lua</references>
        <references refid="msgpack_8h_1a1dd8a74096eebc9fda9e552668ce3df1">msgpack_lua_to_bin</references>
        <references refid="structmsgpack__sbuffer_1a7779f75edb79f38b4f987e04985011f3" compoundref="msgpack_8h" startline="40">msgpack_sbuffer::size</references>
        <references refid="cvaux_8h_1a7e7356db167a8b78d03c01efc265b638" compoundref="cvaux_8h" startline="695">start</references>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1a2db0d2f61412a6acaa0ba92bf12dd942" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* zmq::Socket::location</definition>
        <argsstring>()</argsstring>
        <name>location</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="359" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="359" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1a283c0ffa93cb186a8de58739b0eef914" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int zmq::Socket::port</definition>
        <argsstring>()</argsstring>
        <name>port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="363" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="363" bodyend="370"/>
        <references refid="cxcore_8h_1a6492959798ef439146ab2816fe754d81" compoundref="cxcore_8h" startline="958">pos</references>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1afffa4ad08098ae2356b42efa851b5e1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* zmq::Socket::type</definition>
        <argsstring>() const </argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a string representing the socket type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="374" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="374" bodyend="387"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classzmq_1_1_socket_1a006ba13cc78ab465f381d84223db097b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zmq::Socket::throw_bind_error</definition>
        <argsstring>(int err, const char *location)</argsstring>
        <name>throw_bind_error</name>
        <param>
          <type>int</type>
          <declname>err</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="391" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="391" bodyend="409"/>
        <references refid="cv_8h_1a8bc957583d2a5247e490ea9ce960cf21" compoundref="cv_8h" startline="831">type</references>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1abf9a79140e1b334387bb8962ae87b18b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zmq::Socket::throw_recv_error</definition>
        <argsstring>(int err)</argsstring>
        <name>throw_recv_error</name>
        <param>
          <type>int</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="411" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="411" bodyend="425"/>
        <references refid="cv_8h_1a8bc957583d2a5247e490ea9ce960cf21" compoundref="cv_8h" startline="831">type</references>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1a2004a53949cd7211ef1d2c0a8855d7bb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zmq::Socket::throw_poll_error</definition>
        <argsstring>(int err)</argsstring>
        <name>throw_poll_error</name>
        <param>
          <type>int</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="427" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="427" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classzmq_1_1_socket_1aefd91d4db525ae071c63bf201798e8bc" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void zmq::Socket::throw_send_error</definition>
        <argsstring>(int err)</argsstring>
        <name>throw_send_error</name>
        <param>
          <type>int</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="438" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="438" bodyend="452"/>
        <references refid="cv_8h_1a8bc957583d2a5247e490ea9ce960cf21" compoundref="cv_8h" startline="831">type</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ZeroMQ <ref refid="classzmq_1_1_socket" kindref="compound">Socket</ref>.</para><para><simplesect kind="par"><title>Bindings info:</title><para>lib_name:&apos;Socket_core&apos; string_format:&apos;%s (%s)&apos; string_args:&apos;(*userdata)-&gt;<ref refid="classzmq_1_1_socket_1a2db0d2f61412a6acaa0ba92bf12dd942" kindref="member">location()</ref>, (*userdata)-&gt;<ref refid="classzmq_1_1_socket_1afffa4ad08098ae2356b42efa851b5e1f" kindref="member">type()</ref>&apos; </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2418">
        <label>lubyk::LuaObject</label>
        <link refid="classlubyk_1_1_lua_object"/>
      </node>
      <node id="2417">
        <label>zmq::Socket</label>
        <link refid="classzmq_1_1_socket"/>
        <childnode refid="2418" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2421">
        <label>lubyk::Worker</label>
        <link refid="classlubyk_1_1_worker"/>
        <childnode refid="2422" relation="usage">
          <edgelabel>time_ref_</edgelabel>
        </childnode>
      </node>
      <node id="2423">
        <label>lubyk::NonCopyable</label>
        <link refid="classlubyk_1_1_non_copyable"/>
      </node>
      <node id="2420">
        <label>lubyk::LuaObject</label>
        <link refid="classlubyk_1_1_lua_object"/>
        <childnode refid="2421" relation="usage">
          <edgelabel>worker_</edgelabel>
        </childnode>
      </node>
      <node id="2422">
        <label>lubyk::TimeRef</label>
        <link refid="classlubyk_1_1_time_ref"/>
        <childnode refid="2423" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2419">
        <label>zmq::Socket</label>
        <link refid="classzmq_1_1_socket"/>
        <childnode refid="2420" relation="public-inheritance">
        </childnode>
        <childnode refid="2422" relation="usage">
          <edgelabel>time_ref_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" line="55" bodyfile="/Users/gaspard/git/lubyk/modules/zmq/include/zmq/Socket.h" bodystart="54" bodyend="453"/>
    <listofallmembers>
      <member refid="classzmq_1_1_socket_1aba886d2247712d2f85cce98f04960226" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>bind</name></member>
      <member refid="classzmq_1_1_socket_1a5bb530a06ae28aed7e9b26094045d541" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>bind</name></member>
      <member refid="classlubyk_1_1_lua_object_1a2f029a24ba32a5874fdeaad2c0860928" prot="protected" virt="non-virtual"><scope>zmq::Socket</scope><name>class_name_</name></member>
      <member refid="classzmq_1_1_socket_1a1fb452e66fbc3080430b07b18d53772e" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>connect</name></member>
      <member refid="classzmq_1_1_socket_1a6913e6251911ecb39c2d03638e72f3a3" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>fd</name></member>
      <member refid="classzmq_1_1_socket_1ae65e9573a8dcc32dc83242aec20a29ec" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>hasEvent</name></member>
      <member refid="classzmq_1_1_socket_1a2db0d2f61412a6acaa0ba92bf12dd942" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>location</name></member>
      <member refid="classzmq_1_1_socket_1ab9140c21bb2248b528acac9670634675" prot="private" virt="non-virtual"><scope>zmq::Socket</scope><name>location_</name></member>
      <member refid="classlubyk_1_1_lua_object_1af2a0c939d4b45279d4d975c2ecfa190f" prot="protected" virt="non-virtual"><scope>zmq::Socket</scope><name>luaCleanup</name></member>
      <member refid="classlubyk_1_1_lua_object_1a2a50fa2745ef36d40ff676426784ea6a" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>luaDestroy</name></member>
      <member refid="classlubyk_1_1_lua_object_1afc36a0ff048ab6ebe7e43b4717d45bec" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>luaInit</name></member>
      <member refid="classlubyk_1_1_lua_object_1a6c17506fca71fe4b2e46a33f46724035" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>LuaObject</name></member>
      <member refid="classzmq_1_1_socket_1a6368feb544053a5a867a590000aeb1de" prot="private" virt="non-virtual"><scope>zmq::Socket</scope><name>Poller</name></member>
      <member refid="classzmq_1_1_socket_1a283c0ffa93cb186a8de58739b0eef914" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>port</name></member>
      <member refid="classzmq_1_1_socket_1adb9c798cb32e1b4b2a1488f6d509adc1" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>rawSend</name></member>
      <member refid="classzmq_1_1_socket_1ac9afea253b7419e252a348b06a09fb46" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>recv</name></member>
      <member refid="classzmq_1_1_socket_1a9d6e15efa968134db3ceaf2c6516f4ad" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>request</name></member>
      <member refid="classzmq_1_1_socket_1a8c9e876a842883a8a25c4647ec1039c7" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>send</name></member>
      <member refid="classzmq_1_1_socket_1a2494e6be34e6491248e3fc9aae01e79c" prot="private" virt="non-virtual"><scope>zmq::Socket</scope><name>send_flags_</name></member>
      <member refid="classzmq_1_1_socket_1ab85fbea3c413a711e0ac6589448fb466" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>setNonBlocking</name></member>
      <member refid="classzmq_1_1_socket_1ad7a88861054408143e59724dd87f6b5e" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>setsockopt</name></member>
      <member refid="classlubyk_1_1_lua_object_1a501b5ac2d9c782adadaa5682d5757e57" prot="protected" virt="non-virtual"><scope>zmq::Socket</scope><name>setupMetatable</name></member>
      <member refid="classlubyk_1_1_lua_object_1a3518f64d461ebb94123ee8d5e15bf587" prot="protected" virt="non-virtual"><scope>zmq::Socket</scope><name>setupSuper</name></member>
      <member refid="classzmq_1_1_socket_1ab20b347056a6dcb162f3deef4ac2a63c" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>Socket</name></member>
      <member refid="classzmq_1_1_socket_1a069f600701355be727b06d9f2dd7f976" prot="private" virt="non-virtual"><scope>zmq::Socket</scope><name>socket_</name></member>
      <member refid="classzmq_1_1_socket_1a006ba13cc78ab465f381d84223db097b" prot="private" virt="non-virtual"><scope>zmq::Socket</scope><name>throw_bind_error</name></member>
      <member refid="classzmq_1_1_socket_1a2004a53949cd7211ef1d2c0a8855d7bb" prot="private" virt="non-virtual"><scope>zmq::Socket</scope><name>throw_poll_error</name></member>
      <member refid="classzmq_1_1_socket_1abf9a79140e1b334387bb8962ae87b18b" prot="private" virt="non-virtual"><scope>zmq::Socket</scope><name>throw_recv_error</name></member>
      <member refid="classzmq_1_1_socket_1aefd91d4db525ae071c63bf201798e8bc" prot="private" virt="non-virtual"><scope>zmq::Socket</scope><name>throw_send_error</name></member>
      <member refid="classzmq_1_1_socket_1a2a1ea503ff3a43dd8982e9b105fcea50" prot="private" virt="non-virtual"><scope>zmq::Socket</scope><name>time_ref_</name></member>
      <member refid="classzmq_1_1_socket_1afffa4ad08098ae2356b42efa851b5e1f" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>type</name></member>
      <member refid="classzmq_1_1_socket_1ad4347e6eaf983accf60cfb5aed31020b" prot="private" virt="non-virtual"><scope>zmq::Socket</scope><name>type_</name></member>
      <member refid="classlubyk_1_1_lua_object_1a478ec53634fb32f2b579151620a0b42e" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>worker_</name></member>
      <member refid="classlubyk_1_1_lua_object_1a235e4f757270c3910b4e4221cab32b81" prot="public" virt="virtual"><scope>zmq::Socket</scope><name>~LuaObject</name></member>
      <member refid="classzmq_1_1_socket_1a2844b4299a3e410d88832943b4c6524f" prot="public" virt="non-virtual"><scope>zmq::Socket</scope><name>~Socket</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
